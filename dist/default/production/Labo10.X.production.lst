

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 07 17:47:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 06/04/2022 GMT
    59                           ; 
    60                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F45K50 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     _LATBbits	set	3978
    93   000000                     _LATDbits	set	3980
    94   000000                     _ANSELB	set	3932
    95   000000                     _ANSELD	set	3934
    96   000000                     _PORTDbits	set	3971
    97   000000                     _LATB	set	3978
    98   000000                     _LATD	set	3980
    99   000000                     _OSCCONbits	set	4051
   100   000000                     _T0CONbits	set	4053
   101   000000                     _TRISB	set	3987
   102   000000                     _TRISD	set	3989
   103   000000                     _RCONbits	set	4048
   104   000000                     _TMR0	set	4054
   105   000000                     _INTCON2bits	set	4081
   106   000000                     _INTCONbits	set	4082
   107                           
   108                           	psect	smallconst
   109   000800                     __psmallconst:
   110                           	callstack 0
   111   000800  00                 	db	0
   112   000801                     STR_1:
   113   000801  44                 	db	68	;'D'
   114   000802  69                 	db	105	;'i'
   115   000803  73                 	db	115	;'s'
   116   000804  74                 	db	116	;'t'
   117   000805  61                 	db	97	;'a'
   118   000806  6E                 	db	110	;'n'
   119   000807  63                 	db	99	;'c'
   120   000808  69                 	db	105	;'i'
   121   000809  61                 	db	97	;'a'
   122   00080A  3A                 	db	58	;':'
   123   00080B  20                 	db	32
   124   00080C  00                 	db	0
   125   00080D                     STR_2:
   126   00080D  25                 	db	37
   127   00080E  30                 	db	48	;'0'
   128   00080F  36                 	db	54	;'6'
   129   000810  2E                 	db	46
   130   000811  30                 	db	48	;'0'
   131   000812  32                 	db	50	;'2'
   132   000813  66                 	db	102	;'f'
   133   000814  00                 	db	0
   134   000815                     STR_3:
   135   000815  69                 	db	105	;'i'
   136   000816  6E                 	db	110	;'n'
   137   000817  66                 	db	102	;'f'
   138   000818  00                 	db	0
   139   000819                     STR_6:
   140   000819  6E                 	db	110	;'n'
   141   00081A  61                 	db	97	;'a'
   142   00081B  6E                 	db	110	;'n'
   143   00081C  00                 	db	0
   144   00081D  00                 	db	0	; dummy byte at the end
   145   000000                     
   146                           ; #config settings
   147                           
   148                           	psect	cinit
   149   00347A                     __pcinit:
   150                           	callstack 0
   151   00347A                     start_initialization:
   152                           	callstack 0
   153   00347A                     __initialization:
   154                           	callstack 0
   155                           
   156                           ; Clear objects allocated to BANK1 (80 bytes)
   157   00347A  EE01  F000         	lfsr	0,__pbssBANK1
   158   00347E  0E50               	movlw	80
   159   003480                     clear_0:
   160   003480  6AEE               	clrf	postinc0,c
   161   003482  06E8               	decf	wreg,f,c
   162   003484  E1FD               	bnz	clear_0
   163                           
   164                           ; Clear objects allocated to BANK0 (43 bytes)
   165   003486  EE00  F0C1         	lfsr	0,__pbssBANK0
   166   00348A  0E2B               	movlw	43
   167   00348C                     clear_1:
   168   00348C  6AEE               	clrf	postinc0,c
   169   00348E  06E8               	decf	wreg,f,c
   170   003490  E1FD               	bnz	clear_1
   171                           
   172                           ; Clear objects allocated to COMRAM (1 bytes)
   173   003492  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   174   003494                     end_of_initialization:
   175                           	callstack 0
   176   003494                     __end_of__initialization:
   177                           	callstack 0
   178   003494  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   179   003496  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   180   003498  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181   00349A  6EF8               	movwf	tblptru,c
   182   00349C  0100               	movlb	0
   183   00349E  EFB7  F011         	goto	_main	;jump to C main() function
   184                           
   185                           	psect	bssCOMRAM
   186   00005E                     __pbssCOMRAM:
   187                           	callstack 0
   188   00005E                     _flags:
   189                           	callstack 0
   190   00005E                     	ds	1
   191                           
   192                           	psect	bssBANK0
   193   0000C1                     __pbssBANK0:
   194                           	callstack 0
   195   0000C1                     floorf@F526:
   196                           	callstack 0
   197   0000C1                     	ds	4
   198   0000C5                     ___fpclassifyf@F465:
   199                           	callstack 0
   200   0000C5                     	ds	4
   201   0000C9                     _distance:
   202                           	callstack 0
   203   0000C9                     	ds	4
   204   0000CD                     _width:
   205                           	callstack 0
   206   0000CD                     	ds	2
   207   0000CF                     _prec:
   208                           	callstack 0
   209   0000CF                     	ds	2
   210   0000D1                     _counterTMR0:
   211                           	callstack 0
   212   0000D1                     	ds	2
   213   0000D3                     _is_danger:
   214                           	callstack 0
   215   0000D3                     	ds	1
   216   0000D4                     _strDistance:
   217                           	callstack 0
   218   0000D4                     	ds	20
   219   0000E8                     _time:
   220                           	callstack 0
   221   0000E8                     	ds	4
   222                           
   223                           	psect	bssBANK1
   224   000100                     __pbssBANK1:
   225                           	callstack 0
   226   000100                     _dbuf:
   227                           	callstack 0
   228   000100                     	ds	80
   229                           
   230                           	psect	cstackBANK0
   231   000060                     __pcstackBANK0:
   232                           	callstack 0
   233   000060                     efgtoa@ne:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x0
   237   000060                     	ds	2
   238   000062                     efgtoa@p:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x2
   242   000062                     	ds	2
   243   000064                     efgtoa@t:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x4
   247   000064                     	ds	2
   248   000066                     _efgtoa$1107:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x6
   252   000066                     	ds	2
   253   000068                     efgtoa@pp:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x8
   257   000068                     	ds	1
   258   000069                     efgtoa@mode:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x9
   262   000069                     	ds	1
   263   00006A                     efgtoa@nmode:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0xA
   267   00006A                     	ds	1
   268   00006B                     efgtoa@d:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0xB
   272   00006B                     	ds	2
   273   00006D                     efgtoa@m:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0xD
   277   00006D                     	ds	2
   278   00006F                     efgtoa@e:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0xF
   282   00006F                     	ds	2
   283   000071                     efgtoa@w:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x11
   287   000071                     	ds	2
   288   000073                     efgtoa@ou:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x13
   292   000073                     	ds	4
   293   000077                     efgtoa@h:
   294                           	callstack 0
   295                           
   296                           ; 4 bytes @ 0x17
   297   000077                     	ds	4
   298   00007B                     efgtoa@l:
   299                           	callstack 0
   300                           
   301                           ; 4 bytes @ 0x1B
   302   00007B                     	ds	4
   303   00007F                     efgtoa@i:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x1F
   307   00007F                     	ds	2
   308   000081                     efgtoa@sign:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x21
   312   000081                     	ds	1
   313   000082                     efgtoa@g:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x22
   317   000082                     	ds	4
   318   000086                     efgtoa@n:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x26
   322   000086                     	ds	2
   323   000088                     efgtoa@u:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0x28
   327   000088                     	ds	4
   328   00008C                     vfpfcnvrt@fp:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x2C
   332   00008C                     	ds	2
   333   00008E                     vfpfcnvrt@fmt:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x2E
   337   00008E                     	ds	2
   338   000090                     vfpfcnvrt@ap:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x30
   342   000090                     	ds	2
   343   000092                     ??_vfpfcnvrt:
   344                           
   345                           ; 1 bytes @ 0x32
   346   000092                     	ds	3
   347   000095                     vfpfcnvrt@convarg:
   348                           	callstack 0
   349                           
   350                           ; 8 bytes @ 0x35
   351   000095                     	ds	8
   352   00009D                     vfpfcnvrt@done:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x3D
   356   00009D                     	ds	2
   357   00009F                     vfpfcnvrt@c:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x3F
   361   00009F                     	ds	1
   362   0000A0                     vfpfcnvrt@cp:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x40
   366   0000A0                     	ds	2
   367   0000A2                     ?_vfprintf:
   368                           	callstack 0
   369   0000A2                     vfprintf@fp:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x42
   373   0000A2                     	ds	2
   374   0000A4                     vfprintf@fmt:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x44
   378   0000A4                     	ds	2
   379   0000A6                     vfprintf@ap:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x46
   383   0000A6                     	ds	2
   384   0000A8                     vfprintf@cfmt:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x48
   388   0000A8                     	ds	2
   389   0000AA                     ?_sprintf:
   390                           	callstack 0
   391   0000AA                     sprintf@s:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x4A
   395   0000AA                     	ds	2
   396   0000AC                     sprintf@fmt:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x4C
   400   0000AC                     	ds	6
   401   0000B2                     sprintf@ap:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x52
   405   0000B2                     	ds	2
   406   0000B4                     sprintf@f:
   407                           	callstack 0
   408                           
   409                           ; 11 bytes @ 0x54
   410   0000B4                     	ds	11
   411   0000BF                     ??_main:
   412                           
   413                           ; 1 bytes @ 0x5F
   414   0000BF                     	ds	2
   415                           
   416                           	psect	cstackCOMRAM
   417   000001                     __pcstackCOMRAM:
   418                           	callstack 0
   419   000001                     ?___fpclassifyf:
   420                           	callstack 0
   421   000001                     ?_isdigit:
   422                           	callstack 0
   423   000001                     ?_isspace:
   424                           	callstack 0
   425   000001                     ?___wmul:
   426                           	callstack 0
   427   000001                     ?___fladd:
   428                           	callstack 0
   429   000001                     ?_labs:
   430                           	callstack 0
   431   000001                     ?___flneg:
   432                           	callstack 0
   433   000001                     ?___fltol:
   434                           	callstack 0
   435   000001                     ?___xxtofl:
   436                           	callstack 0
   437   000001                     Lcd_Port@a:
   438                           	callstack 0
   439   000001                     ___wmul@multiplier:
   440                           	callstack 0
   441   000001                     isdigit@c:
   442                           	callstack 0
   443   000001                     isspace@c:
   444                           	callstack 0
   445   000001                     memcpy@d1:
   446                           	callstack 0
   447   000001                     fputc@c:
   448                           	callstack 0
   449   000001                     strcpy@dest:
   450                           	callstack 0
   451   000001                     ___fleq@ff1:
   452                           	callstack 0
   453   000001                     ___flneg@f1:
   454                           	callstack 0
   455   000001                     ___fltol@f1:
   456                           	callstack 0
   457   000001                     ___fladd@b:
   458                           	callstack 0
   459   000001                     ___xxtofl@val:
   460                           	callstack 0
   461   000001                     ___fpclassifyf@x:
   462                           	callstack 0
   463   000001                     labs@a:
   464                           	callstack 0
   465                           
   466                           ; 4 bytes @ 0x0
   467   000001                     	ds	1
   468   000002                     ??_Lcd_Cmd:
   469   000002                     Lcd_Write_Char@temp:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x1
   473   000002                     	ds	1
   474   000003                     ??_isdigit:
   475   000003                     ??_isspace:
   476   000003                     Lcd_Cmd@a:
   477                           	callstack 0
   478   000003                     Lcd_Write_Char@y:
   479                           	callstack 0
   480   000003                     ___wmul@multiplicand:
   481                           	callstack 0
   482   000003                     memcpy@s1:
   483                           	callstack 0
   484   000003                     fputc@fp:
   485                           	callstack 0
   486   000003                     strcpy@src:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x2
   490   000003                     	ds	1
   491   000004                     ??_Lcd_Init:
   492   000004                     Lcd_Set_Cursor@b:
   493                           	callstack 0
   494   000004                     Lcd_Write_Char@a:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x3
   498   000004                     	ds	1
   499   000005                     ??_fputc:
   500   000005                     ??___fpclassifyf:
   501   000005                     ??_labs:
   502   000005                     ??___fltol:
   503   000005                     ??___xxtofl:
   504   000005                     Lcd_Set_Cursor@a:
   505                           	callstack 0
   506   000005                     _isspace$1185:
   507                           	callstack 0
   508   000005                     Lcd_Write_String@a:
   509                           	callstack 0
   510   000005                     ___wmul@product:
   511                           	callstack 0
   512   000005                     memcpy@n:
   513                           	callstack 0
   514   000005                     strcpy@s:
   515                           	callstack 0
   516   000005                     ___fleq@ff2:
   517                           	callstack 0
   518   000005                     ___fladd@a:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x4
   522   000005                     	ds	1
   523   000006                     Lcd_Set_Cursor@z:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x5
   527   000006                     	ds	1
   528   000007                     ??_Lcd_Write_String:
   529   000007                     ?_atoi:
   530                           	callstack 0
   531   000007                     Lcd_Set_Cursor@y:
   532                           	callstack 0
   533   000007                     atoi@s:
   534                           	callstack 0
   535   000007                     memcpy@d:
   536                           	callstack 0
   537   000007                     strcpy@d:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x6
   541   000007                     	ds	1
   542   000008                     Lcd_Set_Cursor@temp:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x7
   546   000008                     	ds	1
   547   000009                     ??___fladd:
   548   000009                     ??_atoi:
   549   000009                     ??___fleq:
   550   000009                     ___fltol@sign1:
   551                           	callstack 0
   552   000009                     ___xxtofl@sign:
   553                           	callstack 0
   554   000009                     Lcd_Write_String@i:
   555                           	callstack 0
   556   000009                     ___fpclassifyf@e:
   557                           	callstack 0
   558   000009                     memcpy@s:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x8
   562   000009                     	ds	1
   563   00000A                     ___fltol@exp1:
   564                           	callstack 0
   565   00000A                     ___xxtofl@exp:
   566                           	callstack 0
   567   00000A                     fputs@s:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x9
   571   00000A                     	ds	1
   572   00000B                     memcpy@tmp:
   573                           	callstack 0
   574   00000B                     ___xxtofl@arg:
   575                           	callstack 0
   576   00000B                     ___fpclassifyf@u:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0xA
   580   00000B                     	ds	1
   581   00000C                     atoi@neg:
   582                           	callstack 0
   583   00000C                     fputs@fp:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0xB
   587   00000C                     	ds	1
   588   00000D                     ___fladd@signs:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0xC
   592   00000D                     	ds	1
   593   00000E                     ___fladd@aexp:
   594                           	callstack 0
   595   00000E                     fputs@c:
   596                           	callstack 0
   597   00000E                     atoi@n:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0xD
   601   00000E                     	ds	1
   602   00000F                     ?___flmul:
   603                           	callstack 0
   604   00000F                     ___fladd@bexp:
   605                           	callstack 0
   606   00000F                     fputs@i:
   607                           	callstack 0
   608   00000F                     ___flmul@b:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0xE
   612   00000F                     	ds	1
   613   000010                     ___fladd@grs:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0xF
   617   000010                     	ds	1
   618   000011                     pad@fp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x10
   622   000011                     	ds	2
   623   000013                     pad@buf:
   624                           	callstack 0
   625   000013                     ___flmul@a:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x12
   629   000013                     	ds	2
   630   000015                     pad@p:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x14
   634   000015                     	ds	2
   635   000017                     ??___flmul:
   636   000017                     ??_pad:
   637                           
   638                           ; 1 bytes @ 0x16
   639   000017                     	ds	1
   640   000018                     pad@i:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x17
   644   000018                     	ds	2
   645   00001A                     pad@w:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x19
   649   00001A                     	ds	1
   650   00001B                     ___flmul@sign:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x1A
   654   00001B                     	ds	1
   655   00001C                     ___flmul@grs:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x1B
   659   00001C                     	ds	4
   660   000020                     ___flmul@aexp:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x1F
   664   000020                     	ds	1
   665   000021                     ___flmul@bexp:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x20
   669   000021                     	ds	1
   670   000022                     ___flmul@prod:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x21
   674   000022                     	ds	4
   675   000026                     ___flmul@temp:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x25
   679   000026                     	ds	2
   680   000028                     ?___fldiv:
   681                           	callstack 0
   682   000028                     ?___flsub:
   683                           	callstack 0
   684   000028                     ___flge@ff1:
   685                           	callstack 0
   686   000028                     ___flsub@b:
   687                           	callstack 0
   688   000028                     ___fldiv@b:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x27
   692   000028                     	ds	4
   693   00002C                     ___flge@ff2:
   694                           	callstack 0
   695   00002C                     ___flsub@a:
   696                           	callstack 0
   697   00002C                     ___fldiv@a:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x2B
   701   00002C                     	ds	4
   702   000030                     ??___fldiv:
   703   000030                     ??___flge:
   704                           
   705                           ; 1 bytes @ 0x2F
   706   000030                     	ds	4
   707   000034                     ___fldiv@rem:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x33
   711   000034                     	ds	4
   712   000038                     ___fldiv@sign:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x37
   716   000038                     	ds	1
   717   000039                     ___fldiv@new_exp:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x38
   721   000039                     	ds	2
   722   00003B                     ___fldiv@grs:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x3A
   726   00003B                     	ds	4
   727   00003F                     ___fldiv@bexp:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x3E
   731   00003F                     	ds	1
   732   000040                     ___fldiv@aexp:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x3F
   736   000040                     	ds	1
   737   000041                     ?_floorf:
   738                           	callstack 0
   739   000041                     floorf@x:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x40
   743   000041                     	ds	4
   744   000045                     ??_floorf:
   745                           
   746                           ; 1 bytes @ 0x44
   747   000045                     	ds	6
   748   00004B                     floorf@m:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x4A
   752   00004B                     	ds	4
   753   00004F                     floorf@e:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x4E
   757   00004F                     	ds	2
   758   000051                     floorf@u:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x50
   762   000051                     	ds	4
   763   000055                     efgtoa@fp:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x54
   767   000055                     	ds	2
   768   000057                     efgtoa@f:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x56
   772   000057                     	ds	4
   773   00005B                     efgtoa@c:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x5A
   777   00005B                     	ds	1
   778   00005C                     ??_efgtoa:
   779                           
   780                           ; 1 bytes @ 0x5B
   781   00005C                     	ds	2
   782   00005E                     
   783                           ; 1 bytes @ 0x5D
   784 ;;
   785 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   786 ;;
   787 ;; *************** function _main *****************
   788 ;; Defined at:
   789 ;;		line 19 in file "main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  2  114[None  ] int 
   796 ;; Registers used:
   797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   803 ;;      Params:         0       0       0       0       0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0       0       0       0       0
   805 ;;      Temps:          0       2       0       0       0       0       0       0       0
   806 ;;      Totals:         0       2       0       0       0       0       0       0       0
   807 ;;Total ram usage:        2 bytes
   808 ;; Hardware stack levels required when called: 9
   809 ;; This function calls:
   810 ;;		_INTERRUPT_Global_Config
   811 ;;		_INTERRUPT_INTx_Config
   812 ;;		_Lcd_Clear
   813 ;;		_Lcd_Init
   814 ;;		_Lcd_Set_Cursor
   815 ;;		_Lcd_Write_String
   816 ;;		_OSCILADOR_Init
   817 ;;		_PORT_Init
   818 ;;		_TMR0_Init
   819 ;;		___fldiv
   820 ;;		___flge
   821 ;;		___flmul
   822 ;;		___xxtofl
   823 ;;		_sprintf
   824 ;; This function is called by:
   825 ;;		Startup code after reset
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text0
   830   00236E                     __ptext0:
   831                           	callstack 0
   832   00236E                     _main:
   833                           	callstack 22
   834   00236E                     
   835                           ;main.c: 21:     OSCILADOR_Init();
   836   00236E  EC91  F01A         	call	_OSCILADOR_Init	;wreg free
   837                           
   838                           ;main.c: 22:  PORT_Init();
   839   002372  EC80  F01A         	call	_PORT_Init	;wreg free
   840                           
   841                           ;main.c: 23:     TMR0_Init();
   842   002376  EC74  F01A         	call	_TMR0_Init	;wreg free
   843   00237A                     
   844                           ;main.c: 24:     Lcd_Init();
   845   00237A  EC1B  F018         	call	_Lcd_Init	;wreg free
   846   00237E                     
   847                           ;main.c: 25:     Lcd_Clear();
   848   00237E  EC8A  F01A         	call	_Lcd_Clear	;wreg free
   849   002382                     
   850                           ;main.c: 26:     INTERRUPT_Global_Config();
   851   002382  EC9A  F01A         	call	_INTERRUPT_Global_Config	;wreg free
   852   002386                     
   853                           ;main.c: 27:     INTERRUPT_INTx_Config();
   854   002386  EC96  F01A         	call	_INTERRUPT_INTx_Config	;wreg free
   855   00238A                     
   856                           ;main.c: 29:     Lcd_Set_Cursor(1, 1);
   857   00238A  0E01               	movlw	1
   858   00238C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   859   00238E  0E01               	movlw	1
   860   002390  EC8C  F018         	call	_Lcd_Set_Cursor
   861   002394                     
   862                           ;main.c: 30:     Lcd_Write_String("Distancia: ");
   863   002394  0E01               	movlw	low STR_1
   864   002396  6E05               	movwf	Lcd_Write_String@a^0,c
   865   002398  0E08               	movlw	high STR_1
   866   00239A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   867   00239C  ECDC  F017         	call	_Lcd_Write_String	;wreg free
   868   0023A0                     
   869                           ;main.c: 32:     LATB = 0b00001111;
   870   0023A0  0E0F               	movlw	15
   871   0023A2  6E8A               	movwf	138,c	;volatile
   872   0023A4                     l3813:
   873                           
   874                           ;main.c: 36:         LATDbits.LATD0 = 1;
   875   0023A4  808C               	bsf	140,0,c	;volatile
   876   0023A6                     
   877                           ;main.c: 37:         _delay((unsigned long)((15)*(16000000UL/4000000.0)));
   878   0023A6  0E14               	movlw	20
   879   0023A8                     u4097:
   880   0023A8  2EE8               	decfsz	wreg,f,c
   881   0023AA  D7FE               	bra	u4097
   882   0023AC                     
   883                           ;main.c: 38:         LATDbits.LATD0 = 0;
   884   0023AC  908C               	bcf	140,0,c	;volatile
   885   0023AE                     l116:
   886   0023AE  A283               	btfss	131,1,c	;volatile
   887   0023B0  EFDC  F011         	goto	u4031
   888   0023B4  EFDE  F011         	goto	u4030
   889   0023B8                     u4031:
   890   0023B8  EFD7  F011         	goto	l116
   891   0023BC                     u4030:
   892   0023BC                     
   893                           ;main.c: 42:         T0CONbits.TMR0ON = 1;
   894   0023BC  8ED5               	bsf	213,7,c	;volatile
   895   0023BE                     l119:
   896   0023BE  B283               	btfsc	131,1,c	;volatile
   897   0023C0  EFE4  F011         	goto	u4041
   898   0023C4  EFE6  F011         	goto	u4040
   899   0023C8                     u4041:
   900   0023C8  EFDF  F011         	goto	l119
   901   0023CC                     u4040:
   902   0023CC                     
   903                           ;main.c: 46:         T0CONbits.TMR0ON = 0;
   904   0023CC  9ED5               	bcf	213,7,c	;volatile
   905                           
   906                           ;main.c: 48:         counterTMR0 = TMR0;
   907   0023CE  CFD6 F0D1          	movff	4054,_counterTMR0	;volatile
   908   0023D2  CFD7 F0D2          	movff	4055,_counterTMR0+1	;volatile
   909   0023D6                     
   910                           ;main.c: 49:         TMR0 = 0;
   911   0023D6  0E00               	movlw	0
   912   0023D8  6ED7               	movwf	215,c	;volatile
   913   0023DA  0E00               	movlw	0
   914   0023DC  6ED6               	movwf	214,c	;volatile
   915   0023DE                     
   916                           ;main.c: 51:         time = counterTMR0 * 2.0 / 1000000.0;
   917   0023DE  0E00               	movlw	0
   918   0023E0  6E13               	movwf	___flmul@a^0,c
   919   0023E2  0E00               	movlw	0
   920   0023E4  6E14               	movwf	(___flmul@a+1)^0,c
   921   0023E6  0E00               	movlw	0
   922   0023E8  6E15               	movwf	(___flmul@a+2)^0,c
   923   0023EA  0E40               	movlw	64
   924   0023EC  6E16               	movwf	(___flmul@a+3)^0,c
   925   0023EE  C0D1  F001         	movff	_counterTMR0,___xxtofl@val
   926   0023F2  C0D2  F002         	movff	_counterTMR0+1,___xxtofl@val+1
   927   0023F6  6A03               	clrf	(___xxtofl@val+2)^0,c
   928   0023F8  6A04               	clrf	(___xxtofl@val+3)^0,c
   929   0023FA  0E00               	movlw	0
   930   0023FC  ECCA  F013         	call	___xxtofl
   931   002400  C001  F00F         	movff	?___xxtofl,___flmul@b
   932   002404  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   933   002408  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   934   00240C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   935   002410  ECD5  F00D         	call	___flmul	;wreg free
   936   002414  C00F  F028         	movff	?___flmul,___fldiv@b
   937   002418  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   938   00241C  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   939   002420  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   940   002424  0E00               	movlw	0
   941   002426  6E2C               	movwf	___fldiv@a^0,c
   942   002428  0E24               	movlw	36
   943   00242A  6E2D               	movwf	(___fldiv@a+1)^0,c
   944   00242C  0E74               	movlw	116
   945   00242E  6E2E               	movwf	(___fldiv@a+2)^0,c
   946   002430  0E49               	movlw	73
   947   002432  6E2F               	movwf	(___fldiv@a+3)^0,c
   948   002434  ECEA  F00F         	call	___fldiv	;wreg free
   949   002438  C028  F0E8         	movff	?___fldiv,_time
   950   00243C  C029  F0E9         	movff	?___fldiv+1,_time+1
   951   002440  C02A  F0EA         	movff	?___fldiv+2,_time+2
   952   002444  C02B  F0EB         	movff	?___fldiv+3,_time+3
   953   002448                     
   954                           ;main.c: 52:         time = time / 2;
   955   002448  C0E8  F028         	movff	_time,___fldiv@b
   956   00244C  C0E9  F029         	movff	_time+1,___fldiv@b+1
   957   002450  C0EA  F02A         	movff	_time+2,___fldiv@b+2
   958   002454  C0EB  F02B         	movff	_time+3,___fldiv@b+3
   959   002458  0E00               	movlw	0
   960   00245A  6E2C               	movwf	___fldiv@a^0,c
   961   00245C  0E00               	movlw	0
   962   00245E  6E2D               	movwf	(___fldiv@a+1)^0,c
   963   002460  0E00               	movlw	0
   964   002462  6E2E               	movwf	(___fldiv@a+2)^0,c
   965   002464  0E40               	movlw	64
   966   002466  6E2F               	movwf	(___fldiv@a+3)^0,c
   967   002468  ECEA  F00F         	call	___fldiv	;wreg free
   968   00246C  C028  F0E8         	movff	?___fldiv,_time
   969   002470  C029  F0E9         	movff	?___fldiv+1,_time+1
   970   002474  C02A  F0EA         	movff	?___fldiv+2,_time+2
   971   002478  C02B  F0EB         	movff	?___fldiv+3,_time+3
   972   00247C                     
   973                           ;main.c: 54:         distance = 34000.0 * time;
   974   00247C  C0E8  F00F         	movff	_time,___flmul@b
   975   002480  C0E9  F010         	movff	_time+1,___flmul@b+1
   976   002484  C0EA  F011         	movff	_time+2,___flmul@b+2
   977   002488  C0EB  F012         	movff	_time+3,___flmul@b+3
   978   00248C  0E00               	movlw	0
   979   00248E  6E13               	movwf	___flmul@a^0,c
   980   002490  0ED0               	movlw	208
   981   002492  6E14               	movwf	(___flmul@a+1)^0,c
   982   002494  0E04               	movlw	4
   983   002496  6E15               	movwf	(___flmul@a+2)^0,c
   984   002498  0E47               	movlw	71
   985   00249A  6E16               	movwf	(___flmul@a+3)^0,c
   986   00249C  ECD5  F00D         	call	___flmul	;wreg free
   987   0024A0  C00F  F0C9         	movff	?___flmul,_distance
   988   0024A4  C010  F0CA         	movff	?___flmul+1,_distance+1
   989   0024A8  C011  F0CB         	movff	?___flmul+2,_distance+2
   990   0024AC  C012  F0CC         	movff	?___flmul+3,_distance+3
   991   0024B0                     
   992                           ;main.c: 58:         Lcd_Set_Cursor(2, 1);
   993   0024B0  0E01               	movlw	1
   994   0024B2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   995   0024B4  0E02               	movlw	2
   996   0024B6  EC8C  F018         	call	_Lcd_Set_Cursor
   997   0024BA                     
   998                           ;main.c: 59:         sprintf(strDistance, "%06.02f", distance);
   999   0024BA  0ED4               	movlw	low _strDistance
  1000   0024BC  0100               	movlb	0	; () banked
  1001   0024BE  6FAA               	movwf	sprintf@s& (0+255),b
  1002   0024C0  0E00               	movlw	high _strDistance
  1003   0024C2  6FAB               	movwf	(sprintf@s+1)& (0+255),b
  1004   0024C4  0E0D               	movlw	low STR_2
  1005   0024C6  6FAC               	movwf	sprintf@fmt& (0+255),b
  1006   0024C8  0E08               	movlw	high STR_2
  1007   0024CA  6FAD               	movwf	(sprintf@fmt+1)& (0+255),b
  1008   0024CC  C0C9  F0AE         	movff	_distance,?_sprintf+4
  1009   0024D0  C0CA  F0AF         	movff	_distance+1,?_sprintf+5
  1010   0024D4  C0CB  F0B0         	movff	_distance+2,?_sprintf+6
  1011   0024D8  C0CC  F0B1         	movff	_distance+3,?_sprintf+7
  1012   0024DC  ECED  F018         	call	_sprintf	;wreg free
  1013   0024E0                     
  1014                           ;main.c: 60:         Lcd_Write_String(strDistance);
  1015   0024E0  0ED4               	movlw	low _strDistance
  1016   0024E2  6E05               	movwf	Lcd_Write_String@a^0,c
  1017   0024E4  0E00               	movlw	high _strDistance
  1018   0024E6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1019   0024E8  ECDC  F017         	call	_Lcd_Write_String	;wreg free
  1020   0024EC                     
  1021                           ;main.c: 64:         if ( distance < 10 ) {
  1022   0024EC  C0C9  F028         	movff	_distance,___flge@ff1
  1023   0024F0  C0CA  F029         	movff	_distance+1,___flge@ff1+1
  1024   0024F4  C0CB  F02A         	movff	_distance+2,___flge@ff1+2
  1025   0024F8  C0CC  F02B         	movff	_distance+3,___flge@ff1+3
  1026   0024FC  0E00               	movlw	0
  1027   0024FE  6E2C               	movwf	___flge@ff2^0,c
  1028   002500  0E00               	movlw	0
  1029   002502  6E2D               	movwf	(___flge@ff2+1)^0,c
  1030   002504  0E20               	movlw	32
  1031   002506  6E2E               	movwf	(___flge@ff2+2)^0,c
  1032   002508  0E41               	movlw	65
  1033   00250A  6E2F               	movwf	(___flge@ff2+3)^0,c
  1034   00250C  ECCC  F015         	call	___flge	;wreg free
  1035   002510  B0D8               	btfsc	status,0,c
  1036   002512  EF8D  F012         	goto	u4051
  1037   002516  EF8F  F012         	goto	u4050
  1038   00251A                     u4051:
  1039   00251A  EFBA  F012         	goto	l122
  1040   00251E                     u4050:
  1041   00251E                     
  1042                           ;main.c: 65:             is_danger = 1;
  1043   00251E  0E01               	movlw	1
  1044   002520  0100               	movlb	0	; () banked
  1045   002522  6FD3               	movwf	_is_danger& (0+255),b	;volatile
  1046                           
  1047                           ;main.c: 67:             while ( is_danger ) {
  1048   002524  EFB1  F012         	goto	l3843
  1049   002528                     l124:
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;main.c: 70:                 LATBbits.LATB4 = 1;
  1053   002528  888A               	bsf	138,4,c	;volatile
  1054                           
  1055                           ;main.c: 71:                 LATBbits.LATB5 = 1;
  1056   00252A  8A8A               	bsf	138,5,c	;volatile
  1057                           
  1058                           ;main.c: 72:                 LATBbits.LATB6 = 0;
  1059   00252C  9C8A               	bcf	138,6,c	;volatile
  1060   00252E                     
  1061                           ; BSR set to: 0
  1062                           ;main.c: 73:                 _delay((unsigned long)((100)*(16000000UL/4000.0)));
  1063   00252E  0E03               	movlw	3
  1064   002530  0100               	movlb	0	; () banked
  1065   002532  6FC0               	movwf	(??_main+1)& (0+255),b
  1066   002534  0E08               	movlw	8
  1067   002536  6FBF               	movwf	??_main& (0+255),b
  1068   002538  0E77               	movlw	119
  1069   00253A                     u4107:
  1070   00253A  2EE8               	decfsz	wreg,f,c
  1071   00253C  D7FE               	bra	u4107
  1072   00253E  2FBF               	decfsz	??_main& (0+255),f,b
  1073   002540  D7FC               	bra	u4107
  1074   002542  2FC0               	decfsz	(??_main+1)& (0+255),f,b
  1075   002544  D7FA               	bra	u4107
  1076   002546                     
  1077                           ;main.c: 74:                 LATBbits.LATB5 = 0;
  1078   002546  9A8A               	bcf	138,5,c	;volatile
  1079   002548                     
  1080                           ;main.c: 75:                 LATBbits.LATB6 = 1;
  1081   002548  8C8A               	bsf	138,6,c	;volatile
  1082                           
  1083                           ;main.c: 76:                 _delay((unsigned long)((100)*(16000000UL/4000.0)));
  1084   00254A  0E03               	movlw	3
  1085   00254C  0100               	movlb	0	; () banked
  1086   00254E  6FC0               	movwf	(??_main+1)& (0+255),b
  1087   002550  0E08               	movlw	8
  1088   002552  6FBF               	movwf	??_main& (0+255),b
  1089   002554  0E77               	movlw	119
  1090   002556                     u4117:
  1091   002556  2EE8               	decfsz	wreg,f,c
  1092   002558  D7FE               	bra	u4117
  1093   00255A  2FBF               	decfsz	??_main& (0+255),f,b
  1094   00255C  D7FC               	bra	u4117
  1095   00255E  2FC0               	decfsz	(??_main+1)& (0+255),f,b
  1096   002560  D7FA               	bra	u4117
  1097   002562                     l3843:
  1098                           
  1099                           ;main.c: 67:             while ( is_danger ) {
  1100   002562  0100               	movlb	0	; () banked
  1101   002564  51D3               	movf	_is_danger& (0+255),w,b	;volatile
  1102   002566  A4D8               	btfss	status,2,c
  1103   002568  EFB8  F012         	goto	u4061
  1104   00256C  EFBA  F012         	goto	u4060
  1105   002570                     u4061:
  1106   002570  EF94  F012         	goto	l124
  1107   002574                     u4060:
  1108   002574                     l122:
  1109                           
  1110                           ;main.c: 83:         LATBbits.LATB4 = 0;
  1111   002574  988A               	bcf	138,4,c	;volatile
  1112                           
  1113                           ;main.c: 84:         LATBbits.LATB5 = 0;
  1114   002576  9A8A               	bcf	138,5,c	;volatile
  1115                           
  1116                           ;main.c: 85:         LATBbits.LATB6 = 0;
  1117   002578  9C8A               	bcf	138,6,c	;volatile
  1118   00257A  EFD2  F011         	goto	l3813
  1119   00257E  EF19  F000         	goto	start
  1120   002582                     __end_of_main:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function _sprintf *****************
  1124 ;; Defined at:
  1125 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  s               2   74[BANK0 ] PTR unsigned char 
  1128 ;;		 -> strDistance(20), 
  1129 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  1130 ;;		 -> STR_2(8), 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  f              11   84[BANK0 ] struct _IO_FILE
  1133 ;;  ap              2   82[BANK0 ] PTR void [1]
  1134 ;;		 -> ?_sprintf(2), 
  1135 ;;  ret             2    0        int 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  2   74[BANK0 ] int 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1145 ;;      Params:         0       8       0       0       0       0       0       0       0
  1146 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1148 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1149 ;;Total ram usage:       21 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 8
  1152 ;; This function calls:
  1153 ;;		_vfprintf
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text1
  1160   0031DA                     __ptext1:
  1161                           	callstack 0
  1162   0031DA                     _sprintf:
  1163                           	callstack 22
  1164   0031DA  0EAE               	movlw	low (?_sprintf+4)
  1165   0031DC  0100               	movlb	0	; () banked
  1166   0031DE  6FB2               	movwf	sprintf@ap& (0+255),b
  1167   0031E0  0E00               	movlw	high (?_sprintf+4)
  1168   0031E2  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
  1169   0031E4  C0AA  F0B4         	movff	sprintf@s,sprintf@f
  1170   0031E8  C0AB  F0B5         	movff	sprintf@s+1,sprintf@f+1
  1171   0031EC                     
  1172                           ; BSR set to: 0
  1173   0031EC  0E00               	movlw	0
  1174   0031EE  6FB8               	movwf	(sprintf@f+4)& (0+255),b
  1175   0031F0  0E00               	movlw	0
  1176   0031F2  6FB7               	movwf	(sprintf@f+3)& (0+255),b
  1177   0031F4                     
  1178                           ; BSR set to: 0
  1179   0031F4  0E00               	movlw	0
  1180   0031F6  6FBE               	movwf	(sprintf@f+10)& (0+255),b
  1181   0031F8  0E00               	movlw	0
  1182   0031FA  6FBD               	movwf	(sprintf@f+9)& (0+255),b
  1183   0031FC                     
  1184                           ; BSR set to: 0
  1185   0031FC  0EB4               	movlw	low sprintf@f
  1186   0031FE  6FA2               	movwf	vfprintf@fp& (0+255),b
  1187   003200  0E00               	movlw	high sprintf@f
  1188   003202  6FA3               	movwf	(vfprintf@fp+1)& (0+255),b
  1189   003204  C0AC  F0A4         	movff	sprintf@fmt,vfprintf@fmt
  1190   003208  C0AD  F0A5         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1191   00320C  0EB2               	movlw	low sprintf@ap
  1192   00320E  6FA6               	movwf	vfprintf@ap& (0+255),b
  1193   003210  0E00               	movlw	high sprintf@ap
  1194   003212  6FA7               	movwf	(vfprintf@ap+1)& (0+255),b
  1195   003214  EC16  F019         	call	_vfprintf	;wreg free
  1196   003218  0100               	movlb	0	; () banked
  1197   00321A  51B7               	movf	(sprintf@f+3)& (0+255),w,b
  1198   00321C  25AA               	addwf	sprintf@s& (0+255),w,b
  1199   00321E  6ED9               	movwf	fsr2l,c
  1200   003220  51B8               	movf	(sprintf@f+4)& (0+255),w,b
  1201   003222  21AB               	addwfc	(sprintf@s+1)& (0+255),w,b
  1202   003224  6EDA               	movwf	fsr2h,c
  1203   003226  0E00               	movlw	0
  1204   003228  6EDF               	movwf	indf2,c
  1205   00322A                     
  1206                           ; BSR set to: 0
  1207   00322A  0012               	return		;funcret
  1208   00322C                     __end_of_sprintf:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _vfprintf *****************
  1212 ;; Defined at:
  1213 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  fp              2   66[BANK0 ] PTR struct _IO_FILE
  1216 ;;		 -> sprintf@f(11), 
  1217 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
  1218 ;;		 -> STR_2(8), 
  1219 ;;  ap              2   70[BANK0 ] PTR PTR void 
  1220 ;;		 -> sprintf@ap(2), 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  1223 ;;		 -> STR_2(8), 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  2   66[BANK0 ] int 
  1226 ;; Registers used:
  1227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1233 ;;      Params:         0       6       0       0       0       0       0       0       0
  1234 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1236 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1237 ;;Total ram usage:        8 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; Hardware stack levels required when called: 7
  1240 ;; This function calls:
  1241 ;;		_vfpfcnvrt
  1242 ;; This function is called by:
  1243 ;;		_sprintf
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text2
  1248   00322C                     __ptext2:
  1249                           	callstack 0
  1250   00322C                     _vfprintf:
  1251                           	callstack 22
  1252   00322C                     
  1253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1254   00322C  C0A4  F0A8         	movff	vfprintf@fmt,vfprintf@cfmt
  1255   003230  C0A5  F0A9         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1258   003234  EF2B  F019         	goto	l3657
  1259   003238                     l3655:
  1260                           
  1261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1262   003238  C0A2  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1263   00323C  C0A3  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1264   003240  0EA8               	movlw	low vfprintf@cfmt
  1265   003242  0100               	movlb	0	; () banked
  1266   003244  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1267   003246  0E00               	movlw	high vfprintf@cfmt
  1268   003248  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1269   00324A  C0A6  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1270   00324E  C0A7  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1271   003252  ECA1  F00B         	call	_vfpfcnvrt	;wreg free
  1272   003256                     l3657:
  1273                           
  1274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1275   003256  C0A8  FFF6         	movff	vfprintf@cfmt,tblptrl
  1276   00325A  C0A9  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1277   00325E                     	if	0	;tblptru may be non-zero
  1278   00325E                     	endif
  1279   00325E                     	if	0	;tblptru may be non-zero
  1280   00325E                     	endif
  1281   00325E  0008               	tblrd		*
  1282   003260  50F5               	movf	tablat,w,c
  1283   003262  0900               	iorlw	0
  1284   003264  A4D8               	btfss	status,2,c
  1285   003266  EF37  F019         	goto	u3871
  1286   00326A  EF39  F019         	goto	u3870
  1287   00326E                     u3871:
  1288   00326E  EF1C  F019         	goto	l3655
  1289   003272                     u3870:
  1290   003272                     
  1291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1292   003272  0E00               	movlw	0
  1293   003274  0100               	movlb	0	; () banked
  1294   003276  6FA3               	movwf	(?_vfprintf+1)& (0+255),b
  1295   003278  0E00               	movlw	0
  1296   00327A  6FA2               	movwf	?_vfprintf& (0+255),b
  1297   00327C                     
  1298                           ; BSR set to: 0
  1299   00327C  0012               	return		;funcret
  1300   00327E                     __end_of_vfprintf:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _vfpfcnvrt *****************
  1304 ;; Defined at:
  1305 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1308 ;;		 -> sprintf@f(11), 
  1309 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1310 ;;		 -> vfprintf@cfmt(2), 
  1311 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1312 ;;		 -> sprintf@ap(2), 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  convarg         8   53[BANK0 ] struct .
  1315 ;;  cp              2   64[BANK0 ] PTR unsigned char 
  1316 ;;		 -> STR_2(8), 
  1317 ;;  done            2   61[BANK0 ] int 
  1318 ;;  i               2    0        int 
  1319 ;;  c               1   63[BANK0 ] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1329 ;;      Params:         0       6       0       0       0       0       0       0       0
  1330 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1331 ;;      Temps:          0       3       0       0       0       0       0       0       0
  1332 ;;      Totals:         0      22       0       0       0       0       0       0       0
  1333 ;;Total ram usage:       22 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; Hardware stack levels required when called: 6
  1336 ;; This function calls:
  1337 ;;		_atoi
  1338 ;;		_efgtoa
  1339 ;;		_fputc
  1340 ;;		_isdigit
  1341 ;; This function is called by:
  1342 ;;		_vfprintf
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text3
  1347   001742                     __ptext3:
  1348                           	callstack 0
  1349   001742                     _vfpfcnvrt:
  1350                           	callstack 22
  1351   001742                     
  1352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1353   001742  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1354   001746  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1355   00174A  CFDE FFF6          	movff	postinc2,tblptrl
  1356   00174E  CFDD FFF7          	movff	postdec2,tblptrh
  1357   001752                     	if	0	;tblptru may be non-zero
  1358   001752                     	endif
  1359   001752                     	if	0	;tblptru may be non-zero
  1360   001752                     	endif
  1361   001752  0008               	tblrd		*
  1362   001754  50F5               	movf	tablat,w,c
  1363   001756  0A25               	xorlw	37
  1364   001758  A4D8               	btfss	status,2,c
  1365   00175A  EFB1  F00B         	goto	u3781
  1366   00175E  EFB3  F00B         	goto	u3780
  1367   001762                     u3781:
  1368   001762  EFC0  F00D         	goto	l3595
  1369   001766                     u3780:
  1370   001766                     
  1371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1372   001766  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1373   00176A  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1374   00176E  2ADE               	incf	postinc2,f,c
  1375   001770  0E00               	movlw	0
  1376   001772  22DD               	addwfc	postdec2,f,c
  1377   001774                     
  1378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1379   001774  0E00               	movlw	0
  1380   001776  0100               	movlb	0	; () banked
  1381   001778  6FCE               	movwf	(_width+1)& (0+255),b
  1382   00177A  0E00               	movlw	0
  1383   00177C  6FCD               	movwf	_width& (0+255),b
  1384   00177E  C0CD  F05E         	movff	_width,_flags
  1385   001782                     
  1386                           ; BSR set to: 0
  1387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1388   001782  69CF               	setf	_prec& (0+255),b
  1389   001784  69D0               	setf	(_prec+1)& (0+255),b
  1390   001786                     
  1391                           ; BSR set to: 0
  1392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1393   001786  0E00               	movlw	0
  1394   001788  6F9E               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1395   00178A  0E00               	movlw	0
  1396   00178C  6F9D               	movwf	vfpfcnvrt@done& (0+255),b
  1397                           
  1398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1399   00178E  EFF3  F00B         	goto	l3521
  1400   001792                     l3511:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1404   001792  825E               	bsf	_flags^0,1,c
  1405   001794                     
  1406                           ; BSR set to: 0
  1407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1408   001794  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1409   001798  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1410   00179C  2ADE               	incf	postinc2,f,c
  1411   00179E  0E00               	movlw	0
  1412   0017A0  22DD               	addwfc	postdec2,f,c
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1415   0017A2  EFF3  F00B         	goto	l3521
  1416   0017A6                     l3515:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1420   0017A6  0E00               	movlw	0
  1421   0017A8  6F9E               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1422   0017AA  0E01               	movlw	1
  1423   0017AC  6F9D               	movwf	vfpfcnvrt@done& (0+255),b
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1426   0017AE  EFF3  F00B         	goto	l3521
  1427   0017B2                     l3519:
  1428                           
  1429                           ; BSR set to: 0
  1430   0017B2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1431   0017B6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1432   0017BA  CFDE FFF6          	movff	postinc2,tblptrl
  1433   0017BE  CFDD FFF7          	movff	postdec2,tblptrh
  1434   0017C2                     	if	0	;tblptru may be non-zero
  1435   0017C2                     	endif
  1436   0017C2                     	if	0	;tblptru may be non-zero
  1437   0017C2                     	endif
  1438   0017C2  0008               	tblrd		*
  1439   0017C4  50F5               	movf	tablat,w,c
  1440   0017C6  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1441   0017C8  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1442                           
  1443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1444                           ; Switch size 1, requested type "simple"
  1445                           ; Number of cases is 1, Range of values is 0 to 0
  1446                           ; switch strategies available:
  1447                           ; Name         Instructions Cycles
  1448                           ; simple_byte            4     3 (average)
  1449                           ;	Chosen strategy is simple_byte
  1450   0017CA  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1451   0017CC  0A00               	xorlw	0	; case 0
  1452   0017CE  B4D8               	btfsc	status,2,c
  1453   0017D0  EFEC  F00B         	goto	l3993
  1454   0017D4  EFD3  F00B         	goto	l3515
  1455   0017D8                     l3993:
  1456                           
  1457                           ; BSR set to: 0
  1458                           ; Switch size 1, requested type "simple"
  1459                           ; Number of cases is 1, Range of values is 48 to 48
  1460                           ; switch strategies available:
  1461                           ; Name         Instructions Cycles
  1462                           ; simple_byte            4     3 (average)
  1463                           ;	Chosen strategy is simple_byte
  1464   0017D8  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  1465   0017DA  0A30               	xorlw	48	; case 48
  1466   0017DC  B4D8               	btfsc	status,2,c
  1467   0017DE  EFC9  F00B         	goto	l3511
  1468   0017E2  EFD3  F00B         	goto	l3515
  1469   0017E6                     l3521:
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1473   0017E6  519D               	movf	vfpfcnvrt@done& (0+255),w,b
  1474   0017E8  119E               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1475   0017EA  B4D8               	btfsc	status,2,c
  1476   0017EC  EFFA  F00B         	goto	u3791
  1477   0017F0  EFFC  F00B         	goto	u3790
  1478   0017F4                     u3791:
  1479   0017F4  EFD9  F00B         	goto	l3519
  1480   0017F8                     u3790:
  1481   0017F8                     
  1482                           ; BSR set to: 0
  1483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1484   0017F8  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1485   0017FC  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1486   001800  CFDE FFF6          	movff	postinc2,tblptrl
  1487   001804  CFDD FFF7          	movff	postdec2,tblptrh
  1488   001808                     	if	0	;tblptru may be non-zero
  1489   001808                     	endif
  1490   001808                     	if	0	;tblptru may be non-zero
  1491   001808                     	endif
  1492   001808  0008               	tblrd		*
  1493   00180A  50F5               	movf	tablat,w,c
  1494   00180C  0A2A               	xorlw	42
  1495   00180E  A4D8               	btfss	status,2,c
  1496   001810  EF0C  F00C         	goto	u3801
  1497   001814  EF0E  F00C         	goto	u3800
  1498   001818                     u3801:
  1499   001818  EF37  F00C         	goto	l3531
  1500   00181C                     u3800:
  1501   00181C                     
  1502                           ; BSR set to: 0
  1503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1504   00181C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1505   001820  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1506   001824  2ADE               	incf	postinc2,f,c
  1507   001826  0E00               	movlw	0
  1508   001828  22DD               	addwfc	postdec2,f,c
  1509                           
  1510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1511   00182A  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1512   00182E  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1513   001832  CFDF F092          	movff	indf2,??_vfpfcnvrt
  1514   001836  0E02               	movlw	2
  1515   001838  26DE               	addwf	postinc2,f,c
  1516   00183A  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  1517   00183E  0E00               	movlw	0
  1518   001840  22DD               	addwfc	postdec2,f,c
  1519   001842  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1520   001846  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1521   00184A  CFDE F0CD          	movff	postinc2,_width
  1522   00184E  CFDD F0CE          	movff	postdec2,_width+1
  1523   001852                     
  1524                           ; BSR set to: 0
  1525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1526   001852  BFCE               	btfsc	(_width+1)& (0+255),7,b
  1527   001854  EF30  F00C         	goto	u3810
  1528   001858  EF2E  F00C         	goto	u3811
  1529   00185C                     u3811:
  1530   00185C  EF6B  F00C         	goto	l3539
  1531   001860                     u3810:
  1532   001860                     
  1533                           ; BSR set to: 0
  1534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1535   001860  805E               	bsf	_flags^0,0,c
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1538   001862  6DCD               	negf	_width& (0+255),b
  1539   001864  1FCE               	comf	(_width+1)& (0+255),f,b
  1540   001866  B0D8               	btfsc	status,0,c
  1541   001868  2BCE               	incf	(_width+1)& (0+255),f,b
  1542   00186A  EF6B  F00C         	goto	l3539
  1543   00186E                     l3531:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1547   00186E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1548   001872  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1549   001876  CFDE F007          	movff	postinc2,atoi@s
  1550   00187A  CFDD F008          	movff	postdec2,atoi@s+1
  1551   00187E  ECA4  F014         	call	_atoi	;wreg free
  1552   001882  C007  F0CD         	movff	?_atoi,_width
  1553   001886  C008  F0CE         	movff	?_atoi+1,_width+1
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1556   00188A  EF4E  F00C         	goto	l3537
  1557   00188E                     l3533:
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1561   00188E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1562   001892  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1563   001896  2ADE               	incf	postinc2,f,c
  1564   001898  0E00               	movlw	0
  1565   00189A  22DD               	addwfc	postdec2,f,c
  1566   00189C                     l3537:
  1567   00189C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1568   0018A0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1569   0018A4  CFDE FFF6          	movff	postinc2,tblptrl
  1570   0018A8  CFDD FFF7          	movff	postdec2,tblptrh
  1571   0018AC                     	if	0	;tblptru may be non-zero
  1572   0018AC                     	endif
  1573   0018AC                     	if	0	;tblptru may be non-zero
  1574   0018AC                     	endif
  1575   0018AC  0008               	tblrd		*
  1576   0018AE  CFF5 F092          	movff	tablat,??_vfpfcnvrt
  1577   0018B2  0ED0               	movlw	208
  1578   0018B4  0100               	movlb	0	; () banked
  1579   0018B6  2592               	addwf	??_vfpfcnvrt& (0+255),w,b
  1580   0018B8  6F93               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1581   0018BA  6B94               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  1582   0018BC  0EFF               	movlw	255
  1583   0018BE  2394               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  1584   0018C0  5194               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  1585   0018C2  E109               	bnz	u3820
  1586   0018C4  0E0A               	movlw	10
  1587   0018C6  5D93               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  1588   0018C8  A0D8               	btfss	status,0,c
  1589   0018CA  EF69  F00C         	goto	u3821
  1590   0018CE  EF6B  F00C         	goto	u3820
  1591   0018D2                     u3821:
  1592   0018D2  EF47  F00C         	goto	l3533
  1593   0018D6                     u3820:
  1594   0018D6                     l3539:
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1598   0018D6  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1599   0018DA  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1600   0018DE  CFDE FFF6          	movff	postinc2,tblptrl
  1601   0018E2  CFDD FFF7          	movff	postdec2,tblptrh
  1602   0018E6                     	if	0	;tblptru may be non-zero
  1603   0018E6                     	endif
  1604   0018E6                     	if	0	;tblptru may be non-zero
  1605   0018E6                     	endif
  1606   0018E6  0008               	tblrd		*
  1607   0018E8  50F5               	movf	tablat,w,c
  1608   0018EA  0A2E               	xorlw	46
  1609   0018EC  A4D8               	btfss	status,2,c
  1610   0018EE  EF7B  F00C         	goto	u3831
  1611   0018F2  EF7D  F00C         	goto	u3830
  1612   0018F6                     u3831:
  1613   0018F6  EFEB  F00C         	goto	l3557
  1614   0018FA                     u3830:
  1615   0018FA                     
  1616                           ; BSR set to: 0
  1617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1618   0018FA  0E00               	movlw	0
  1619   0018FC  6FD0               	movwf	(_prec+1)& (0+255),b
  1620   0018FE  0E00               	movlw	0
  1621   001900  6FCF               	movwf	_prec& (0+255),b
  1622   001902                     
  1623                           ; BSR set to: 0
  1624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1625   001902  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1626   001906  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1627   00190A  2ADE               	incf	postinc2,f,c
  1628   00190C  0E00               	movlw	0
  1629   00190E  22DD               	addwfc	postdec2,f,c
  1630   001910                     
  1631                           ; BSR set to: 0
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1633   001910  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1634   001914  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1635   001918  CFDE FFF6          	movff	postinc2,tblptrl
  1636   00191C  CFDD FFF7          	movff	postdec2,tblptrh
  1637   001920                     	if	0	;tblptru may be non-zero
  1638   001920                     	endif
  1639   001920                     	if	0	;tblptru may be non-zero
  1640   001920                     	endif
  1641   001920  0008               	tblrd		*
  1642   001922  50F5               	movf	tablat,w,c
  1643   001924  0A2A               	xorlw	42
  1644   001926  A4D8               	btfss	status,2,c
  1645   001928  EF98  F00C         	goto	u3841
  1646   00192C  EF9A  F00C         	goto	u3840
  1647   001930                     u3841:
  1648   001930  EFB7  F00C         	goto	l3549
  1649   001934                     u3840:
  1650   001934                     
  1651                           ; BSR set to: 0
  1652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1653   001934  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1654   001938  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1655   00193C  2ADE               	incf	postinc2,f,c
  1656   00193E  0E00               	movlw	0
  1657   001940  22DD               	addwfc	postdec2,f,c
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1660   001942  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1661   001946  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1662   00194A  CFDF F092          	movff	indf2,??_vfpfcnvrt
  1663   00194E  0E02               	movlw	2
  1664   001950  26DE               	addwf	postinc2,f,c
  1665   001952  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  1666   001956  0E00               	movlw	0
  1667   001958  22DD               	addwfc	postdec2,f,c
  1668   00195A  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1669   00195E  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1670   001962  CFDE F0CF          	movff	postinc2,_prec
  1671   001966  CFDD F0D0          	movff	postdec2,_prec+1
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1674   00196A  EFEB  F00C         	goto	l3557
  1675   00196E                     l3549:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1679   00196E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1680   001972  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1681   001976  CFDE F007          	movff	postinc2,atoi@s
  1682   00197A  CFDD F008          	movff	postdec2,atoi@s+1
  1683   00197E  ECA4  F014         	call	_atoi	;wreg free
  1684   001982  C007  F0CF         	movff	?_atoi,_prec
  1685   001986  C008  F0D0         	movff	?_atoi+1,_prec+1
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1688   00198A  EFCE  F00C         	goto	l3555
  1689   00198E                     l3551:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1693   00198E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1694   001992  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1695   001996  2ADE               	incf	postinc2,f,c
  1696   001998  0E00               	movlw	0
  1697   00199A  22DD               	addwfc	postdec2,f,c
  1698   00199C                     l3555:
  1699   00199C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1700   0019A0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1701   0019A4  CFDE FFF6          	movff	postinc2,tblptrl
  1702   0019A8  CFDD FFF7          	movff	postdec2,tblptrh
  1703   0019AC                     	if	0	;tblptru may be non-zero
  1704   0019AC                     	endif
  1705   0019AC                     	if	0	;tblptru may be non-zero
  1706   0019AC                     	endif
  1707   0019AC  0008               	tblrd		*
  1708   0019AE  CFF5 F092          	movff	tablat,??_vfpfcnvrt
  1709   0019B2  0ED0               	movlw	208
  1710   0019B4  0100               	movlb	0	; () banked
  1711   0019B6  2592               	addwf	??_vfpfcnvrt& (0+255),w,b
  1712   0019B8  6F93               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1713   0019BA  6B94               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  1714   0019BC  0EFF               	movlw	255
  1715   0019BE  2394               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  1716   0019C0  5194               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  1717   0019C2  E109               	bnz	u3850
  1718   0019C4  0E0A               	movlw	10
  1719   0019C6  5D93               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  1720   0019C8  A0D8               	btfss	status,0,c
  1721   0019CA  EFE9  F00C         	goto	u3851
  1722   0019CE  EFEB  F00C         	goto	u3850
  1723   0019D2                     u3851:
  1724   0019D2  EFC7  F00C         	goto	l3551
  1725   0019D6                     u3850:
  1726   0019D6                     l3557:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1730   0019D6  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1731   0019DA  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1732   0019DE  CFDE F0A0          	movff	postinc2,vfpfcnvrt@cp
  1733   0019E2  CFDD F0A1          	movff	postdec2,vfpfcnvrt@cp+1
  1734   0019E6                     
  1735                           ; BSR set to: 0
  1736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1737   0019E6  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1738   0019EA  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1739   0019EE                     	if	0	;tblptru may be non-zero
  1740   0019EE                     	endif
  1741   0019EE                     	if	0	;tblptru may be non-zero
  1742   0019EE                     	endif
  1743   0019EE  0008               	tblrd		*
  1744   0019F0  CFF5 F09F          	movff	tablat,vfpfcnvrt@c
  1745                           
  1746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1747   0019F4  EF08  F00D         	goto	l3569
  1748   0019F8                     l3561:
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1752   0019F8  4BA0               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1753   0019FA  2BA1               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1756   0019FC  EF21  F00D         	goto	l3571
  1757   001A00                     l3563:
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1761   001A00  0E6C               	movlw	108
  1762   001A02  6F9F               	movwf	vfpfcnvrt@c& (0+255),b
  1763                           
  1764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1765   001A04  EF21  F00D         	goto	l3571
  1766   001A08                     l3565:
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1770   001A08  0E00               	movlw	0
  1771   001A0A  6F9F               	movwf	vfpfcnvrt@c& (0+255),b
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1774   001A0C  EF21  F00D         	goto	l3571
  1775   001A10                     l3569:
  1776                           
  1777                           ; BSR set to: 0
  1778   001A10  519F               	movf	vfpfcnvrt@c& (0+255),w,b
  1779   001A12  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1780   001A14  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1781                           
  1782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1783                           ; Switch size 1, requested type "simple"
  1784                           ; Number of cases is 1, Range of values is 0 to 0
  1785                           ; switch strategies available:
  1786                           ; Name         Instructions Cycles
  1787                           ; simple_byte            4     3 (average)
  1788                           ;	Chosen strategy is simple_byte
  1789   001A16  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1790   001A18  0A00               	xorlw	0	; case 0
  1791   001A1A  B4D8               	btfsc	status,2,c
  1792   001A1C  EF12  F00D         	goto	l3995
  1793   001A20  EF04  F00D         	goto	l3565
  1794   001A24                     l3995:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ; Switch size 1, requested type "simple"
  1798                           ; Number of cases is 3, Range of values is 76 to 108
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte           10     6 (average)
  1802                           ;	Chosen strategy is simple_byte
  1803   001A24  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  1804   001A26  0A4C               	xorlw	76	; case 76
  1805   001A28  B4D8               	btfsc	status,2,c
  1806   001A2A  EFFC  F00C         	goto	l3561
  1807   001A2E  0A2A               	xorlw	42	; case 102
  1808   001A30  B4D8               	btfsc	status,2,c
  1809   001A32  EF00  F00D         	goto	l3563
  1810   001A36  0A0A               	xorlw	10	; case 108
  1811   001A38  B4D8               	btfsc	status,2,c
  1812   001A3A  EFFC  F00C         	goto	l3561
  1813   001A3E  EF04  F00D         	goto	l3565
  1814   001A42                     l3571:
  1815                           
  1816                           ; BSR set to: 0
  1817   001A42  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1818   001A46  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1819   001A4A                     	if	0	;tblptru may be non-zero
  1820   001A4A                     	endif
  1821   001A4A                     	if	0	;tblptru may be non-zero
  1822   001A4A                     	endif
  1823   001A4A  0008               	tblrd		*
  1824   001A4C  50F5               	movf	tablat,w,c
  1825   001A4E  0A66               	xorlw	102
  1826   001A50  A4D8               	btfss	status,2,c
  1827   001A52  EF2D  F00D         	goto	u3861
  1828   001A56  EF2F  F00D         	goto	u3860
  1829   001A5A                     u3861:
  1830   001A5A  EFB7  F00D         	goto	l3591
  1831   001A5E                     u3860:
  1832   001A5E  EF65  F00D         	goto	l3579
  1833   001A62                     l3573:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1837   001A62  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1838   001A66  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1839   001A6A  CFDF F092          	movff	indf2,??_vfpfcnvrt
  1840   001A6E  0E04               	movlw	4
  1841   001A70  26DE               	addwf	postinc2,f,c
  1842   001A72  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  1843   001A76  0E00               	movlw	0
  1844   001A78  22DD               	addwfc	postdec2,f,c
  1845   001A7A  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1846   001A7E  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1847   001A82  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg
  1848   001A86  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg+1
  1849   001A8A  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+2
  1850   001A8E  CFDE F098          	movff	postinc2,vfpfcnvrt@convarg+3
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1853   001A92  EF7A  F00D         	goto	l3581
  1854   001A96                     l3575:
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1858   001A96  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1859   001A9A  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1860   001A9E  CFDF F092          	movff	indf2,??_vfpfcnvrt
  1861   001AA2  0E04               	movlw	4
  1862   001AA4  26DE               	addwf	postinc2,f,c
  1863   001AA6  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  1864   001AAA  0E00               	movlw	0
  1865   001AAC  22DD               	addwfc	postdec2,f,c
  1866   001AAE  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1867   001AB2  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1868   001AB6  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg
  1869   001ABA  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg+1
  1870   001ABE  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+2
  1871   001AC2  CFDE F098          	movff	postinc2,vfpfcnvrt@convarg+3
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1874   001AC6  EF7A  F00D         	goto	l3581
  1875   001ACA                     l3579:
  1876                           
  1877                           ; BSR set to: 0
  1878   001ACA  519F               	movf	vfpfcnvrt@c& (0+255),w,b
  1879   001ACC  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1880   001ACE  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1881                           
  1882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1883                           ; Switch size 1, requested type "simple"
  1884                           ; Number of cases is 1, Range of values is 0 to 0
  1885                           ; switch strategies available:
  1886                           ; Name         Instructions Cycles
  1887                           ; simple_byte            4     3 (average)
  1888                           ;	Chosen strategy is simple_byte
  1889   001AD0  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1890   001AD2  0A00               	xorlw	0	; case 0
  1891   001AD4  B4D8               	btfsc	status,2,c
  1892   001AD6  EF6F  F00D         	goto	l3997
  1893   001ADA  EF7A  F00D         	goto	l3581
  1894   001ADE                     l3997:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ; Switch size 1, requested type "simple"
  1898                           ; Number of cases is 2, Range of values is 76 to 108
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; simple_byte            7     4 (average)
  1902                           ;	Chosen strategy is simple_byte
  1903   001ADE  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  1904   001AE0  0A4C               	xorlw	76	; case 76
  1905   001AE2  B4D8               	btfsc	status,2,c
  1906   001AE4  EF4B  F00D         	goto	l3575
  1907   001AE8  0A20               	xorlw	32	; case 108
  1908   001AEA  B4D8               	btfsc	status,2,c
  1909   001AEC  EF31  F00D         	goto	l3573
  1910   001AF0  EF7A  F00D         	goto	l3581
  1911   001AF4                     l3581:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1915   001AF4  0E01               	movlw	1
  1916   001AF6  25A0               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1917   001AF8  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1918   001AFA  0E00               	movlw	0
  1919   001AFC  21A1               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1920   001AFE  6F93               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1921   001B00  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1922   001B04  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1923   001B08  C092  FFDE         	movff	??_vfpfcnvrt,postinc2
  1924   001B0C  C093  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1927   001B10  EFA1  F00D         	goto	l3589
  1928   001B14                     l3583:
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1932   001B14  C08C  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1933   001B18  C08D  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1934   001B1C  C095  F057         	movff	vfpfcnvrt@convarg,efgtoa@f
  1935   001B20  C096  F058         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1936   001B24  C097  F059         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1937   001B28  C098  F05A         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1938   001B2C  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1939   001B30  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1940   001B34                     	if	0	;tblptru may be non-zero
  1941   001B34                     	endif
  1942   001B34                     	if	0	;tblptru may be non-zero
  1943   001B34                     	endif
  1944   001B34  0008               	tblrd		*
  1945   001B36  CFF5 F05B          	movff	tablat,efgtoa@c
  1946   001B3A  EC0F  F004         	call	_efgtoa	;wreg free
  1947   001B3E  EFD4  F00D         	goto	l967
  1948   001B42                     l3589:
  1949                           
  1950                           ; BSR set to: 0
  1951   001B42  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1952   001B46  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1953   001B4A                     	if	0	;tblptru may be non-zero
  1954   001B4A                     	endif
  1955   001B4A                     	if	0	;tblptru may be non-zero
  1956   001B4A                     	endif
  1957   001B4A  0008               	tblrd		*
  1958   001B4C  50F5               	movf	tablat,w,c
  1959   001B4E  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  1960   001B50  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1961                           
  1962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1963                           ; Switch size 1, requested type "simple"
  1964                           ; Number of cases is 1, Range of values is 0 to 0
  1965                           ; switch strategies available:
  1966                           ; Name         Instructions Cycles
  1967                           ; simple_byte            4     3 (average)
  1968                           ;	Chosen strategy is simple_byte
  1969   001B52  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1970   001B54  0A00               	xorlw	0	; case 0
  1971   001B56  B4D8               	btfsc	status,2,c
  1972   001B58  EFB0  F00D         	goto	l3999
  1973   001B5C  EFB7  F00D         	goto	l3591
  1974   001B60                     l3999:
  1975                           
  1976                           ; BSR set to: 0
  1977                           ; Switch size 1, requested type "simple"
  1978                           ; Number of cases is 1, Range of values is 102 to 102
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte            4     3 (average)
  1982                           ;	Chosen strategy is simple_byte
  1983   001B60  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  1984   001B62  0A66               	xorlw	102	; case 102
  1985   001B64  B4D8               	btfsc	status,2,c
  1986   001B66  EF8A  F00D         	goto	l3583
  1987   001B6A  EFB7  F00D         	goto	l3591
  1988   001B6E                     l3591:
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1991   001B6E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1992   001B72  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1993   001B76  2ADE               	incf	postinc2,f,c
  1994   001B78  0E00               	movlw	0
  1995   001B7A  22DD               	addwfc	postdec2,f,c
  1996   001B7C  EFD4  F00D         	goto	l967
  1997   001B80                     l3595:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2000   001B80  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2001   001B84  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2002   001B88  CFDE FFF6          	movff	postinc2,tblptrl
  2003   001B8C  CFDD FFF7          	movff	postdec2,tblptrh
  2004   001B90                     	if	0	;tblptru may be non-zero
  2005   001B90                     	endif
  2006   001B90                     	if	0	;tblptru may be non-zero
  2007   001B90                     	endif
  2008   001B90  0008               	tblrd		*
  2009   001B92  50F5               	movf	tablat,w,c
  2010   001B94  6E01               	movwf	fputc@c^0,c
  2011   001B96  6A02               	clrf	(fputc@c+1)^0,c
  2012   001B98  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2013   001B9C  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2014   001BA0  ECCD  F016         	call	_fputc	;wreg free
  2015   001BA4  EFB7  F00D         	goto	l3591
  2016   001BA8                     l967:
  2017   001BA8  0012               	return		;funcret
  2018   001BAA                     __end_of_vfpfcnvrt:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _efgtoa *****************
  2022 ;; Defined at:
  2023 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  2026 ;;		 -> sprintf@f(11), 
  2027 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  2028 ;;  c               1   90[COMRAM] unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  u               4   40[BANK0 ] struct flui
  2031 ;;  g               4   34[BANK0 ] struct flui
  2032 ;;  l               4   27[BANK0 ] struct flui
  2033 ;;  h               4   23[BANK0 ] struct flui
  2034 ;;  ou              4   19[BANK0 ] struct flui
  2035 ;;  n               2   38[BANK0 ] int 
  2036 ;;  i               2   31[BANK0 ] int 
  2037 ;;  w               2   17[BANK0 ] int 
  2038 ;;  e               2   15[BANK0 ] int 
  2039 ;;  m               2   13[BANK0 ] int 
  2040 ;;  d               2   11[BANK0 ] int 
  2041 ;;  t               2    4[BANK0 ] int 
  2042 ;;  p               2    2[BANK0 ] int 
  2043 ;;  ne              2    0[BANK0 ] int 
  2044 ;;  sign            1   33[BANK0 ] unsigned char 
  2045 ;;  nmode           1   10[BANK0 ] unsigned char 
  2046 ;;  mode            1    9[BANK0 ] unsigned char 
  2047 ;;  pp              1    8[BANK0 ] unsigned char 
  2048 ;;  esign           1    0        unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2058 ;;      Params:         7       0       0       0       0       0       0       0       0
  2059 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2060 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2061 ;;      Totals:         9      44       0       0       0       0       0       0       0
  2062 ;;Total ram usage:       53 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 5
  2065 ;; This function calls:
  2066 ;;		___fladd
  2067 ;;		___fldiv
  2068 ;;		___fleq
  2069 ;;		___flge
  2070 ;;		___flmul
  2071 ;;		___flneg
  2072 ;;		___flsub
  2073 ;;		___fltol
  2074 ;;		___fpclassifyf
  2075 ;;		_floorf
  2076 ;;		_labs
  2077 ;;		_memcpy
  2078 ;;		_pad
  2079 ;;		_strcpy
  2080 ;; This function is called by:
  2081 ;;		_vfpfcnvrt
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text4
  2086   00081E                     __ptext4:
  2087                           	callstack 0
  2088   00081E                     _efgtoa:
  2089                           	callstack 22
  2090   00081E                     
  2091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2092   00081E  0E00               	movlw	0
  2093   000820  0100               	movlb	0	; () banked
  2094   000822  6F81               	movwf	efgtoa@sign& (0+255),b
  2095   000824                     
  2096                           ; BSR set to: 0
  2097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2098   000824  C057  F082         	movff	efgtoa@f,efgtoa@g
  2099   000828  C058  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2100   00082C  C059  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2101   000830  C05A  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2102   000834                     
  2103                           ; BSR set to: 0
  2104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2105   000834  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2106   000836  EF21  F004         	goto	u3350
  2107   00083A  EF1F  F004         	goto	u3351
  2108   00083E                     u3351:
  2109   00083E  EF35  F004         	goto	l3221
  2110   000842                     u3350:
  2111   000842                     
  2112                           ; BSR set to: 0
  2113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2114   000842  0E01               	movlw	1
  2115   000844  6F81               	movwf	efgtoa@sign& (0+255),b
  2116   000846                     
  2117                           ; BSR set to: 0
  2118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2119   000846  C082  F001         	movff	efgtoa@g,___flneg@f1
  2120   00084A  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2121   00084E  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2122   000852  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2123   000856  ECEF  F019         	call	___flneg	;wreg free
  2124   00085A  C001  F082         	movff	?___flneg,efgtoa@g
  2125   00085E  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2126   000862  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2127   000866  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2128   00086A                     l3221:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2131   00086A  0E00               	movlw	0
  2132   00086C  0100               	movlb	0	; () banked
  2133   00086E  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2134   000870  0E00               	movlw	0
  2135   000872  6F86               	movwf	efgtoa@n& (0+255),b
  2136   000874                     
  2137                           ; BSR set to: 0
  2138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2139   000874  C0CD  F071         	movff	_width,efgtoa@w
  2140   000878  C0CE  F072         	movff	_width+1,efgtoa@w+1
  2141   00087C                     
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2144   00087C  5181               	movf	efgtoa@sign& (0+255),w,b
  2145   00087E  B4D8               	btfsc	status,2,c
  2146   000880  EF44  F004         	goto	u3361
  2147   000884  EF46  F004         	goto	u3360
  2148   000888                     u3361:
  2149   000888  EF5A  F004         	goto	l3235
  2150   00088C                     u3360:
  2151   00088C                     
  2152                           ; BSR set to: 0
  2153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2154   00088C  5181               	movf	efgtoa@sign& (0+255),w,b
  2155   00088E  A4D8               	btfss	status,2,c
  2156   000890  EF4C  F004         	goto	u3371
  2157   000894  EF4E  F004         	goto	u3370
  2158   000898                     u3371:
  2159   000898  EF54  F004         	goto	l3231
  2160   00089C                     u3370:
  2161   00089C                     
  2162                           ; BSR set to: 0
  2163   00089C  0E00               	movlw	0
  2164   00089E  6F67               	movwf	(_efgtoa$1107+1)& (0+255),b
  2165   0008A0  0E2B               	movlw	43
  2166   0008A2  6F66               	movwf	_efgtoa$1107& (0+255),b
  2167   0008A4  EF58  F004         	goto	l3233
  2168   0008A8                     l3231:
  2169                           
  2170                           ; BSR set to: 0
  2171   0008A8  0E00               	movlw	0
  2172   0008AA  6F67               	movwf	(_efgtoa$1107+1)& (0+255),b
  2173   0008AC  0E2D               	movlw	45
  2174   0008AE  6F66               	movwf	_efgtoa$1107& (0+255),b
  2175   0008B0                     l3233:
  2176                           
  2177                           ; BSR set to: 0
  2178   0008B0  C066  F081         	movff	_efgtoa$1107,efgtoa@sign
  2179   0008B4                     l3235:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2183   0008B4  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2184   0008B8  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2185   0008BC  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2186   0008C0  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2187   0008C4  EC4E  F016         	call	___fpclassifyf	;wreg free
  2188   0008C8  0401               	decf	?___fpclassifyf^0,w,c
  2189   0008CA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2190   0008CC  A4D8               	btfss	status,2,c
  2191   0008CE  EF6B  F004         	goto	u3381
  2192   0008D2  EF6D  F004         	goto	u3380
  2193   0008D6                     u3381:
  2194   0008D6  EFA0  F004         	goto	l3253
  2195   0008DA                     u3380:
  2196   0008DA                     
  2197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2198   0008DA  0100               	movlb	0	; () banked
  2199   0008DC  5181               	movf	efgtoa@sign& (0+255),w,b
  2200   0008DE  B4D8               	btfsc	status,2,c
  2201   0008E0  EF74  F004         	goto	u3391
  2202   0008E4  EF76  F004         	goto	u3390
  2203   0008E8                     u3391:
  2204   0008E8  EF7F  F004         	goto	l3245
  2205   0008EC                     u3390:
  2206   0008EC                     
  2207                           ; BSR set to: 0
  2208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2209   0008EC  C081  F100         	movff	efgtoa@sign,_dbuf
  2210   0008F0                     
  2211                           ; BSR set to: 0
  2212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2213   0008F0  0771               	decf	efgtoa@w& (0+255),f,b
  2214   0008F2  A0D8               	btfss	status,0,c
  2215   0008F4  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2216   0008F6                     
  2217                           ; BSR set to: 0
  2218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2219   0008F6  0E00               	movlw	0
  2220   0008F8  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2221   0008FA  0E01               	movlw	1
  2222   0008FC  6F86               	movwf	efgtoa@n& (0+255),b
  2223   0008FE                     l3245:
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2227   0008FE  0E00               	movlw	low _dbuf
  2228   000900  2586               	addwf	efgtoa@n& (0+255),w,b
  2229   000902  6E01               	movwf	strcpy@dest^0,c
  2230   000904  0E01               	movlw	high _dbuf
  2231   000906  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2232   000908  6E02               	movwf	(strcpy@dest+1)^0,c
  2233   00090A  0E15               	movlw	low STR_3
  2234   00090C  6E03               	movwf	strcpy@src^0,c
  2235   00090E  0E08               	movlw	high STR_3
  2236   000910  6E04               	movwf	(strcpy@src+1)^0,c
  2237   000912  ECCF  F019         	call	_strcpy	;wreg free
  2238   000916                     l3247:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2241   000916  0100               	movlb	0	; () banked
  2242   000918  0EFD               	movlw	253
  2243   00091A  2771               	addwf	efgtoa@w& (0+255),f,b
  2244   00091C  0EFF               	movlw	255
  2245   00091E  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2246   000920                     
  2247                           ; BSR set to: 0
  2248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2249   000920  C055  F011         	movff	efgtoa@fp,pad@fp
  2250   000924  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2251   000928  0E00               	movlw	low _dbuf
  2252   00092A  6E13               	movwf	pad@buf^0,c
  2253   00092C  0E01               	movlw	high _dbuf
  2254   00092E  6E14               	movwf	(pad@buf+1)^0,c
  2255   000930  C071  F015         	movff	efgtoa@w,pad@p
  2256   000934  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2257   000938  EC32  F017         	call	_pad	;wreg free
  2258   00093C  EF40  F009         	goto	l878
  2259   000940                     l3253:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2262   000940  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2263   000944  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2264   000948  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2265   00094C  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2266   000950  EC4E  F016         	call	___fpclassifyf	;wreg free
  2267   000954  5001               	movf	?___fpclassifyf^0,w,c
  2268   000956  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2269   000958  A4D8               	btfss	status,2,c
  2270   00095A  EFB1  F004         	goto	u3401
  2271   00095E  EFB3  F004         	goto	u3400
  2272   000962                     u3401:
  2273   000962  EFD3  F004         	goto	l3271
  2274   000966                     u3400:
  2275   000966                     
  2276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2277   000966  0100               	movlb	0	; () banked
  2278   000968  5181               	movf	efgtoa@sign& (0+255),w,b
  2279   00096A  B4D8               	btfsc	status,2,c
  2280   00096C  EFBA  F004         	goto	u3411
  2281   000970  EFBC  F004         	goto	u3410
  2282   000974                     u3411:
  2283   000974  EFC5  F004         	goto	l3263
  2284   000978                     u3410:
  2285   000978                     
  2286                           ; BSR set to: 0
  2287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2288   000978  C081  F100         	movff	efgtoa@sign,_dbuf
  2289   00097C                     
  2290                           ; BSR set to: 0
  2291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2292   00097C  0771               	decf	efgtoa@w& (0+255),f,b
  2293   00097E  A0D8               	btfss	status,0,c
  2294   000980  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2295   000982                     
  2296                           ; BSR set to: 0
  2297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2298   000982  0E00               	movlw	0
  2299   000984  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2300   000986  0E01               	movlw	1
  2301   000988  6F86               	movwf	efgtoa@n& (0+255),b
  2302   00098A                     l3263:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2306   00098A  0E00               	movlw	low _dbuf
  2307   00098C  2586               	addwf	efgtoa@n& (0+255),w,b
  2308   00098E  6E01               	movwf	strcpy@dest^0,c
  2309   000990  0E01               	movlw	high _dbuf
  2310   000992  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2311   000994  6E02               	movwf	(strcpy@dest+1)^0,c
  2312   000996  0E19               	movlw	low STR_6
  2313   000998  6E03               	movwf	strcpy@src^0,c
  2314   00099A  0E08               	movlw	high STR_6
  2315   00099C  6E04               	movwf	(strcpy@src+1)^0,c
  2316   00099E  ECCF  F019         	call	_strcpy	;wreg free
  2317   0009A2  EF8B  F004         	goto	l3247
  2318   0009A6                     l3271:
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2321   0009A6  0E00               	movlw	0
  2322   0009A8  0100               	movlb	0	; () banked
  2323   0009AA  6F88               	movwf	efgtoa@u& (0+255),b
  2324   0009AC  0E00               	movlw	0
  2325   0009AE  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2326   0009B0  0E80               	movlw	128
  2327   0009B2  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2328   0009B4  0E3F               	movlw	63
  2329   0009B6  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2332   0009B8  0E00               	movlw	0
  2333   0009BA  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2334   0009BC  0E00               	movlw	0
  2335   0009BE  6F6F               	movwf	efgtoa@e& (0+255),b
  2336   0009C0                     
  2337                           ; BSR set to: 0
  2338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2339   0009C0  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2340   0009C4  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2341   0009C8  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2342   0009CC  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2343   0009D0  0E00               	movlw	0
  2344   0009D2  6E05               	movwf	___fleq@ff2^0,c
  2345   0009D4  0E00               	movlw	0
  2346   0009D6  6E06               	movwf	(___fleq@ff2+1)^0,c
  2347   0009D8  0E00               	movlw	0
  2348   0009DA  6E07               	movwf	(___fleq@ff2+2)^0,c
  2349   0009DC  0E00               	movlw	0
  2350   0009DE  6E08               	movwf	(___fleq@ff2+3)^0,c
  2351   0009E0  EC87  F017         	call	___fleq	;wreg free
  2352   0009E4  B0D8               	btfsc	status,0,c
  2353   0009E6  EFF7  F004         	goto	u3421
  2354   0009EA  EFF9  F004         	goto	u3420
  2355   0009EE                     u3421:
  2356   0009EE  EFD8  F005         	goto	l881
  2357   0009F2                     u3420:
  2358   0009F2  EF06  F005         	goto	l3279
  2359   0009F6                     l883:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2362   0009F6  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2363   0009FA  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2364   0009FE  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2365   000A02  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2366   000A06                     
  2367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2368   000A06  0100               	movlb	0	; () banked
  2369   000A08  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2370   000A0A  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2371   000A0C                     l3279:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2374   000A0C  C088  F00F         	movff	efgtoa@u,___flmul@b
  2375   000A10  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2376   000A14  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2377   000A18  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2378   000A1C  0E00               	movlw	0
  2379   000A1E  6E13               	movwf	___flmul@a^0,c
  2380   000A20  0E00               	movlw	0
  2381   000A22  6E14               	movwf	(___flmul@a+1)^0,c
  2382   000A24  0E20               	movlw	32
  2383   000A26  6E15               	movwf	(___flmul@a+2)^0,c
  2384   000A28  0E41               	movlw	65
  2385   000A2A  6E16               	movwf	(___flmul@a+3)^0,c
  2386   000A2C  ECD5  F00D         	call	___flmul	;wreg free
  2387   000A30  C00F  F073         	movff	?___flmul,efgtoa@ou
  2388   000A34  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2389   000A38  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2390   000A3C  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2391   000A40  0100               	movlb	0	; () banked
  2392   000A42  5173               	movf	efgtoa@ou& (0+255),w,b
  2393   000A44  5D82               	subwf	efgtoa@g& (0+255),w,b
  2394   000A46  6E01               	movwf	labs@a^0,c
  2395   000A48  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2396   000A4A  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2397   000A4C  6E02               	movwf	(labs@a+1)^0,c
  2398   000A4E  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2399   000A50  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2400   000A52  6E03               	movwf	(labs@a+2)^0,c
  2401   000A54  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2402   000A56  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2403   000A58  6E04               	movwf	(labs@a+3)^0,c
  2404   000A5A  EC59  F018         	call	_labs	;wreg free
  2405   000A5E  BE04               	btfsc	(?_labs+3)^0,7,c
  2406   000A60  EF3D  F005         	goto	u3431
  2407   000A64  5004               	movf	(?_labs+3)^0,w,c
  2408   000A66  1003               	iorwf	(?_labs+2)^0,w,c
  2409   000A68  1002               	iorwf	(?_labs+1)^0,w,c
  2410   000A6A  E109               	bnz	u3430
  2411   000A6C  0E02               	movlw	2
  2412   000A6E  5C01               	subwf	?_labs^0,w,c
  2413   000A70  A0D8               	btfss	status,0,c
  2414   000A72  EF3D  F005         	goto	u3431
  2415   000A76  EF3F  F005         	goto	u3430
  2416   000A7A                     u3431:
  2417   000A7A  EFFB  F004         	goto	l883
  2418   000A7E                     u3430:
  2419   000A7E  C073  F028         	movff	efgtoa@ou,___flge@ff1
  2420   000A82  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2421   000A86  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2422   000A8A  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2423   000A8E  C082  F02C         	movff	efgtoa@g,___flge@ff2
  2424   000A92  C083  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2425   000A96  C084  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2426   000A9A  C085  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2427   000A9E  ECCC  F015         	call	___flge	;wreg free
  2428   000AA2  A0D8               	btfss	status,0,c
  2429   000AA4  EF56  F005         	goto	u3441
  2430   000AA8  EF58  F005         	goto	u3440
  2431   000AAC                     u3441:
  2432   000AAC  EFFB  F004         	goto	l883
  2433   000AB0                     u3440:
  2434   000AB0                     
  2435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2436   000AB0  0100               	movlb	0	; () banked
  2437   000AB2  5188               	movf	efgtoa@u& (0+255),w,b
  2438   000AB4  5D82               	subwf	efgtoa@g& (0+255),w,b
  2439   000AB6  6E01               	movwf	labs@a^0,c
  2440   000AB8  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2441   000ABA  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2442   000ABC  6E02               	movwf	(labs@a+1)^0,c
  2443   000ABE  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2444   000AC0  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2445   000AC2  6E03               	movwf	(labs@a+2)^0,c
  2446   000AC4  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2447   000AC6  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2448   000AC8  6E04               	movwf	(labs@a+3)^0,c
  2449   000ACA  EC59  F018         	call	_labs	;wreg free
  2450   000ACE  BE04               	btfsc	(?_labs+3)^0,7,c
  2451   000AD0  EF77  F005         	goto	u3450
  2452   000AD4  5004               	movf	(?_labs+3)^0,w,c
  2453   000AD6  1003               	iorwf	(?_labs+2)^0,w,c
  2454   000AD8  1002               	iorwf	(?_labs+1)^0,w,c
  2455   000ADA  E107               	bnz	u3451
  2456   000ADC  0E02               	movlw	2
  2457   000ADE  5C01               	subwf	?_labs^0,w,c
  2458   000AE0  B0D8               	btfsc	status,0,c
  2459   000AE2  EF75  F005         	goto	u3451
  2460   000AE6  EF77  F005         	goto	u3450
  2461   000AEA                     u3451:
  2462   000AEA  EFBF  F005         	goto	l3297
  2463   000AEE                     u3450:
  2464   000AEE                     l3287:
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2467   000AEE  C088  F082         	movff	efgtoa@u,efgtoa@g
  2468   000AF2  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2469   000AF6  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2470   000AFA  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2473   000AFE  EFD8  F005         	goto	l881
  2474   000B02                     l3289:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2477   000B02  C088  F028         	movff	efgtoa@u,___fldiv@b
  2478   000B06  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2479   000B0A  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2480   000B0E  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2481   000B12  0E00               	movlw	0
  2482   000B14  6E2C               	movwf	___fldiv@a^0,c
  2483   000B16  0E00               	movlw	0
  2484   000B18  6E2D               	movwf	(___fldiv@a+1)^0,c
  2485   000B1A  0E20               	movlw	32
  2486   000B1C  6E2E               	movwf	(___fldiv@a+2)^0,c
  2487   000B1E  0E41               	movlw	65
  2488   000B20  6E2F               	movwf	(___fldiv@a+3)^0,c
  2489   000B22  ECEA  F00F         	call	___fldiv	;wreg free
  2490   000B26  C028  F088         	movff	?___fldiv,efgtoa@u
  2491   000B2A  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2492   000B2E  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2493   000B32  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2494   000B36                     
  2495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2496   000B36  0100               	movlb	0	; () banked
  2497   000B38  076F               	decf	efgtoa@e& (0+255),f,b
  2498   000B3A  A0D8               	btfss	status,0,c
  2499   000B3C  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2500   000B3E                     
  2501                           ; BSR set to: 0
  2502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2503   000B3E  5188               	movf	efgtoa@u& (0+255),w,b
  2504   000B40  5D82               	subwf	efgtoa@g& (0+255),w,b
  2505   000B42  6E01               	movwf	labs@a^0,c
  2506   000B44  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2507   000B46  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2508   000B48  6E02               	movwf	(labs@a+1)^0,c
  2509   000B4A  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2510   000B4C  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2511   000B4E  6E03               	movwf	(labs@a+2)^0,c
  2512   000B50  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2513   000B52  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2514   000B54  6E04               	movwf	(labs@a+3)^0,c
  2515   000B56  EC59  F018         	call	_labs	;wreg free
  2516   000B5A  BE04               	btfsc	(?_labs+3)^0,7,c
  2517   000B5C  EFBD  F005         	goto	u3460
  2518   000B60  5004               	movf	(?_labs+3)^0,w,c
  2519   000B62  1003               	iorwf	(?_labs+2)^0,w,c
  2520   000B64  1002               	iorwf	(?_labs+1)^0,w,c
  2521   000B66  E107               	bnz	u3461
  2522   000B68  0E02               	movlw	2
  2523   000B6A  5C01               	subwf	?_labs^0,w,c
  2524   000B6C  B0D8               	btfsc	status,0,c
  2525   000B6E  EFBB  F005         	goto	u3461
  2526   000B72  EFBD  F005         	goto	u3460
  2527   000B76                     u3461:
  2528   000B76  EFBF  F005         	goto	l3297
  2529   000B7A                     u3460:
  2530   000B7A  EF77  F005         	goto	l3287
  2531   000B7E                     l3297:
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2534   000B7E  C082  F028         	movff	efgtoa@g,___flge@ff1
  2535   000B82  C083  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2536   000B86  C084  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2537   000B8A  C085  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2538   000B8E  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2539   000B92  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2540   000B96  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2541   000B9A  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2542   000B9E  ECCC  F015         	call	___flge	;wreg free
  2543   000BA2  A0D8               	btfss	status,0,c
  2544   000BA4  EFD6  F005         	goto	u3471
  2545   000BA8  EFD8  F005         	goto	u3470
  2546   000BAC                     u3471:
  2547   000BAC  EF81  F005         	goto	l3289
  2548   000BB0                     u3470:
  2549   000BB0                     l881:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2552   000BB0  C05B  F069         	movff	efgtoa@c,efgtoa@mode
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2555   000BB4  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2556   000BB8                     
  2557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2558   000BB8  0100               	movlb	0	; () banked
  2559   000BBA  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  2560   000BBC  EFE2  F005         	goto	u3481
  2561   000BC0  EFE4  F005         	goto	u3480
  2562   000BC4                     u3481:
  2563   000BC4  EFEA  F005         	goto	l3303
  2564   000BC8                     u3480:
  2565   000BC8                     
  2566                           ; BSR set to: 0
  2567   000BC8  C0CF  F062         	movff	_prec,efgtoa@p
  2568   000BCC  C0D0  F063         	movff	_prec+1,efgtoa@p+1
  2569   000BD0  EFEE  F005         	goto	l3305
  2570   000BD4                     l3303:
  2571                           
  2572                           ; BSR set to: 0
  2573   000BD4  0E00               	movlw	0
  2574   000BD6  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2575   000BD8  0E06               	movlw	6
  2576   000BDA  6F62               	movwf	efgtoa@p& (0+255),b
  2577   000BDC                     l3305:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2581   000BDC  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2582   000BE0  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2583   000BE4                     
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2586   000BE4  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2587   000BE6  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2588   000BE8                     
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2591   000BE8  0E66               	movlw	102
  2592   000BEA  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2593   000BEC  A4D8               	btfss	status,2,c
  2594   000BEE  EFFB  F005         	goto	u3491
  2595   000BF2  EFFD  F005         	goto	u3490
  2596   000BF6                     u3491:
  2597   000BF6  EF1D  F006         	goto	l3319
  2598   000BFA                     u3490:
  2599   000BFA                     
  2600                           ; BSR set to: 0
  2601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2602   000BFA  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2603   000BFC  EF04  F006         	goto	u3500
  2604   000C00  EF02  F006         	goto	u3501
  2605   000C04                     u3501:
  2606   000C04  EF10  F006         	goto	l3315
  2607   000C08                     u3500:
  2608   000C08                     
  2609                           ; BSR set to: 0
  2610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2611   000C08  0E00               	movlw	0
  2612   000C0A  6F88               	movwf	efgtoa@u& (0+255),b
  2613   000C0C  0E00               	movlw	0
  2614   000C0E  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2615   000C10  0E80               	movlw	128
  2616   000C12  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2617   000C14  0E3F               	movlw	63
  2618   000C16  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2621   000C18  0E00               	movlw	0
  2622   000C1A  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2623   000C1C  0E00               	movlw	0
  2624   000C1E  6F6F               	movwf	efgtoa@e& (0+255),b
  2625   000C20                     l3315:
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2629   000C20  0E67               	movlw	103
  2630   000C22  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2631   000C24  B4D8               	btfsc	status,2,c
  2632   000C26  EF17  F006         	goto	u3511
  2633   000C2A  EF19  F006         	goto	u3510
  2634   000C2E                     u3511:
  2635   000C2E  EF1D  F006         	goto	l3319
  2636   000C32                     u3510:
  2637   000C32                     
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2640   000C32  516F               	movf	efgtoa@e& (0+255),w,b
  2641   000C34  276D               	addwf	efgtoa@m& (0+255),f,b
  2642   000C36  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2643   000C38  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2644   000C3A                     l3319:
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2648   000C3A  0E00               	movlw	0
  2649   000C3C  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2650   000C3E  0E00               	movlw	0
  2651   000C40  6F7F               	movwf	efgtoa@i& (0+255),b
  2652   000C42                     
  2653                           ; BSR set to: 0
  2654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2655   000C42  C082  F077         	movff	efgtoa@g,efgtoa@h
  2656   000C46  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  2657   000C4A  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  2658   000C4E  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  2659   000C52                     
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2662   000C52  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2663   000C56  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2664   000C5A  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2665   000C5E  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2668   000C62  EFAE  F006         	goto	l3333
  2669   000C66                     l3325:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2673   000C66  C077  F028         	movff	efgtoa@h,___fldiv@b
  2674   000C6A  C078  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2675   000C6E  C079  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2676   000C72  C07A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2677   000C76  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2678   000C7A  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2679   000C7E  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2680   000C82  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2681   000C86  ECEA  F00F         	call	___fldiv	;wreg free
  2682   000C8A  C028  F041         	movff	?___fldiv,floorf@x
  2683   000C8E  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2684   000C92  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2685   000C96  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2686   000C9A  ECC1  F012         	call	_floorf	;wreg free
  2687   000C9E  C041  F07B         	movff	?_floorf,efgtoa@l
  2688   000CA2  C042  F07C         	movff	?_floorf+1,efgtoa@l+1
  2689   000CA6  C043  F07D         	movff	?_floorf+2,efgtoa@l+2
  2690   000CAA  C044  F07E         	movff	?_floorf+3,efgtoa@l+3
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2693   000CAE  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2694   000CB2  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2695   000CB6  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2696   000CBA  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2697   000CBE  EC49  F015         	call	___fltol	;wreg free
  2698   000CC2  C001  F06B         	movff	?___fltol,efgtoa@d
  2699   000CC6  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2700   000CCA                     
  2701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2702   000CCA  C077  F028         	movff	efgtoa@h,___flsub@b
  2703   000CCE  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  2704   000CD2  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2705   000CD6  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2706   000CDA  C07B  F013         	movff	efgtoa@l,___flmul@a
  2707   000CDE  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  2708   000CE2  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  2709   000CE6  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  2710   000CEA  C088  F00F         	movff	efgtoa@u,___flmul@b
  2711   000CEE  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2712   000CF2  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2713   000CF6  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2714   000CFA  ECD5  F00D         	call	___flmul	;wreg free
  2715   000CFE  C00F  F02C         	movff	?___flmul,___flsub@a
  2716   000D02  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2717   000D06  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2718   000D0A  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2719   000D0E  EC67  F019         	call	___flsub	;wreg free
  2720   000D12  C028  F077         	movff	?___flsub,efgtoa@h
  2721   000D16  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  2722   000D1A  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  2723   000D1E  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  2724   000D22                     
  2725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2726   000D22  C088  F028         	movff	efgtoa@u,___fldiv@b
  2727   000D26  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2728   000D2A  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2729   000D2E  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2730   000D32  0E00               	movlw	0
  2731   000D34  6E2C               	movwf	___fldiv@a^0,c
  2732   000D36  0E00               	movlw	0
  2733   000D38  6E2D               	movwf	(___fldiv@a+1)^0,c
  2734   000D3A  0E20               	movlw	32
  2735   000D3C  6E2E               	movwf	(___fldiv@a+2)^0,c
  2736   000D3E  0E41               	movlw	65
  2737   000D40  6E2F               	movwf	(___fldiv@a+3)^0,c
  2738   000D42  ECEA  F00F         	call	___fldiv	;wreg free
  2739   000D46  C028  F088         	movff	?___fldiv,efgtoa@u
  2740   000D4A  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2741   000D4E  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2742   000D52  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2743   000D56                     
  2744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2745   000D56  0100               	movlb	0	; () banked
  2746   000D58  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  2747   000D5A  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  2748   000D5C                     l3333:
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2752   000D5C  516D               	movf	efgtoa@m& (0+255),w,b
  2753   000D5E  5D7F               	subwf	efgtoa@i& (0+255),w,b
  2754   000D60  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  2755   000D62  0A80               	xorlw	128
  2756   000D64  6E5C               	movwf	??_efgtoa^0,c
  2757   000D66  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2758   000D68  0A80               	xorlw	128
  2759   000D6A  585C               	subwfb	??_efgtoa^0,w,c
  2760   000D6C  A0D8               	btfss	status,0,c
  2761   000D6E  EFBB  F006         	goto	u3521
  2762   000D72  EFBD  F006         	goto	u3520
  2763   000D76                     u3521:
  2764   000D76  EF33  F006         	goto	l3325
  2765   000D7A                     u3520:
  2766   000D7A                     
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2769   000D7A  C088  F00F         	movff	efgtoa@u,___flmul@b
  2770   000D7E  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2771   000D82  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2772   000D86  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2773   000D8A  0E00               	movlw	0
  2774   000D8C  6E13               	movwf	___flmul@a^0,c
  2775   000D8E  0E00               	movlw	0
  2776   000D90  6E14               	movwf	(___flmul@a+1)^0,c
  2777   000D92  0EA0               	movlw	160
  2778   000D94  6E15               	movwf	(___flmul@a+2)^0,c
  2779   000D96  0E40               	movlw	64
  2780   000D98  6E16               	movwf	(___flmul@a+3)^0,c
  2781   000D9A  ECD5  F00D         	call	___flmul	;wreg free
  2782   000D9E  C00F  F07B         	movff	?___flmul,efgtoa@l
  2783   000DA2  C010  F07C         	movff	?___flmul+1,efgtoa@l+1
  2784   000DA6  C011  F07D         	movff	?___flmul+2,efgtoa@l+2
  2785   000DAA  C012  F07E         	movff	?___flmul+3,efgtoa@l+3
  2786   000DAE                     
  2787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2788   000DAE  C077  F028         	movff	efgtoa@h,___flge@ff1
  2789   000DB2  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2790   000DB6  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2791   000DBA  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2792   000DBE  C07B  F02C         	movff	efgtoa@l,___flge@ff2
  2793   000DC2  C07C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2794   000DC6  C07D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2795   000DCA  C07E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2796   000DCE  ECCC  F015         	call	___flge	;wreg free
  2797   000DD2  B0D8               	btfsc	status,0,c
  2798   000DD4  EFEE  F006         	goto	u3531
  2799   000DD8  EFF0  F006         	goto	u3530
  2800   000DDC                     u3531:
  2801   000DDC  EFFB  F006         	goto	l3341
  2802   000DE0                     u3530:
  2803   000DE0                     
  2804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2805   000DE0  0E00               	movlw	0
  2806   000DE2  0100               	movlb	0	; () banked
  2807   000DE4  6F7B               	movwf	efgtoa@l& (0+255),b
  2808   000DE6  0E00               	movlw	0
  2809   000DE8  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  2810   000DEA  0E00               	movlw	0
  2811   000DEC  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  2812   000DEE  0E00               	movlw	0
  2813   000DF0  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2816   000DF2  EF24  F007         	goto	l3347
  2817   000DF6                     l3341:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2820   000DF6  C077  F001         	movff	efgtoa@h,___fleq@ff1
  2821   000DFA  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2822   000DFE  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2823   000E02  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2824   000E06  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  2825   000E0A  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2826   000E0E  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2827   000E12  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2828   000E16  EC87  F017         	call	___fleq	;wreg free
  2829   000E1A  A0D8               	btfss	status,0,c
  2830   000E1C  EF12  F007         	goto	u3541
  2831   000E20  EF14  F007         	goto	u3540
  2832   000E24                     u3541:
  2833   000E24  EF24  F007         	goto	l3347
  2834   000E28                     u3540:
  2835   000E28  0100               	movlb	0	; () banked
  2836   000E2A  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2837   000E2C  EF1A  F007         	goto	u3551
  2838   000E30  EF1C  F007         	goto	u3550
  2839   000E34                     u3551:
  2840   000E34  EF24  F007         	goto	l3347
  2841   000E38                     u3550:
  2842   000E38                     
  2843                           ; BSR set to: 0
  2844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2845   000E38  0E00               	movlw	0
  2846   000E3A  6F7B               	movwf	efgtoa@l& (0+255),b
  2847   000E3C  0E00               	movlw	0
  2848   000E3E  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  2849   000E40  0E00               	movlw	0
  2850   000E42  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  2851   000E44  0E00               	movlw	0
  2852   000E46  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  2853   000E48                     l3347:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2856   000E48  C082  F001         	movff	efgtoa@g,___fladd@b
  2857   000E4C  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  2858   000E50  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  2859   000E54  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  2860   000E58  C07B  F005         	movff	efgtoa@l,___fladd@a
  2861   000E5C  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  2862   000E60  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  2863   000E64  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  2864   000E68  EC41  F009         	call	___fladd	;wreg free
  2865   000E6C  C001  F077         	movff	?___fladd,efgtoa@h
  2866   000E70  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  2867   000E74  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  2868   000E78  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  2869   000E7C                     
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2871   000E7C  C077  F028         	movff	efgtoa@h,___flge@ff1
  2872   000E80  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2873   000E84  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2874   000E88  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2875   000E8C  0E00               	movlw	0
  2876   000E8E  6E13               	movwf	___flmul@a^0,c
  2877   000E90  0E00               	movlw	0
  2878   000E92  6E14               	movwf	(___flmul@a+1)^0,c
  2879   000E94  0E20               	movlw	32
  2880   000E96  6E15               	movwf	(___flmul@a+2)^0,c
  2881   000E98  0E41               	movlw	65
  2882   000E9A  6E16               	movwf	(___flmul@a+3)^0,c
  2883   000E9C  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2884   000EA0  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2885   000EA4  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2886   000EA8  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2887   000EAC  ECD5  F00D         	call	___flmul	;wreg free
  2888   000EB0  C00F  F02C         	movff	?___flmul,___flge@ff2
  2889   000EB4  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2890   000EB8  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2891   000EBC  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2892   000EC0  ECCC  F015         	call	___flge	;wreg free
  2893   000EC4  A0D8               	btfss	status,0,c
  2894   000EC6  EF67  F007         	goto	u3561
  2895   000ECA  EF69  F007         	goto	u3560
  2896   000ECE                     u3561:
  2897   000ECE  EF92  F007         	goto	l3359
  2898   000ED2                     u3560:
  2899   000ED2                     
  2900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2901   000ED2  0100               	movlb	0	; () banked
  2902   000ED4  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2903   000ED6  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2904   000ED8                     
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2907   000ED8  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2908   000EDC  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2909   000EE0  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2910   000EE4  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2911   000EE8  0E00               	movlw	0
  2912   000EEA  6E13               	movwf	___flmul@a^0,c
  2913   000EEC  0E00               	movlw	0
  2914   000EEE  6E14               	movwf	(___flmul@a+1)^0,c
  2915   000EF0  0E20               	movlw	32
  2916   000EF2  6E15               	movwf	(___flmul@a+2)^0,c
  2917   000EF4  0E41               	movlw	65
  2918   000EF6  6E16               	movwf	(___flmul@a+3)^0,c
  2919   000EF8  ECD5  F00D         	call	___flmul	;wreg free
  2920   000EFC  C00F  F073         	movff	?___flmul,efgtoa@ou
  2921   000F00  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2922   000F04  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2923   000F08  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2924   000F0C                     
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2926   000F0C  0E66               	movlw	102
  2927   000F0E  0100               	movlb	0	; () banked
  2928   000F10  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2929   000F12  A4D8               	btfss	status,2,c
  2930   000F14  EF8E  F007         	goto	u3571
  2931   000F18  EF90  F007         	goto	u3570
  2932   000F1C                     u3571:
  2933   000F1C  EF92  F007         	goto	l3359
  2934   000F20                     u3570:
  2935   000F20                     
  2936                           ; BSR set to: 0
  2937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2938   000F20  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2939   000F22  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2940   000F24                     l3359:
  2941                           
  2942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2943   000F24  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2944   000F28  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2945   000F2C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2946   000F30  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2947   000F34                     
  2948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2949   000F34  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2950   000F38  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2951   000F3C                     
  2952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2953   000F3C  0E00               	movlw	0
  2954   000F3E  0100               	movlb	0	; () banked
  2955   000F40  6F68               	movwf	efgtoa@pp& (0+255),b
  2956   000F42                     
  2957                           ; BSR set to: 0
  2958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2959   000F42  0E00               	movlw	0
  2960   000F44  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2961   000F46  0E00               	movlw	0
  2962   000F48  6F64               	movwf	efgtoa@t& (0+255),b
  2963   000F4A                     
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2966   000F4A  0E00               	movlw	0
  2967   000F4C  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2968   000F4E  0E00               	movlw	0
  2969   000F50  6F7F               	movwf	efgtoa@i& (0+255),b
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2972   000F52  EF90  F008         	goto	l3409
  2973   000F56                     l3369:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2977   000F56  C077  F028         	movff	efgtoa@h,___fldiv@b
  2978   000F5A  C078  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2979   000F5E  C079  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2980   000F62  C07A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2981   000F66  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2982   000F6A  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2983   000F6E  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2984   000F72  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2985   000F76  ECEA  F00F         	call	___fldiv	;wreg free
  2986   000F7A  C028  F041         	movff	?___fldiv,floorf@x
  2987   000F7E  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2988   000F82  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2989   000F86  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2990   000F8A  ECC1  F012         	call	_floorf	;wreg free
  2991   000F8E  C041  F07B         	movff	?_floorf,efgtoa@l
  2992   000F92  C042  F07C         	movff	?_floorf+1,efgtoa@l+1
  2993   000F96  C043  F07D         	movff	?_floorf+2,efgtoa@l+2
  2994   000F9A  C044  F07E         	movff	?_floorf+3,efgtoa@l+3
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2997   000F9E  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2998   000FA2  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2999   000FA6  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3000   000FAA  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3001   000FAE  EC49  F015         	call	___fltol	;wreg free
  3002   000FB2  BE02               	btfsc	(?___fltol+1)^0,7,c
  3003   000FB4  EFE7  F007         	goto	u3580
  3004   000FB8  5002               	movf	(?___fltol+1)^0,w,c
  3005   000FBA  E107               	bnz	u3581
  3006   000FBC  0E0A               	movlw	10
  3007   000FBE  5C01               	subwf	?___fltol^0,w,c
  3008   000FC0  B0D8               	btfsc	status,0,c
  3009   000FC2  EFE5  F007         	goto	u3581
  3010   000FC6  EFE7  F007         	goto	u3580
  3011   000FCA                     u3581:
  3012   000FCA  EFF7  F007         	goto	l3373
  3013   000FCE                     u3580:
  3014   000FCE  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3015   000FD2  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3016   000FD6  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3017   000FDA  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3018   000FDE  EC49  F015         	call	___fltol	;wreg free
  3019   000FE2  C001  F06B         	movff	?___fltol,efgtoa@d
  3020   000FE6  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3021   000FEA  EFFC  F007         	goto	l911
  3022   000FEE                     l3373:
  3023   000FEE  0E00               	movlw	0
  3024   000FF0  0100               	movlb	0	; () banked
  3025   000FF2  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3026   000FF4  0E09               	movlw	9
  3027   000FF6  6F6B               	movwf	efgtoa@d& (0+255),b
  3028   000FF8                     l911:
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3031   000FF8  0100               	movlb	0	; () banked
  3032   000FFA  5168               	movf	efgtoa@pp& (0+255),w,b
  3033   000FFC  A4D8               	btfss	status,2,c
  3034   000FFE  EF03  F008         	goto	u3591
  3035   001002  EF05  F008         	goto	u3590
  3036   001006                     u3591:
  3037   001006  EF2D  F008         	goto	l3393
  3038   00100A                     u3590:
  3039   00100A                     
  3040                           ; BSR set to: 0
  3041   00100A  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3042   00100C  EF0C  F008         	goto	u3600
  3043   001010  EF0A  F008         	goto	u3601
  3044   001014                     u3601:
  3045   001014  EF2D  F008         	goto	l3393
  3046   001018                     u3600:
  3047   001018                     
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3050   001018  0E00               	movlw	low _dbuf
  3051   00101A  2586               	addwf	efgtoa@n& (0+255),w,b
  3052   00101C  6ED9               	movwf	fsr2l,c
  3053   00101E  0E01               	movlw	high _dbuf
  3054   001020  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3055   001022  6EDA               	movwf	fsr2h,c
  3056   001024  0E2E               	movlw	46
  3057   001026  6EDF               	movwf	indf2,c
  3058   001028                     
  3059                           ; BSR set to: 0
  3060   001028  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3061   00102A  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3062   00102C                     
  3063                           ; BSR set to: 0
  3064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3065   00102C  0771               	decf	efgtoa@w& (0+255),f,b
  3066   00102E  A0D8               	btfss	status,0,c
  3067   001030  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3068   001032                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3071   001032  0E01               	movlw	1
  3072   001034  6F68               	movwf	efgtoa@pp& (0+255),b
  3073   001036  EF2D  F008         	goto	l3393
  3074   00103A                     l3385:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3078   00103A  0E00               	movlw	low _dbuf
  3079   00103C  2586               	addwf	efgtoa@n& (0+255),w,b
  3080   00103E  6ED9               	movwf	fsr2l,c
  3081   001040  0E01               	movlw	high _dbuf
  3082   001042  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3083   001044  6EDA               	movwf	fsr2h,c
  3084   001046  0E30               	movlw	48
  3085   001048  6EDF               	movwf	indf2,c
  3086   00104A                     
  3087                           ; BSR set to: 0
  3088   00104A  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3089   00104C  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3090   00104E                     
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3093   00104E  0771               	decf	efgtoa@w& (0+255),f,b
  3094   001050  A0D8               	btfss	status,0,c
  3095   001052  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3096   001054                     
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3099   001054  0764               	decf	efgtoa@t& (0+255),f,b
  3100   001056  A0D8               	btfss	status,0,c
  3101   001058  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3102   00105A                     l3393:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3106   00105A  5164               	movf	efgtoa@t& (0+255),w,b
  3107   00105C  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3108   00105E  A4D8               	btfss	status,2,c
  3109   001060  EF34  F008         	goto	u3611
  3110   001064  EF36  F008         	goto	u3610
  3111   001068                     u3611:
  3112   001068  EF1D  F008         	goto	l3385
  3113   00106C                     u3610:
  3114   00106C                     
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3117   00106C  0E00               	movlw	low _dbuf
  3118   00106E  2586               	addwf	efgtoa@n& (0+255),w,b
  3119   001070  6ED9               	movwf	fsr2l,c
  3120   001072  0E01               	movlw	high _dbuf
  3121   001074  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3122   001076  6EDA               	movwf	fsr2h,c
  3123   001078  516B               	movf	efgtoa@d& (0+255),w,b
  3124   00107A  0F30               	addlw	48
  3125   00107C  6EDF               	movwf	indf2,c
  3126   00107E                     
  3127                           ; BSR set to: 0
  3128   00107E  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3129   001080  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3130   001082                     
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3133   001082  0771               	decf	efgtoa@w& (0+255),f,b
  3134   001084  A0D8               	btfss	status,0,c
  3135   001086  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3136   001088                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3139   001088  C077  F028         	movff	efgtoa@h,___flsub@b
  3140   00108C  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  3141   001090  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3142   001094  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3143   001098  C07B  F013         	movff	efgtoa@l,___flmul@a
  3144   00109C  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  3145   0010A0  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  3146   0010A4  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  3147   0010A8  C088  F00F         	movff	efgtoa@u,___flmul@b
  3148   0010AC  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3149   0010B0  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3150   0010B4  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3151   0010B8  ECD5  F00D         	call	___flmul	;wreg free
  3152   0010BC  C00F  F02C         	movff	?___flmul,___flsub@a
  3153   0010C0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3154   0010C4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3155   0010C8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3156   0010CC  EC67  F019         	call	___flsub	;wreg free
  3157   0010D0  C028  F077         	movff	?___flsub,efgtoa@h
  3158   0010D4  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  3159   0010D8  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  3160   0010DC  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  3161   0010E0                     
  3162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3163   0010E0  C088  F028         	movff	efgtoa@u,___fldiv@b
  3164   0010E4  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3165   0010E8  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3166   0010EC  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3167   0010F0  0E00               	movlw	0
  3168   0010F2  6E2C               	movwf	___fldiv@a^0,c
  3169   0010F4  0E00               	movlw	0
  3170   0010F6  6E2D               	movwf	(___fldiv@a+1)^0,c
  3171   0010F8  0E20               	movlw	32
  3172   0010FA  6E2E               	movwf	(___fldiv@a+2)^0,c
  3173   0010FC  0E41               	movlw	65
  3174   0010FE  6E2F               	movwf	(___fldiv@a+3)^0,c
  3175   001100  ECEA  F00F         	call	___fldiv	;wreg free
  3176   001104  C028  F088         	movff	?___fldiv,efgtoa@u
  3177   001108  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  3178   00110C  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3179   001110  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3180   001114                     
  3181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3182   001114  0100               	movlb	0	; () banked
  3183   001116  0760               	decf	efgtoa@ne& (0+255),f,b
  3184   001118  A0D8               	btfss	status,0,c
  3185   00111A  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3186   00111C                     
  3187                           ; BSR set to: 0
  3188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3189   00111C  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3190   00111E  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3191   001120                     l3409:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3195   001120  516D               	movf	efgtoa@m& (0+255),w,b
  3196   001122  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3197   001124  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3198   001126  0A80               	xorlw	128
  3199   001128  6E5C               	movwf	??_efgtoa^0,c
  3200   00112A  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3201   00112C  0A80               	xorlw	128
  3202   00112E  585C               	subwfb	??_efgtoa^0,w,c
  3203   001130  B0D8               	btfsc	status,0,c
  3204   001132  EF9D  F008         	goto	u3621
  3205   001136  EF9F  F008         	goto	u3620
  3206   00113A                     u3621:
  3207   00113A  EFAD  F008         	goto	l3413
  3208   00113E                     u3620:
  3209   00113E                     
  3210                           ; BSR set to: 0
  3211   00113E  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3212   001140  EFAB  F008         	goto	u3631
  3213   001144  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3214   001146  E109               	bnz	u3630
  3215   001148  0E4B               	movlw	75
  3216   00114A  5D86               	subwf	efgtoa@n& (0+255),w,b
  3217   00114C  A0D8               	btfss	status,0,c
  3218   00114E  EFAB  F008         	goto	u3631
  3219   001152  EFAD  F008         	goto	u3630
  3220   001156                     u3631:
  3221   001156  EFAB  F007         	goto	l3369
  3222   00115A                     u3630:
  3223   00115A                     l3413:
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3227   00115A  0E00               	movlw	0
  3228   00115C  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3229   00115E  0E4F               	movlw	79
  3230   001160  6F7F               	movwf	efgtoa@i& (0+255),b
  3231   001162                     
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3234   001162  0E00               	movlw	low _dbuf
  3235   001164  257F               	addwf	efgtoa@i& (0+255),w,b
  3236   001166  6ED9               	movwf	fsr2l,c
  3237   001168  0E01               	movlw	high _dbuf
  3238   00116A  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3239   00116C  6EDA               	movwf	fsr2h,c
  3240   00116E  0E00               	movlw	0
  3241   001170  6EDF               	movwf	indf2,c
  3242   001172                     
  3243                           ; BSR set to: 0
  3244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3245   001172  0E00               	movlw	low _dbuf
  3246   001174  6E5C               	movwf	??_efgtoa^0,c
  3247   001176  0E01               	movlw	high _dbuf
  3248   001178  6E5D               	movwf	(??_efgtoa+1)^0,c
  3249   00117A  5186               	movf	efgtoa@n& (0+255),w,b
  3250   00117C  5E5C               	subwf	??_efgtoa^0,f,c
  3251   00117E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3252   001180  5A5D               	subwfb	(??_efgtoa+1)^0,f,c
  3253   001182  517F               	movf	efgtoa@i& (0+255),w,b
  3254   001184  245C               	addwf	??_efgtoa^0,w,c
  3255   001186  6E01               	movwf	memcpy@d1^0,c
  3256   001188  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3257   00118A  205D               	addwfc	(??_efgtoa+1)^0,w,c
  3258   00118C  6E02               	movwf	(memcpy@d1+1)^0,c
  3259   00118E  0E00               	movlw	low _dbuf
  3260   001190  6E03               	movwf	memcpy@s1^0,c
  3261   001192  0E01               	movlw	high _dbuf
  3262   001194  6E04               	movwf	(memcpy@s1+1)^0,c
  3263   001196  C086  F005         	movff	efgtoa@n,memcpy@n
  3264   00119A  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3265   00119E  EC3F  F019         	call	_memcpy	;wreg free
  3266   0011A2                     
  3267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3268   0011A2  0100               	movlb	0	; () banked
  3269   0011A4  5186               	movf	efgtoa@n& (0+255),w,b
  3270   0011A6  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3271   0011A8  6F86               	movwf	efgtoa@n& (0+255),b
  3272   0011AA  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3273   0011AC  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3274   0011AE  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3275   0011B0                     
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3278   0011B0  5181               	movf	efgtoa@sign& (0+255),w,b
  3279   0011B2  A4D8               	btfss	status,2,c
  3280   0011B4  EFDE  F008         	goto	u3641
  3281   0011B8  EFE1  F008         	goto	u3640
  3282   0011BC                     u3641:
  3283   0011BC  0E01               	movlw	1
  3284   0011BE  EFE2  F008         	goto	u3650
  3285   0011C2                     u3640:
  3286   0011C2  0E00               	movlw	0
  3287   0011C4                     u3650:
  3288   0011C4  6F7F               	movwf	efgtoa@i& (0+255),b
  3289   0011C6  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  3290   0011C8                     
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  3293   0011C8  A25E               	btfss	_flags^0,1,c
  3294   0011CA  EFE9  F008         	goto	u3661
  3295   0011CE  EFEB  F008         	goto	u3660
  3296   0011D2                     u3661:
  3297   0011D2  EF19  F009         	goto	l3435
  3298   0011D6                     u3660:
  3299   0011D6  EFFB  F008         	goto	l3431
  3300   0011DA                     l3427:
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  3304   0011DA  0786               	decf	efgtoa@n& (0+255),f,b
  3305   0011DC  A0D8               	btfss	status,0,c
  3306   0011DE  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3307   0011E0  0E00               	movlw	low _dbuf
  3308   0011E2  2586               	addwf	efgtoa@n& (0+255),w,b
  3309   0011E4  6ED9               	movwf	fsr2l,c
  3310   0011E6  0E01               	movlw	high _dbuf
  3311   0011E8  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3312   0011EA  6EDA               	movwf	fsr2h,c
  3313   0011EC  0E30               	movlw	48
  3314   0011EE  6EDF               	movwf	indf2,c
  3315   0011F0                     
  3316                           ; BSR set to: 0
  3317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  3318   0011F0  0771               	decf	efgtoa@w& (0+255),f,b
  3319   0011F2  A0D8               	btfss	status,0,c
  3320   0011F4  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3321   0011F6                     l3431:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  3325   0011F6  5171               	movf	efgtoa@w& (0+255),w,b
  3326   0011F8  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3327   0011FA  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3328   0011FC  0A80               	xorlw	128
  3329   0011FE  6E5C               	movwf	??_efgtoa^0,c
  3330   001200  5172               	movf	(efgtoa@w+1)& (0+255),w,b
  3331   001202  0A80               	xorlw	128
  3332   001204  585C               	subwfb	??_efgtoa^0,w,c
  3333   001206  B0D8               	btfsc	status,0,c
  3334   001208  EF08  F009         	goto	u3671
  3335   00120C  EF0A  F009         	goto	u3670
  3336   001210                     u3671:
  3337   001210  EF19  F009         	goto	l3435
  3338   001214                     u3670:
  3339   001214                     
  3340                           ; BSR set to: 0
  3341   001214  5186               	movf	efgtoa@n& (0+255),w,b
  3342   001216  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3343   001218  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3344   00121A  0A80               	xorlw	128
  3345   00121C  6E5C               	movwf	??_efgtoa^0,c
  3346   00121E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3347   001220  0A80               	xorlw	128
  3348   001222  585C               	subwfb	??_efgtoa^0,w,c
  3349   001224  A0D8               	btfss	status,0,c
  3350   001226  EF17  F009         	goto	u3681
  3351   00122A  EF19  F009         	goto	u3680
  3352   00122E                     u3681:
  3353   00122E  EFED  F008         	goto	l3427
  3354   001232                     u3680:
  3355   001232                     l3435:
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3359   001232  5181               	movf	efgtoa@sign& (0+255),w,b
  3360   001234  B4D8               	btfsc	status,2,c
  3361   001236  EF1F  F009         	goto	u3691
  3362   00123A  EF21  F009         	goto	u3690
  3363   00123E                     u3691:
  3364   00123E  EF2C  F009         	goto	l3439
  3365   001242                     u3690:
  3366   001242                     
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3369   001242  0786               	decf	efgtoa@n& (0+255),f,b
  3370   001244  A0D8               	btfss	status,0,c
  3371   001246  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3372   001248  0E00               	movlw	low _dbuf
  3373   00124A  2586               	addwf	efgtoa@n& (0+255),w,b
  3374   00124C  6ED9               	movwf	fsr2l,c
  3375   00124E  0E01               	movlw	high _dbuf
  3376   001250  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3377   001252  6EDA               	movwf	fsr2h,c
  3378   001254  C081  FFDF         	movff	efgtoa@sign,indf2
  3379   001258                     l3439:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3383   001258  517F               	movf	efgtoa@i& (0+255),w,b
  3384   00125A  5F71               	subwf	efgtoa@w& (0+255),f,b
  3385   00125C  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3386   00125E  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3387   001260                     
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3390   001260  C055  F011         	movff	efgtoa@fp,pad@fp
  3391   001264  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3392   001268  0E00               	movlw	low _dbuf
  3393   00126A  2586               	addwf	efgtoa@n& (0+255),w,b
  3394   00126C  6E13               	movwf	pad@buf^0,c
  3395   00126E  0E01               	movlw	high _dbuf
  3396   001270  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3397   001272  6E14               	movwf	(pad@buf+1)^0,c
  3398   001274  C071  F015         	movff	efgtoa@w,pad@p
  3399   001278  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3400   00127C  EC32  F017         	call	_pad	;wreg free
  3401   001280                     l878:
  3402   001280  0012               	return		;funcret
  3403   001282                     __end_of_efgtoa:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _strcpy *****************
  3407 ;; Defined at:
  3408 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3411 ;;		 -> dbuf(80), 
  3412 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3413 ;;		 -> STR_6(4), STR_3(4), 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  d               2    6[COMRAM] PTR unsigned char 
  3416 ;;		 -> dbuf(80), 
  3417 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3418 ;;		 -> STR_6(4), STR_3(4), 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  2    0[COMRAM] PTR unsigned char 
  3421 ;; Registers used:
  3422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3428 ;;      Params:         4       0       0       0       0       0       0       0       0
  3429 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3431 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3432 ;;Total ram usage:        8 bytes
  3433 ;; Hardware stack levels used: 1
  3434 ;; Hardware stack levels required when called: 1
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_efgtoa
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text5
  3443   00339E                     __ptext5:
  3444                           	callstack 0
  3445   00339E                     _strcpy:
  3446                           	callstack 25
  3447   00339E  C003  F005         	movff	strcpy@src,strcpy@s
  3448   0033A2  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3449   0033A6  C001  F007         	movff	strcpy@dest,strcpy@d
  3450   0033AA  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3451   0033AE                     l3149:
  3452   0033AE  C005  FFF6         	movff	strcpy@s,tblptrl
  3453   0033B2  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3454   0033B6  4A05               	infsnz	strcpy@s^0,f,c
  3455   0033B8  2A06               	incf	(strcpy@s+1)^0,f,c
  3456   0033BA                     	if	0	;tblptru may be non-zero
  3457   0033BA                     	endif
  3458   0033BA                     	if	0	;tblptru may be non-zero
  3459   0033BA                     	endif
  3460   0033BA  C007  FFD9         	movff	strcpy@d,fsr2l
  3461   0033BE  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3462   0033C2  4A07               	infsnz	strcpy@d^0,f,c
  3463   0033C4  2A08               	incf	(strcpy@d+1)^0,f,c
  3464   0033C6  0008               	tblrd		*
  3465   0033C8  CFF5 FFDF          	movff	tablat,indf2
  3466   0033CC  50DF               	movf	indf2,w,c
  3467   0033CE  A4D8               	btfss	status,2,c
  3468   0033D0  EFEC  F019         	goto	u3181
  3469   0033D4  EFEE  F019         	goto	u3180
  3470   0033D8                     u3181:
  3471   0033D8  EFD7  F019         	goto	l3149
  3472   0033DC                     u3180:
  3473   0033DC  0012               	return		;funcret
  3474   0033DE                     __end_of_strcpy:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _pad *****************
  3478 ;; Defined at:
  3479 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3482 ;;		 -> sprintf@f(11), 
  3483 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3484 ;;		 -> dbuf(80), 
  3485 ;;  p               2   20[COMRAM] int 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  w               2   25[COMRAM] int 
  3488 ;;  i               2   23[COMRAM] int 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3498 ;;      Params:         6       0       0       0       0       0       0       0       0
  3499 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3500 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3501 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3502 ;;Total ram usage:       11 bytes
  3503 ;; Hardware stack levels used: 1
  3504 ;; Hardware stack levels required when called: 4
  3505 ;; This function calls:
  3506 ;;		_fputc
  3507 ;;		_fputs
  3508 ;; This function is called by:
  3509 ;;		_efgtoa
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text6
  3514   002E64                     __ptext6:
  3515                           	callstack 0
  3516   002E64                     _pad:
  3517                           	callstack 22
  3518   002E64                     
  3519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  3520   002E64  A05E               	btfss	_flags^0,0,c
  3521   002E66  EF37  F017         	goto	u3071
  3522   002E6A  EF39  F017         	goto	u3070
  3523   002E6E                     u3071:
  3524   002E6E  EF43  F017         	goto	l3111
  3525   002E72                     u3070:
  3526   002E72                     
  3527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  3528   002E72  C013  F00A         	movff	pad@buf,fputs@s
  3529   002E76  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3530   002E7A  C011  F00C         	movff	pad@fp,fputs@fp
  3531   002E7E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3532   002E82  ECAD  F019         	call	_fputs	;wreg free
  3533   002E86                     l3111:
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  3536   002E86  BE16               	btfsc	(pad@p+1)^0,7,c
  3537   002E88  EF48  F017         	goto	u3081
  3538   002E8C  EF4A  F017         	goto	u3080
  3539   002E90                     u3081:
  3540   002E90  EF50  F017         	goto	l3115
  3541   002E94                     u3080:
  3542   002E94  C015  F01A         	movff	pad@p,pad@w
  3543   002E98  C016  F01B         	movff	pad@p+1,pad@w+1
  3544   002E9C  EF54  F017         	goto	l862
  3545   002EA0                     l3115:
  3546   002EA0  0E00               	movlw	0
  3547   002EA2  6E1B               	movwf	(pad@w+1)^0,c
  3548   002EA4  0E00               	movlw	0
  3549   002EA6  6E1A               	movwf	pad@w^0,c
  3550   002EA8                     l862:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3553   002EA8  0E00               	movlw	0
  3554   002EAA  6E19               	movwf	(pad@i+1)^0,c
  3555   002EAC  0E00               	movlw	0
  3556   002EAE  6E18               	movwf	pad@i^0,c
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3559   002EB0  EF66  F017         	goto	l3121
  3560   002EB4                     l3117:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3563   002EB4  0E00               	movlw	0
  3564   002EB6  6E02               	movwf	(fputc@c+1)^0,c
  3565   002EB8  0E20               	movlw	32
  3566   002EBA  6E01               	movwf	fputc@c^0,c
  3567   002EBC  C011  F003         	movff	pad@fp,fputc@fp
  3568   002EC0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3569   002EC4  ECCD  F016         	call	_fputc	;wreg free
  3570   002EC8                     
  3571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3572   002EC8  4A18               	infsnz	pad@i^0,f,c
  3573   002ECA  2A19               	incf	(pad@i+1)^0,f,c
  3574   002ECC                     l3121:
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3577   002ECC  501A               	movf	pad@w^0,w,c
  3578   002ECE  5C18               	subwf	pad@i^0,w,c
  3579   002ED0  5019               	movf	(pad@i+1)^0,w,c
  3580   002ED2  0A80               	xorlw	128
  3581   002ED4  6E17               	movwf	??_pad^0,c
  3582   002ED6  501B               	movf	(pad@w+1)^0,w,c
  3583   002ED8  0A80               	xorlw	128
  3584   002EDA  5817               	subwfb	??_pad^0,w,c
  3585   002EDC  A0D8               	btfss	status,0,c
  3586   002EDE  EF73  F017         	goto	u3091
  3587   002EE2  EF75  F017         	goto	u3090
  3588   002EE6                     u3091:
  3589   002EE6  EF5A  F017         	goto	l3117
  3590   002EEA                     u3090:
  3591   002EEA                     
  3592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  3593   002EEA  B05E               	btfsc	_flags^0,0,c
  3594   002EEC  EF7A  F017         	goto	u3101
  3595   002EF0  EF7C  F017         	goto	u3100
  3596   002EF4                     u3101:
  3597   002EF4  EF86  F017         	goto	l867
  3598   002EF8                     u3100:
  3599   002EF8                     
  3600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3601   002EF8  C013  F00A         	movff	pad@buf,fputs@s
  3602   002EFC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3603   002F00  C011  F00C         	movff	pad@fp,fputs@fp
  3604   002F04  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3605   002F08  ECAD  F019         	call	_fputs	;wreg free
  3606   002F0C                     l867:
  3607   002F0C  0012               	return		;funcret
  3608   002F0E                     __end_of_pad:
  3609                           	callstack 0
  3610                           
  3611 ;; *************** function _fputs *****************
  3612 ;; Defined at:
  3613 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3616 ;;		 -> dbuf(80), 
  3617 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3618 ;;		 -> sprintf@f(11), 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  i               2   14[COMRAM] int 
  3621 ;;  c               1   13[COMRAM] unsigned char 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  2    9[COMRAM] int 
  3624 ;; Registers used:
  3625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3631 ;;      Params:         4       0       0       0       0       0       0       0       0
  3632 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3634 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3635 ;;Total ram usage:        7 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; Hardware stack levels required when called: 3
  3638 ;; This function calls:
  3639 ;;		_fputc
  3640 ;; This function is called by:
  3641 ;;		_pad
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text7
  3646   00335A                     __ptext7:
  3647                           	callstack 0
  3648   00335A                     _fputs:
  3649                           	callstack 22
  3650   00335A  0E00               	movlw	0
  3651   00335C  6E10               	movwf	(fputs@i+1)^0,c
  3652   00335E  0E00               	movlw	0
  3653   003360  6E0F               	movwf	fputs@i^0,c
  3654   003362  EFBE  F019         	goto	l2735
  3655   003366                     l2731:
  3656   003366  C00E  F001         	movff	fputs@c,fputc@c
  3657   00336A  6A02               	clrf	(fputc@c+1)^0,c
  3658   00336C  C00C  F003         	movff	fputs@fp,fputc@fp
  3659   003370  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3660   003374  ECCD  F016         	call	_fputc	;wreg free
  3661   003378  4A0F               	infsnz	fputs@i^0,f,c
  3662   00337A  2A10               	incf	(fputs@i+1)^0,f,c
  3663   00337C                     l2735:
  3664   00337C  500F               	movf	fputs@i^0,w,c
  3665   00337E  240A               	addwf	fputs@s^0,w,c
  3666   003380  6ED9               	movwf	fsr2l,c
  3667   003382  5010               	movf	(fputs@i+1)^0,w,c
  3668   003384  200B               	addwfc	(fputs@s+1)^0,w,c
  3669   003386  6EDA               	movwf	fsr2h,c
  3670   003388  50DF               	movf	indf2,w,c
  3671   00338A  6E0E               	movwf	fputs@c^0,c
  3672   00338C  500E               	movf	fputs@c^0,w,c
  3673   00338E  A4D8               	btfss	status,2,c
  3674   003390  EFCC  F019         	goto	u2481
  3675   003394  EFCE  F019         	goto	u2480
  3676   003398                     u2481:
  3677   003398  EFB3  F019         	goto	l2731
  3678   00339C                     u2480:
  3679   00339C  0012               	return		;funcret
  3680   00339E                     __end_of_fputs:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _fputc *****************
  3684 ;; Defined at:
  3685 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  c               2    0[COMRAM] int 
  3688 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3689 ;;		 -> sprintf@f(11), 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  2    0[COMRAM] int 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3701 ;;      Params:         4       0       0       0       0       0       0       0       0
  3702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3703 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3704 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3705 ;;Total ram usage:        9 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 2
  3708 ;; This function calls:
  3709 ;;		_putch
  3710 ;; This function is called by:
  3711 ;;		_pad
  3712 ;;		_vfpfcnvrt
  3713 ;;		_fputs
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text8
  3718   002D9A                     __ptext8:
  3719                           	callstack 0
  3720   002D9A                     _fputc:
  3721                           	callstack 25
  3722   002D9A  5003               	movf	fputc@fp^0,w,c
  3723   002D9C  1004               	iorwf	(fputc@fp+1)^0,w,c
  3724   002D9E  B4D8               	btfsc	status,2,c
  3725   002DA0  EFD4  F016         	goto	u2051
  3726   002DA4  EFD6  F016         	goto	u2050
  3727   002DA8                     u2051:
  3728   002DA8  EFDF  F016         	goto	l2517
  3729   002DAC                     u2050:
  3730   002DAC  5003               	movf	fputc@fp^0,w,c
  3731   002DAE  1004               	iorwf	(fputc@fp+1)^0,w,c
  3732   002DB0  A4D8               	btfss	status,2,c
  3733   002DB2  EFDD  F016         	goto	u2061
  3734   002DB6  EFDF  F016         	goto	u2060
  3735   002DBA                     u2061:
  3736   002DBA  EFE4  F016         	goto	l2519
  3737   002DBE                     u2060:
  3738   002DBE                     l2517:
  3739   002DBE  5001               	movf	fputc@c^0,w,c
  3740   002DC0  EC9D  F01A         	call	_putch
  3741   002DC4  EF31  F017         	goto	l1062
  3742   002DC8                     l2519:
  3743   002DC8  EE20 F009          	lfsr	2,9
  3744   002DCC  5003               	movf	fputc@fp^0,w,c
  3745   002DCE  26D9               	addwf	fsr2l,f,c
  3746   002DD0  5004               	movf	(fputc@fp+1)^0,w,c
  3747   002DD2  22DA               	addwfc	fsr2h,f,c
  3748   002DD4  50DE               	movf	postinc2,w,c
  3749   002DD6  10DE               	iorwf	postinc2,w,c
  3750   002DD8  B4D8               	btfsc	status,2,c
  3751   002DDA  EFF1  F016         	goto	u2071
  3752   002DDE  EFF3  F016         	goto	u2070
  3753   002DE2                     u2071:
  3754   002DE2  EF0E  F017         	goto	l2523
  3755   002DE6                     u2070:
  3756   002DE6  EE20 F009          	lfsr	2,9
  3757   002DEA  5003               	movf	fputc@fp^0,w,c
  3758   002DEC  26D9               	addwf	fsr2l,f,c
  3759   002DEE  5004               	movf	(fputc@fp+1)^0,w,c
  3760   002DF0  22DA               	addwfc	fsr2h,f,c
  3761   002DF2  EE10 F003          	lfsr	1,3
  3762   002DF6  5003               	movf	fputc@fp^0,w,c
  3763   002DF8  26E1               	addwf	fsr1l,f,c
  3764   002DFA  5004               	movf	(fputc@fp+1)^0,w,c
  3765   002DFC  22E2               	addwfc	fsr1h,f,c
  3766   002DFE  50DE               	movf	postinc2,w,c
  3767   002E00  5CE6               	subwf	postinc1,w,c
  3768   002E02  50E6               	movf	postinc1,w,c
  3769   002E04  0A80               	xorlw	128
  3770   002E06  6E09               	movwf	(??_fputc+4)^0,c
  3771   002E08  50DE               	movf	postinc2,w,c
  3772   002E0A  0A80               	xorlw	128
  3773   002E0C  5809               	subwfb	(??_fputc+4)^0,w,c
  3774   002E0E  B0D8               	btfsc	status,0,c
  3775   002E10  EF0C  F017         	goto	u2081
  3776   002E14  EF0E  F017         	goto	u2080
  3777   002E18                     u2081:
  3778   002E18  EF31  F017         	goto	l1062
  3779   002E1C                     u2080:
  3780   002E1C                     l2523:
  3781   002E1C  EE20 F003          	lfsr	2,3
  3782   002E20  5003               	movf	fputc@fp^0,w,c
  3783   002E22  26D9               	addwf	fsr2l,f,c
  3784   002E24  5004               	movf	(fputc@fp+1)^0,w,c
  3785   002E26  22DA               	addwfc	fsr2h,f,c
  3786   002E28  CFDE F005          	movff	postinc2,??_fputc
  3787   002E2C  CFDD F006          	movff	postdec2,??_fputc+1
  3788   002E30  C003  FFD9         	movff	fputc@fp,fsr2l
  3789   002E34  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3790   002E38  CFDE F007          	movff	postinc2,??_fputc+2
  3791   002E3C  CFDD F008          	movff	postdec2,??_fputc+3
  3792   002E40  5005               	movf	??_fputc^0,w,c
  3793   002E42  2407               	addwf	(??_fputc+2)^0,w,c
  3794   002E44  6ED9               	movwf	fsr2l,c
  3795   002E46  5006               	movf	(??_fputc+1)^0,w,c
  3796   002E48  2008               	addwfc	(??_fputc+3)^0,w,c
  3797   002E4A  6EDA               	movwf	fsr2h,c
  3798   002E4C  C001  FFDF         	movff	fputc@c,indf2
  3799   002E50  EE20 F003          	lfsr	2,3
  3800   002E54  5003               	movf	fputc@fp^0,w,c
  3801   002E56  26D9               	addwf	fsr2l,f,c
  3802   002E58  5004               	movf	(fputc@fp+1)^0,w,c
  3803   002E5A  22DA               	addwfc	fsr2h,f,c
  3804   002E5C  2ADE               	incf	postinc2,f,c
  3805   002E5E  0E00               	movlw	0
  3806   002E60  22DD               	addwfc	postdec2,f,c
  3807   002E62                     l1062:
  3808   002E62  0012               	return		;funcret
  3809   002E64                     __end_of_fputc:
  3810                           	callstack 0
  3811                           
  3812 ;; *************** function _putch *****************
  3813 ;; Defined at:
  3814 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  c               1    wreg     unsigned char 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  c               1    0[COMRAM] unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3828 ;;      Params:         0       0       0       0       0       0       0       0       0
  3829 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3831 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3832 ;;Total ram usage:        0 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 1
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_fputc
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text9
  3843   00353A                     __ptext9:
  3844                           	callstack 0
  3845   00353A                     _putch:
  3846                           	callstack 25
  3847   00353A  0012               	return		;funcret
  3848   00353C                     __end_of_putch:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function _memcpy *****************
  3852 ;; Defined at:
  3853 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  d1              2    0[COMRAM] PTR void 
  3856 ;;		 -> dbuf(80), 
  3857 ;;  s1              2    2[COMRAM] PTR const void 
  3858 ;;		 -> dbuf(80), 
  3859 ;;  n               2    4[COMRAM] unsigned int 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3862 ;;		 -> dbuf(80), 
  3863 ;;  d               2    6[COMRAM] PTR unsigned char 
  3864 ;;		 -> dbuf(80), 
  3865 ;;  tmp             1   10[COMRAM] unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  2    0[COMRAM] PTR void 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3875 ;;      Params:         6       0       0       0       0       0       0       0       0
  3876 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3878 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3879 ;;Total ram usage:       11 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; Hardware stack levels required when called: 1
  3882 ;; This function calls:
  3883 ;;		Nothing
  3884 ;; This function is called by:
  3885 ;;		_efgtoa
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text10
  3890   00327E                     __ptext10:
  3891                           	callstack 0
  3892   00327E                     _memcpy:
  3893                           	callstack 25
  3894   00327E  C003  F009         	movff	memcpy@s1,memcpy@s
  3895   003282  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3896   003286  C001  F007         	movff	memcpy@d1,memcpy@d
  3897   00328A  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3898   00328E  EF59  F019         	goto	l3193
  3899   003292                     l3185:
  3900   003292  C009  FFD9         	movff	memcpy@s,fsr2l
  3901   003296  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3902   00329A  50DF               	movf	indf2,w,c
  3903   00329C  6E0B               	movwf	memcpy@tmp^0,c
  3904   00329E  4A09               	infsnz	memcpy@s^0,f,c
  3905   0032A0  2A0A               	incf	(memcpy@s+1)^0,f,c
  3906   0032A2  C007  FFD9         	movff	memcpy@d,fsr2l
  3907   0032A6  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3908   0032AA  C00B  FFDF         	movff	memcpy@tmp,indf2
  3909   0032AE  4A07               	infsnz	memcpy@d^0,f,c
  3910   0032B0  2A08               	incf	(memcpy@d+1)^0,f,c
  3911   0032B2                     l3193:
  3912   0032B2  0605               	decf	memcpy@n^0,f,c
  3913   0032B4  A0D8               	btfss	status,0,c
  3914   0032B6  0606               	decf	(memcpy@n+1)^0,f,c
  3915   0032B8  2805               	incf	memcpy@n^0,w,c
  3916   0032BA  E106               	bnz	u3301
  3917   0032BC  2806               	incf	(memcpy@n+1)^0,w,c
  3918   0032BE  A4D8               	btfss	status,2,c
  3919   0032C0  EF64  F019         	goto	u3301
  3920   0032C4  EF66  F019         	goto	u3300
  3921   0032C8                     u3301:
  3922   0032C8  EF49  F019         	goto	l3185
  3923   0032CC                     u3300:
  3924   0032CC  0012               	return		;funcret
  3925   0032CE                     __end_of_memcpy:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _labs *****************
  3929 ;; Defined at:
  3930 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  a               4    0[COMRAM] long 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  4    0[COMRAM] long 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3944 ;;      Params:         4       0       0       0       0       0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3946 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3947 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3948 ;;Total ram usage:        8 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 1
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_efgtoa
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text11
  3959   0030B2                     __ptext11:
  3960                           	callstack 0
  3961   0030B2                     _labs:
  3962                           	callstack 25
  3963   0030B2  BE04               	btfsc	(labs@a+3)^0,7,c
  3964   0030B4  EF68  F018         	goto	u3190
  3965   0030B8  5004               	movf	(labs@a+3)^0,w,c
  3966   0030BA  1003               	iorwf	(labs@a+2)^0,w,c
  3967   0030BC  1002               	iorwf	(labs@a+1)^0,w,c
  3968   0030BE  E106               	bnz	u3191
  3969   0030C0  0401               	decf	labs@a^0,w,c
  3970   0030C2  B0D8               	btfsc	status,0,c
  3971   0030C4  EF66  F018         	goto	u3191
  3972   0030C8  EF68  F018         	goto	u3190
  3973   0030CC                     u3191:
  3974   0030CC  EF83  F018         	goto	l1041
  3975   0030D0                     u3190:
  3976   0030D0  C001  F005         	movff	labs@a,??_labs
  3977   0030D4  C002  F006         	movff	labs@a+1,??_labs+1
  3978   0030D8  C003  F007         	movff	labs@a+2,??_labs+2
  3979   0030DC  C004  F008         	movff	labs@a+3,??_labs+3
  3980   0030E0  1E05               	comf	??_labs^0,f,c
  3981   0030E2  1E06               	comf	(??_labs+1)^0,f,c
  3982   0030E4  1E07               	comf	(??_labs+2)^0,f,c
  3983   0030E6  1E08               	comf	(??_labs+3)^0,f,c
  3984   0030E8  2A05               	incf	??_labs^0,f,c
  3985   0030EA  0E00               	movlw	0
  3986   0030EC  2206               	addwfc	(??_labs+1)^0,f,c
  3987   0030EE  2207               	addwfc	(??_labs+2)^0,f,c
  3988   0030F0  2208               	addwfc	(??_labs+3)^0,f,c
  3989   0030F2  C005  F001         	movff	??_labs,?_labs
  3990   0030F6  C006  F002         	movff	??_labs+1,?_labs+1
  3991   0030FA  C007  F003         	movff	??_labs+2,?_labs+2
  3992   0030FE  C008  F004         	movff	??_labs+3,?_labs+3
  3993   003102  EF8B  F018         	goto	l1044
  3994   003106                     l1041:
  3995   003106  C001  F001         	movff	labs@a,?_labs
  3996   00310A  C002  F002         	movff	labs@a+1,?_labs+1
  3997   00310E  C003  F003         	movff	labs@a+2,?_labs+2
  3998   003112  C004  F004         	movff	labs@a+3,?_labs+3
  3999   003116                     l1044:
  4000   003116  0012               	return		;funcret
  4001   003118                     __end_of_labs:
  4002                           	callstack 0
  4003                           
  4004 ;; *************** function _floorf *****************
  4005 ;; Defined at:
  4006 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  x               4   64[COMRAM] float 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  u               4   80[COMRAM] struct .
  4011 ;;  m               4   74[COMRAM] unsigned long 
  4012 ;;  e               2   78[COMRAM] int 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  4   64[COMRAM] float 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4022 ;;      Params:         4       0       0       0       0       0       0       0       0
  4023 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4024 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4025 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4026 ;;Total ram usage:       20 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 1
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_efgtoa
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text12
  4037   002582                     __ptext12:
  4038                           	callstack 0
  4039   002582                     _floorf:
  4040                           	callstack 25
  4041   002582  C0C1  F051         	movff	floorf@F526,floorf@u
  4042   002586  C0C2  F052         	movff	floorf@F526+1,floorf@u+1
  4043   00258A  C0C3  F053         	movff	floorf@F526+2,floorf@u+2
  4044   00258E  C0C4  F054         	movff	floorf@F526+3,floorf@u+3
  4045   002592  C041  F051         	movff	floorf@x,floorf@u
  4046   002596  C042  F052         	movff	floorf@x+1,floorf@u+1
  4047   00259A  C043  F053         	movff	floorf@x+2,floorf@u+2
  4048   00259E  C044  F054         	movff	floorf@x+3,floorf@u+3
  4049   0025A2  0E81               	movlw	129
  4050   0025A4  6E45               	movwf	??_floorf^0,c
  4051   0025A6  0EFF               	movlw	255
  4052   0025A8  6E46               	movwf	(??_floorf+1)^0,c
  4053   0025AA  C051  F047         	movff	floorf@u,??_floorf+2
  4054   0025AE  C052  F048         	movff	floorf@u+1,??_floorf+3
  4055   0025B2  C053  F049         	movff	floorf@u+2,??_floorf+4
  4056   0025B6  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4057   0025BA  0E18               	movlw	24
  4058   0025BC  EFE5  F012         	goto	u3200
  4059   0025C0                     u3205:
  4060   0025C0  90D8               	bcf	status,0,c
  4061   0025C2  324A               	rrcf	(??_floorf+5)^0,f,c
  4062   0025C4  3249               	rrcf	(??_floorf+4)^0,f,c
  4063   0025C6  3248               	rrcf	(??_floorf+3)^0,f,c
  4064   0025C8  3247               	rrcf	(??_floorf+2)^0,f,c
  4065   0025CA                     u3200:
  4066   0025CA  2EE8               	decfsz	wreg,f,c
  4067   0025CC  EFE0  F012         	goto	u3205
  4068   0025D0  5047               	movf	(??_floorf+2)^0,w,c
  4069   0025D2  2445               	addwf	??_floorf^0,w,c
  4070   0025D4  6E4F               	movwf	floorf@e^0,c
  4071   0025D6  0E00               	movlw	0
  4072   0025D8  2046               	addwfc	(??_floorf+1)^0,w,c
  4073   0025DA  6E50               	movwf	(floorf@e+1)^0,c
  4074   0025DC  BE50               	btfsc	(floorf@e+1)^0,7,c
  4075   0025DE  EFFA  F012         	goto	u3211
  4076   0025E2  5050               	movf	(floorf@e+1)^0,w,c
  4077   0025E4  E109               	bnz	u3210
  4078   0025E6  0E17               	movlw	23
  4079   0025E8  5C4F               	subwf	floorf@e^0,w,c
  4080   0025EA  A0D8               	btfss	status,0,c
  4081   0025EC  EFFA  F012         	goto	u3211
  4082   0025F0  EFFC  F012         	goto	u3210
  4083   0025F4                     u3211:
  4084   0025F4  EF06  F013         	goto	l3161
  4085   0025F8                     u3210:
  4086   0025F8                     l3159:
  4087   0025F8  C041  F041         	movff	floorf@x,?_floorf
  4088   0025FC  C042  F042         	movff	floorf@x+1,?_floorf+1
  4089   002600  C043  F043         	movff	floorf@x+2,?_floorf+2
  4090   002604  C044  F044         	movff	floorf@x+3,?_floorf+3
  4091   002608  EFC9  F013         	goto	l1016
  4092   00260C                     l3161:
  4093   00260C  BE50               	btfsc	(floorf@e+1)^0,7,c
  4094   00260E  EF0B  F013         	goto	u3221
  4095   002612  EF0D  F013         	goto	u3220
  4096   002616                     u3221:
  4097   002616  EF7D  F013         	goto	l3171
  4098   00261A                     u3220:
  4099   00261A  C04F  F045         	movff	floorf@e,??_floorf
  4100   00261E  0EFF               	movlw	255
  4101   002620  6E46               	movwf	(??_floorf+1)^0,c
  4102   002622  0EFF               	movlw	255
  4103   002624  6E47               	movwf	(??_floorf+2)^0,c
  4104   002626  0E7F               	movlw	127
  4105   002628  6E48               	movwf	(??_floorf+3)^0,c
  4106   00262A  0E00               	movlw	0
  4107   00262C  6E49               	movwf	(??_floorf+4)^0,c
  4108   00262E                     u3235:
  4109   00262E  6645               	tstfsz	??_floorf^0,c
  4110   002630  EF1C  F013         	goto	u3236
  4111   002634  EF24  F013         	goto	u3237
  4112   002638                     u3236:
  4113   002638  3449               	rlcf	(??_floorf+4)^0,w,c
  4114   00263A  3249               	rrcf	(??_floorf+4)^0,f,c
  4115   00263C  3248               	rrcf	(??_floorf+3)^0,f,c
  4116   00263E  3247               	rrcf	(??_floorf+2)^0,f,c
  4117   002640  3246               	rrcf	(??_floorf+1)^0,f,c
  4118   002642  2E45               	decfsz	??_floorf^0,f,c
  4119   002644  EF17  F013         	goto	u3235
  4120   002648                     u3237:
  4121   002648  C046  F04B         	movff	??_floorf+1,floorf@m
  4122   00264C  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4123   002650  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4124   002654  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4125   002658  504B               	movf	floorf@m^0,w,c
  4126   00265A  1451               	andwf	floorf@u^0,w,c
  4127   00265C  6E45               	movwf	??_floorf^0,c
  4128   00265E  504C               	movf	(floorf@m+1)^0,w,c
  4129   002660  1452               	andwf	(floorf@u+1)^0,w,c
  4130   002662  6E46               	movwf	(??_floorf+1)^0,c
  4131   002664  504D               	movf	(floorf@m+2)^0,w,c
  4132   002666  1453               	andwf	(floorf@u+2)^0,w,c
  4133   002668  6E47               	movwf	(??_floorf+2)^0,c
  4134   00266A  504E               	movf	(floorf@m+3)^0,w,c
  4135   00266C  1454               	andwf	(floorf@u+3)^0,w,c
  4136   00266E  6E48               	movwf	(??_floorf+3)^0,c
  4137   002670  5045               	movf	??_floorf^0,w,c
  4138   002672  1046               	iorwf	(??_floorf+1)^0,w,c
  4139   002674  1047               	iorwf	(??_floorf+2)^0,w,c
  4140   002676  1048               	iorwf	(??_floorf+3)^0,w,c
  4141   002678  A4D8               	btfss	status,2,c
  4142   00267A  EF41  F013         	goto	u3241
  4143   00267E  EF43  F013         	goto	u3240
  4144   002682                     u3241:
  4145   002682  EF45  F013         	goto	l3167
  4146   002686                     u3240:
  4147   002686  EFFC  F012         	goto	l3159
  4148   00268A                     l3167:
  4149   00268A  C051  F045         	movff	floorf@u,??_floorf
  4150   00268E  C052  F046         	movff	floorf@u+1,??_floorf+1
  4151   002692  C053  F047         	movff	floorf@u+2,??_floorf+2
  4152   002696  C054  F048         	movff	floorf@u+3,??_floorf+3
  4153   00269A  0E20               	movlw	32
  4154   00269C  EF55  F013         	goto	u3250
  4155   0026A0                     u3255:
  4156   0026A0  90D8               	bcf	status,0,c
  4157   0026A2  3248               	rrcf	(??_floorf+3)^0,f,c
  4158   0026A4  3247               	rrcf	(??_floorf+2)^0,f,c
  4159   0026A6  3246               	rrcf	(??_floorf+1)^0,f,c
  4160   0026A8  3245               	rrcf	??_floorf^0,f,c
  4161   0026AA                     u3250:
  4162   0026AA  2EE8               	decfsz	wreg,f,c
  4163   0026AC  EF50  F013         	goto	u3255
  4164   0026B0  5045               	movf	??_floorf^0,w,c
  4165   0026B2  1046               	iorwf	(??_floorf+1)^0,w,c
  4166   0026B4  1047               	iorwf	(??_floorf+2)^0,w,c
  4167   0026B6  1048               	iorwf	(??_floorf+3)^0,w,c
  4168   0026B8  B4D8               	btfsc	status,2,c
  4169   0026BA  EF61  F013         	goto	u3261
  4170   0026BE  EF63  F013         	goto	u3260
  4171   0026C2                     u3261:
  4172   0026C2  EF6B  F013         	goto	l1019
  4173   0026C6                     u3260:
  4174   0026C6  504B               	movf	floorf@m^0,w,c
  4175   0026C8  2651               	addwf	floorf@u^0,f,c
  4176   0026CA  504C               	movf	(floorf@m+1)^0,w,c
  4177   0026CC  2252               	addwfc	(floorf@u+1)^0,f,c
  4178   0026CE  504D               	movf	(floorf@m+2)^0,w,c
  4179   0026D0  2253               	addwfc	(floorf@u+2)^0,f,c
  4180   0026D2  504E               	movf	(floorf@m+3)^0,w,c
  4181   0026D4  2254               	addwfc	(floorf@u+3)^0,f,c
  4182   0026D6                     l1019:
  4183   0026D6  1C4B               	comf	floorf@m^0,w,c
  4184   0026D8  6E45               	movwf	??_floorf^0,c
  4185   0026DA  1C4C               	comf	(floorf@m+1)^0,w,c
  4186   0026DC  6E46               	movwf	(??_floorf+1)^0,c
  4187   0026DE  1C4D               	comf	(floorf@m+2)^0,w,c
  4188   0026E0  6E47               	movwf	(??_floorf+2)^0,c
  4189   0026E2  1C4E               	comf	(floorf@m+3)^0,w,c
  4190   0026E4  6E48               	movwf	(??_floorf+3)^0,c
  4191   0026E6  5045               	movf	??_floorf^0,w,c
  4192   0026E8  1651               	andwf	floorf@u^0,f,c
  4193   0026EA  5046               	movf	(??_floorf+1)^0,w,c
  4194   0026EC  1652               	andwf	(floorf@u+1)^0,f,c
  4195   0026EE  5047               	movf	(??_floorf+2)^0,w,c
  4196   0026F0  1653               	andwf	(floorf@u+2)^0,f,c
  4197   0026F2  5048               	movf	(??_floorf+3)^0,w,c
  4198   0026F4  1654               	andwf	(floorf@u+3)^0,f,c
  4199   0026F6  EFC1  F013         	goto	l3179
  4200   0026FA                     l3171:
  4201   0026FA  C051  F045         	movff	floorf@u,??_floorf
  4202   0026FE  C052  F046         	movff	floorf@u+1,??_floorf+1
  4203   002702  C053  F047         	movff	floorf@u+2,??_floorf+2
  4204   002706  C054  F048         	movff	floorf@u+3,??_floorf+3
  4205   00270A  0E20               	movlw	32
  4206   00270C  EF8D  F013         	goto	u3270
  4207   002710                     u3275:
  4208   002710  90D8               	bcf	status,0,c
  4209   002712  3248               	rrcf	(??_floorf+3)^0,f,c
  4210   002714  3247               	rrcf	(??_floorf+2)^0,f,c
  4211   002716  3246               	rrcf	(??_floorf+1)^0,f,c
  4212   002718  3245               	rrcf	??_floorf^0,f,c
  4213   00271A                     u3270:
  4214   00271A  2EE8               	decfsz	wreg,f,c
  4215   00271C  EF88  F013         	goto	u3275
  4216   002720  5045               	movf	??_floorf^0,w,c
  4217   002722  1046               	iorwf	(??_floorf+1)^0,w,c
  4218   002724  1047               	iorwf	(??_floorf+2)^0,w,c
  4219   002726  1048               	iorwf	(??_floorf+3)^0,w,c
  4220   002728  A4D8               	btfss	status,2,c
  4221   00272A  EF99  F013         	goto	u3281
  4222   00272E  EF9B  F013         	goto	u3280
  4223   002732                     u3281:
  4224   002732  EFA5  F013         	goto	l3175
  4225   002736                     u3280:
  4226   002736  0E00               	movlw	0
  4227   002738  6E51               	movwf	floorf@u^0,c
  4228   00273A  0E00               	movlw	0
  4229   00273C  6E52               	movwf	(floorf@u+1)^0,c
  4230   00273E  0E00               	movlw	0
  4231   002740  6E53               	movwf	(floorf@u+2)^0,c
  4232   002742  0E00               	movlw	0
  4233   002744  6E54               	movwf	(floorf@u+3)^0,c
  4234   002746  EFC1  F013         	goto	l3179
  4235   00274A                     l3175:
  4236   00274A  90D8               	bcf	status,0,c
  4237   00274C  3451               	rlcf	floorf@u^0,w,c
  4238   00274E  6E45               	movwf	??_floorf^0,c
  4239   002750  3452               	rlcf	(floorf@u+1)^0,w,c
  4240   002752  6E46               	movwf	(??_floorf+1)^0,c
  4241   002754  3453               	rlcf	(floorf@u+2)^0,w,c
  4242   002756  6E47               	movwf	(??_floorf+2)^0,c
  4243   002758  3454               	rlcf	(floorf@u+3)^0,w,c
  4244   00275A  6E48               	movwf	(??_floorf+3)^0,c
  4245   00275C  5045               	movf	??_floorf^0,w,c
  4246   00275E  1046               	iorwf	(??_floorf+1)^0,w,c
  4247   002760  1047               	iorwf	(??_floorf+2)^0,w,c
  4248   002762  1048               	iorwf	(??_floorf+3)^0,w,c
  4249   002764  B4D8               	btfsc	status,2,c
  4250   002766  EFB7  F013         	goto	u3291
  4251   00276A  EFB9  F013         	goto	u3290
  4252   00276E                     u3291:
  4253   00276E  EFC1  F013         	goto	l3179
  4254   002772                     u3290:
  4255   002772  0E00               	movlw	0
  4256   002774  6E51               	movwf	floorf@u^0,c
  4257   002776  0E00               	movlw	0
  4258   002778  6E52               	movwf	(floorf@u+1)^0,c
  4259   00277A  0E80               	movlw	128
  4260   00277C  6E53               	movwf	(floorf@u+2)^0,c
  4261   00277E  0EBF               	movlw	191
  4262   002780  6E54               	movwf	(floorf@u+3)^0,c
  4263   002782                     l3179:
  4264   002782  C051  F041         	movff	floorf@u,?_floorf
  4265   002786  C052  F042         	movff	floorf@u+1,?_floorf+1
  4266   00278A  C053  F043         	movff	floorf@u+2,?_floorf+2
  4267   00278E  C054  F044         	movff	floorf@u+3,?_floorf+3
  4268   002792                     l1016:
  4269   002792  0012               	return		;funcret
  4270   002794                     __end_of_floorf:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function ___fpclassifyf *****************
  4274 ;; Defined at:
  4275 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  x               4    0[COMRAM] float 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  u               4   10[COMRAM] struct .
  4280 ;;  e               2    8[COMRAM] int 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  2    0[COMRAM] int 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4290 ;;      Params:         4       0       0       0       0       0       0       0       0
  4291 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4292 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4293 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4294 ;;Total ram usage:       14 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; Hardware stack levels required when called: 1
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_efgtoa
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text13
  4305   002C9C                     __ptext13:
  4306                           	callstack 0
  4307   002C9C                     ___fpclassifyf:
  4308                           	callstack 25
  4309   002C9C  C0C5  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4310   002CA0  C0C6  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4311   002CA4  C0C7  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4312   002CA8  C0C8  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4313   002CAC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4314   002CB0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4315   002CB4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4316   002CB8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4317   002CBC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4318   002CC0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4319   002CC4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4320   002CC8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4321   002CCC  0E18               	movlw	24
  4322   002CCE  EF6E  F016         	goto	u3110
  4323   002CD2                     u3115:
  4324   002CD2  90D8               	bcf	status,0,c
  4325   002CD4  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4326   002CD6  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4327   002CD8  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4328   002CDA  3205               	rrcf	??___fpclassifyf^0,f,c
  4329   002CDC                     u3110:
  4330   002CDC  2EE8               	decfsz	wreg,f,c
  4331   002CDE  EF69  F016         	goto	u3115
  4332   002CE2  5005               	movf	??___fpclassifyf^0,w,c
  4333   002CE4  6E09               	movwf	___fpclassifyf@e^0,c
  4334   002CE6  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4335   002CE8  5009               	movf	___fpclassifyf@e^0,w,c
  4336   002CEA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4337   002CEC  A4D8               	btfss	status,2,c
  4338   002CEE  EF7B  F016         	goto	u3121
  4339   002CF2  EF7D  F016         	goto	u3120
  4340   002CF6                     u3121:
  4341   002CF6  EF9D  F016         	goto	l3137
  4342   002CFA                     u3120:
  4343   002CFA  90D8               	bcf	status,0,c
  4344   002CFC  340B               	rlcf	___fpclassifyf@u^0,w,c
  4345   002CFE  6E05               	movwf	??___fpclassifyf^0,c
  4346   002D00  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4347   002D02  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4348   002D04  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4349   002D06  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4350   002D08  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4351   002D0A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4352   002D0C  5005               	movf	??___fpclassifyf^0,w,c
  4353   002D0E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4354   002D10  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4355   002D12  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4356   002D14  A4D8               	btfss	status,2,c
  4357   002D16  EF8F  F016         	goto	u3131
  4358   002D1A  EF91  F016         	goto	u3130
  4359   002D1E                     u3131:
  4360   002D1E  EF97  F016         	goto	l3133
  4361   002D22                     u3130:
  4362   002D22  0E00               	movlw	0
  4363   002D24  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4364   002D26  0E02               	movlw	2
  4365   002D28  6E01               	movwf	?___fpclassifyf^0,c
  4366   002D2A  EFCC  F016         	goto	l984
  4367   002D2E                     l3133:
  4368   002D2E  0E00               	movlw	0
  4369   002D30  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4370   002D32  0E03               	movlw	3
  4371   002D34  6E01               	movwf	?___fpclassifyf^0,c
  4372   002D36  EFCC  F016         	goto	l984
  4373   002D3A                     l3137:
  4374   002D3A  2809               	incf	___fpclassifyf@e^0,w,c
  4375   002D3C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4376   002D3E  A4D8               	btfss	status,2,c
  4377   002D40  EFA4  F016         	goto	u3141
  4378   002D44  EFA6  F016         	goto	u3140
  4379   002D48                     u3141:
  4380   002D48  EFC8  F016         	goto	l3143
  4381   002D4C                     u3140:
  4382   002D4C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4383   002D50  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4384   002D54  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4385   002D58  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4386   002D5C  0E09               	movlw	9
  4387   002D5E                     u3155:
  4388   002D5E  90D8               	bcf	status,0,c
  4389   002D60  3605               	rlcf	??___fpclassifyf^0,f,c
  4390   002D62  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4391   002D64  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4392   002D66  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4393   002D68  2EE8               	decfsz	wreg,f,c
  4394   002D6A  EFAF  F016         	goto	u3155
  4395   002D6E  5005               	movf	??___fpclassifyf^0,w,c
  4396   002D70  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4397   002D72  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4398   002D74  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4399   002D76  B4D8               	btfsc	status,2,c
  4400   002D78  EFC0  F016         	goto	u3161
  4401   002D7C  EFC3  F016         	goto	u3160
  4402   002D80                     u3161:
  4403   002D80  0E01               	movlw	1
  4404   002D82  EFC4  F016         	goto	u3170
  4405   002D86                     u3160:
  4406   002D86  0E00               	movlw	0
  4407   002D88                     u3170:
  4408   002D88  6E01               	movwf	?___fpclassifyf^0,c
  4409   002D8A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4410   002D8C  EFCC  F016         	goto	l984
  4411   002D90                     l3143:
  4412   002D90  0E00               	movlw	0
  4413   002D92  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4414   002D94  0E04               	movlw	4
  4415   002D96  6E01               	movwf	?___fpclassifyf^0,c
  4416   002D98                     l984:
  4417   002D98  0012               	return		;funcret
  4418   002D9A                     __end_of___fpclassifyf:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function ___fltol *****************
  4422 ;; Defined at:
  4423 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  f1              4    0[COMRAM] int 
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  exp1            1    9[COMRAM] unsigned char 
  4428 ;;  sign1           1    8[COMRAM] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  4    0[COMRAM] long 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4438 ;;      Params:         4       0       0       0       0       0       0       0       0
  4439 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4440 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4441 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4442 ;;Total ram usage:       10 bytes
  4443 ;; Hardware stack levels used: 1
  4444 ;; Hardware stack levels required when called: 1
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_efgtoa
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text14
  4453   002A92                     __ptext14:
  4454                           	callstack 0
  4455   002A92                     ___fltol:
  4456                           	callstack 25
  4457   002A92  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4458   002A94  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4459   002A96  6E0A               	movwf	___fltol@exp1^0,c
  4460   002A98  500A               	movf	___fltol@exp1^0,w,c
  4461   002A9A  A4D8               	btfss	status,2,c
  4462   002A9C  EF52  F015         	goto	u3001
  4463   002AA0  EF54  F015         	goto	u3000
  4464   002AA4                     u3001:
  4465   002AA4  EF5E  F015         	goto	l3069
  4466   002AA8                     u3000:
  4467   002AA8                     l3065:
  4468   002AA8  0E00               	movlw	0
  4469   002AAA  6E01               	movwf	?___fltol^0,c
  4470   002AAC  0E00               	movlw	0
  4471   002AAE  6E02               	movwf	(?___fltol+1)^0,c
  4472   002AB0  0E00               	movlw	0
  4473   002AB2  6E03               	movwf	(?___fltol+2)^0,c
  4474   002AB4  0E00               	movlw	0
  4475   002AB6  6E04               	movwf	(?___fltol+3)^0,c
  4476   002AB8  EFCB  F015         	goto	l446
  4477   002ABC                     l3069:
  4478   002ABC  C001  F005         	movff	___fltol@f1,??___fltol
  4479   002AC0  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4480   002AC4  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4481   002AC8  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4482   002ACC  0E20               	movlw	32
  4483   002ACE  EF6E  F015         	goto	u3010
  4484   002AD2                     u3015:
  4485   002AD2  90D8               	bcf	status,0,c
  4486   002AD4  3208               	rrcf	(??___fltol+3)^0,f,c
  4487   002AD6  3207               	rrcf	(??___fltol+2)^0,f,c
  4488   002AD8  3206               	rrcf	(??___fltol+1)^0,f,c
  4489   002ADA  3205               	rrcf	??___fltol^0,f,c
  4490   002ADC                     u3010:
  4491   002ADC  2EE8               	decfsz	wreg,f,c
  4492   002ADE  EF69  F015         	goto	u3015
  4493   002AE2  5005               	movf	??___fltol^0,w,c
  4494   002AE4  6E09               	movwf	___fltol@sign1^0,c
  4495   002AE6  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4496   002AE8  0EFF               	movlw	255
  4497   002AEA  1601               	andwf	___fltol@f1^0,f,c
  4498   002AEC  0EFF               	movlw	255
  4499   002AEE  1602               	andwf	(___fltol@f1+1)^0,f,c
  4500   002AF0  0EFF               	movlw	255
  4501   002AF2  1603               	andwf	(___fltol@f1+2)^0,f,c
  4502   002AF4  0E00               	movlw	0
  4503   002AF6  1604               	andwf	(___fltol@f1+3)^0,f,c
  4504   002AF8  0E96               	movlw	150
  4505   002AFA  5E0A               	subwf	___fltol@exp1^0,f,c
  4506   002AFC  BE0A               	btfsc	___fltol@exp1^0,7,c
  4507   002AFE  EF85  F015         	goto	u3020
  4508   002B02  EF83  F015         	goto	u3021
  4509   002B06                     u3021:
  4510   002B06  EF9B  F015         	goto	l3089
  4511   002B0A                     u3020:
  4512   002B0A  500A               	movf	___fltol@exp1^0,w,c
  4513   002B0C  0A80               	xorlw	128
  4514   002B0E  0F97               	addlw	151
  4515   002B10  B0D8               	btfsc	status,0,c
  4516   002B12  EF8D  F015         	goto	u3031
  4517   002B16  EF8F  F015         	goto	u3030
  4518   002B1A                     u3031:
  4519   002B1A  EF91  F015         	goto	l3085
  4520   002B1E                     u3030:
  4521   002B1E  EF54  F015         	goto	l3065
  4522   002B22                     l3085:
  4523   002B22  90D8               	bcf	status,0,c
  4524   002B24  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4525   002B26  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4526   002B28  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4527   002B2A  3201               	rrcf	___fltol@f1^0,f,c
  4528   002B2C  3E0A               	incfsz	___fltol@exp1^0,f,c
  4529   002B2E  EF91  F015         	goto	l3085
  4530   002B32  EFB3  F015         	goto	l3099
  4531   002B36                     l3089:
  4532   002B36  0E1F               	movlw	31
  4533   002B38  640A               	cpfsgt	___fltol@exp1^0,c
  4534   002B3A  EFA1  F015         	goto	u3041
  4535   002B3E  EFA3  F015         	goto	u3040
  4536   002B42                     u3041:
  4537   002B42  EFAB  F015         	goto	l3097
  4538   002B46                     u3040:
  4539   002B46  EF54  F015         	goto	l3065
  4540   002B4A                     l3095:
  4541   002B4A  90D8               	bcf	status,0,c
  4542   002B4C  3601               	rlcf	___fltol@f1^0,f,c
  4543   002B4E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4544   002B50  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4545   002B52  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4546   002B54  060A               	decf	___fltol@exp1^0,f,c
  4547   002B56                     l3097:
  4548   002B56  500A               	movf	___fltol@exp1^0,w,c
  4549   002B58  A4D8               	btfss	status,2,c
  4550   002B5A  EFB1  F015         	goto	u3051
  4551   002B5E  EFB3  F015         	goto	u3050
  4552   002B62                     u3051:
  4553   002B62  EFA5  F015         	goto	l3095
  4554   002B66                     u3050:
  4555   002B66                     l3099:
  4556   002B66  5009               	movf	___fltol@sign1^0,w,c
  4557   002B68  B4D8               	btfsc	status,2,c
  4558   002B6A  EFB9  F015         	goto	u3061
  4559   002B6E  EFBB  F015         	goto	u3060
  4560   002B72                     u3061:
  4561   002B72  EFC3  F015         	goto	l3103
  4562   002B76                     u3060:
  4563   002B76  1E04               	comf	(___fltol@f1+3)^0,f,c
  4564   002B78  1E03               	comf	(___fltol@f1+2)^0,f,c
  4565   002B7A  1E02               	comf	(___fltol@f1+1)^0,f,c
  4566   002B7C  6C01               	negf	___fltol@f1^0,c
  4567   002B7E  0E00               	movlw	0
  4568   002B80  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4569   002B82  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4570   002B84  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4571   002B86                     l3103:
  4572   002B86  C001  F001         	movff	___fltol@f1,?___fltol
  4573   002B8A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4574   002B8E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4575   002B92  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4576   002B96                     l446:
  4577   002B96  0012               	return		;funcret
  4578   002B98                     __end_of___fltol:
  4579                           	callstack 0
  4580                           
  4581 ;; *************** function ___flsub *****************
  4582 ;; Defined at:
  4583 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  b               4   39[COMRAM] long 
  4586 ;;  a               4   43[COMRAM] long 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  4   39[COMRAM] long 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4598 ;;      Params:         8       0       0       0       0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4601 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4602 ;;Total ram usage:        8 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 2
  4605 ;; This function calls:
  4606 ;;		___fladd
  4607 ;; This function is called by:
  4608 ;;		_efgtoa
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text15
  4613   0032CE                     __ptext15:
  4614                           	callstack 0
  4615   0032CE                     ___flsub:
  4616                           	callstack 24
  4617   0032CE  0E00               	movlw	0
  4618   0032D0  1A2C               	xorwf	___flsub@a^0,f,c
  4619   0032D2  0E00               	movlw	0
  4620   0032D4  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4621   0032D6  0E00               	movlw	0
  4622   0032D8  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4623   0032DA  0E80               	movlw	128
  4624   0032DC  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4625   0032DE  C028  F001         	movff	___flsub@b,___fladd@b
  4626   0032E2  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4627   0032E6  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4628   0032EA  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4629   0032EE  C02C  F005         	movff	___flsub@a,___fladd@a
  4630   0032F2  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4631   0032F6  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4632   0032FA  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4633   0032FE  EC41  F009         	call	___fladd	;wreg free
  4634   003302  C001  F028         	movff	?___fladd,?___flsub
  4635   003306  C002  F029         	movff	?___fladd+1,?___flsub+1
  4636   00330A  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4637   00330E  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4638   003312  0012               	return		;funcret
  4639   003314                     __end_of___flsub:
  4640                           	callstack 0
  4641                           
  4642 ;; *************** function ___fladd *****************
  4643 ;; Defined at:
  4644 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  b               4    0[COMRAM] long 
  4647 ;;  a               4    4[COMRAM] long 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  grs             1   15[COMRAM] unsigned char 
  4650 ;;  bexp            1   14[COMRAM] unsigned char 
  4651 ;;  aexp            1   13[COMRAM] unsigned char 
  4652 ;;  signs           1   12[COMRAM] unsigned char 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  4    0[COMRAM] unsigned char 
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4662 ;;      Params:         8       0       0       0       0       0       0       0       0
  4663 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4664 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4665 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4666 ;;Total ram usage:       16 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 1
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		___flsub
  4673 ;;		_efgtoa
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text16
  4678   001282                     __ptext16:
  4679                           	callstack 0
  4680   001282                     ___fladd:
  4681                           	callstack 24
  4682   001282  5004               	movf	(___fladd@b+3)^0,w,c
  4683   001284  0B80               	andlw	128
  4684   001286  6E0D               	movwf	___fladd@signs^0,c
  4685   001288  5004               	movf	(___fladd@b+3)^0,w,c
  4686   00128A  2404               	addwf	(___fladd@b+3)^0,w,c
  4687   00128C  6E0F               	movwf	___fladd@bexp^0,c
  4688   00128E  AE03               	btfss	(___fladd@b+2)^0,7,c
  4689   001290  EF4C  F009         	goto	u2091
  4690   001294  EF4E  F009         	goto	u2090
  4691   001298                     u2091:
  4692   001298  EF4F  F009         	goto	l2533
  4693   00129C                     u2090:
  4694   00129C  800F               	bsf	___fladd@bexp^0,0,c
  4695   00129E                     l2533:
  4696   00129E  500F               	movf	___fladd@bexp^0,w,c
  4697   0012A0  B4D8               	btfsc	status,2,c
  4698   0012A2  EF55  F009         	goto	u2101
  4699   0012A6  EF57  F009         	goto	u2100
  4700   0012AA                     u2101:
  4701   0012AA  EF6C  F009         	goto	l2543
  4702   0012AE                     u2100:
  4703   0012AE  280F               	incf	___fladd@bexp^0,w,c
  4704   0012B0  A4D8               	btfss	status,2,c
  4705   0012B2  EF5D  F009         	goto	u2111
  4706   0012B6  EF5F  F009         	goto	u2110
  4707   0012BA                     u2111:
  4708   0012BA  EF67  F009         	goto	l2539
  4709   0012BE                     u2110:
  4710   0012BE  0E00               	movlw	0
  4711   0012C0  6E01               	movwf	___fladd@b^0,c
  4712   0012C2  0E00               	movlw	0
  4713   0012C4  6E02               	movwf	(___fladd@b+1)^0,c
  4714   0012C6  0E00               	movlw	0
  4715   0012C8  6E03               	movwf	(___fladd@b+2)^0,c
  4716   0012CA  0E00               	movlw	0
  4717   0012CC  6E04               	movwf	(___fladd@b+3)^0,c
  4718   0012CE                     l2539:
  4719   0012CE  8E03               	bsf	(___fladd@b+2)^0,7,c
  4720   0012D0  0E00               	movlw	0
  4721   0012D2  6E04               	movwf	(___fladd@b+3)^0,c
  4722   0012D4  EF74  F009         	goto	l2545
  4723   0012D8                     l2543:
  4724   0012D8  0E00               	movlw	0
  4725   0012DA  6E01               	movwf	___fladd@b^0,c
  4726   0012DC  0E00               	movlw	0
  4727   0012DE  6E02               	movwf	(___fladd@b+1)^0,c
  4728   0012E0  0E00               	movlw	0
  4729   0012E2  6E03               	movwf	(___fladd@b+2)^0,c
  4730   0012E4  0E00               	movlw	0
  4731   0012E6  6E04               	movwf	(___fladd@b+3)^0,c
  4732   0012E8                     l2545:
  4733   0012E8  5008               	movf	(___fladd@a+3)^0,w,c
  4734   0012EA  0B80               	andlw	128
  4735   0012EC  6E0E               	movwf	___fladd@aexp^0,c
  4736   0012EE  500D               	movf	___fladd@signs^0,w,c
  4737   0012F0  180E               	xorwf	___fladd@aexp^0,w,c
  4738   0012F2  B4D8               	btfsc	status,2,c
  4739   0012F4  EF7E  F009         	goto	u2121
  4740   0012F8  EF80  F009         	goto	u2120
  4741   0012FC                     u2121:
  4742   0012FC  EF81  F009         	goto	l2551
  4743   001300                     u2120:
  4744   001300  8C0D               	bsf	___fladd@signs^0,6,c
  4745   001302                     l2551:
  4746   001302  5008               	movf	(___fladd@a+3)^0,w,c
  4747   001304  2408               	addwf	(___fladd@a+3)^0,w,c
  4748   001306  6E0E               	movwf	___fladd@aexp^0,c
  4749   001308  AE07               	btfss	(___fladd@a+2)^0,7,c
  4750   00130A  EF89  F009         	goto	u2131
  4751   00130E  EF8B  F009         	goto	u2130
  4752   001312                     u2131:
  4753   001312  EF8C  F009         	goto	l2557
  4754   001316                     u2130:
  4755   001316  800E               	bsf	___fladd@aexp^0,0,c
  4756   001318                     l2557:
  4757   001318  500E               	movf	___fladd@aexp^0,w,c
  4758   00131A  B4D8               	btfsc	status,2,c
  4759   00131C  EF92  F009         	goto	u2141
  4760   001320  EF94  F009         	goto	u2140
  4761   001324                     u2141:
  4762   001324  EFA9  F009         	goto	l2567
  4763   001328                     u2140:
  4764   001328  280E               	incf	___fladd@aexp^0,w,c
  4765   00132A  A4D8               	btfss	status,2,c
  4766   00132C  EF9A  F009         	goto	u2151
  4767   001330  EF9C  F009         	goto	u2150
  4768   001334                     u2151:
  4769   001334  EFA4  F009         	goto	l2563
  4770   001338                     u2150:
  4771   001338  0E00               	movlw	0
  4772   00133A  6E05               	movwf	___fladd@a^0,c
  4773   00133C  0E00               	movlw	0
  4774   00133E  6E06               	movwf	(___fladd@a+1)^0,c
  4775   001340  0E00               	movlw	0
  4776   001342  6E07               	movwf	(___fladd@a+2)^0,c
  4777   001344  0E00               	movlw	0
  4778   001346  6E08               	movwf	(___fladd@a+3)^0,c
  4779   001348                     l2563:
  4780   001348  8E07               	bsf	(___fladd@a+2)^0,7,c
  4781   00134A  0E00               	movlw	0
  4782   00134C  6E08               	movwf	(___fladd@a+3)^0,c
  4783   00134E  EFB1  F009         	goto	l2569
  4784   001352                     l2567:
  4785   001352  0E00               	movlw	0
  4786   001354  6E05               	movwf	___fladd@a^0,c
  4787   001356  0E00               	movlw	0
  4788   001358  6E06               	movwf	(___fladd@a+1)^0,c
  4789   00135A  0E00               	movlw	0
  4790   00135C  6E07               	movwf	(___fladd@a+2)^0,c
  4791   00135E  0E00               	movlw	0
  4792   001360  6E08               	movwf	(___fladd@a+3)^0,c
  4793   001362                     l2569:
  4794   001362  500F               	movf	___fladd@bexp^0,w,c
  4795   001364  5C0E               	subwf	___fladd@aexp^0,w,c
  4796   001366  B0D8               	btfsc	status,0,c
  4797   001368  EFB8  F009         	goto	u2161
  4798   00136C  EFBA  F009         	goto	u2160
  4799   001370                     u2161:
  4800   001370  EFE1  F009         	goto	l2605
  4801   001374                     u2160:
  4802   001374  AC0D               	btfss	___fladd@signs^0,6,c
  4803   001376  EFBF  F009         	goto	u2171
  4804   00137A  EFC1  F009         	goto	u2170
  4805   00137E                     u2171:
  4806   00137E  EFC3  F009         	goto	l2575
  4807   001382                     u2170:
  4808   001382  0E80               	movlw	128
  4809   001384  1A0D               	xorwf	___fladd@signs^0,f,c
  4810   001386                     l2575:
  4811   001386  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4812   00138A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4813   00138E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4814   001392  C001  F010         	movff	___fladd@b,___fladd@grs
  4815   001396  C005  F001         	movff	___fladd@a,___fladd@b
  4816   00139A  C010  F005         	movff	___fladd@grs,___fladd@a
  4817   00139E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4818   0013A2  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4819   0013A6  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4820   0013AA  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4821   0013AE  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4822   0013B2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4823   0013B6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4824   0013BA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4825   0013BE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4826   0013C2                     l2605:
  4827   0013C2  0E00               	movlw	0
  4828   0013C4  6E10               	movwf	___fladd@grs^0,c
  4829   0013C6  500F               	movf	___fladd@bexp^0,w,c
  4830   0013C8  C00E  F009         	movff	___fladd@aexp,??___fladd
  4831   0013CC  6A0A               	clrf	(??___fladd+1)^0,c
  4832   0013CE  5E09               	subwf	??___fladd^0,f,c
  4833   0013D0  0E00               	movlw	0
  4834   0013D2  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4835   0013D4  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4836   0013D6  EFF6  F009         	goto	u2181
  4837   0013DA  500A               	movf	(??___fladd+1)^0,w,c
  4838   0013DC  E109               	bnz	u2180
  4839   0013DE  0E1A               	movlw	26
  4840   0013E0  5C09               	subwf	??___fladd^0,w,c
  4841   0013E2  A0D8               	btfss	status,0,c
  4842   0013E4  EFF6  F009         	goto	u2181
  4843   0013E8  EFF8  F009         	goto	u2180
  4844   0013EC                     u2181:
  4845   0013EC  EF2F  F00A         	goto	l678
  4846   0013F0                     u2180:
  4847   0013F0  5001               	movf	___fladd@b^0,w,c
  4848   0013F2  1002               	iorwf	(___fladd@b+1)^0,w,c
  4849   0013F4  1003               	iorwf	(___fladd@b+2)^0,w,c
  4850   0013F6  1004               	iorwf	(___fladd@b+3)^0,w,c
  4851   0013F8  A4D8               	btfss	status,2,c
  4852   0013FA  EF01  F00A         	goto	u2191
  4853   0013FE  EF04  F00A         	goto	u2190
  4854   001402                     u2191:
  4855   001402  0E01               	movlw	1
  4856   001404  EF05  F00A         	goto	u2200
  4857   001408                     u2190:
  4858   001408  0E00               	movlw	0
  4859   00140A                     u2200:
  4860   00140A  6E10               	movwf	___fladd@grs^0,c
  4861   00140C  0E00               	movlw	0
  4862   00140E  6E01               	movwf	___fladd@b^0,c
  4863   001410  0E00               	movlw	0
  4864   001412  6E02               	movwf	(___fladd@b+1)^0,c
  4865   001414  0E00               	movlw	0
  4866   001416  6E03               	movwf	(___fladd@b+2)^0,c
  4867   001418  0E00               	movlw	0
  4868   00141A  6E04               	movwf	(___fladd@b+3)^0,c
  4869   00141C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4870   001420  EF38  F00A         	goto	l677
  4871   001424                     l679:
  4872   001424  A010               	btfss	___fladd@grs^0,0,c
  4873   001426  EF17  F00A         	goto	u2211
  4874   00142A  EF19  F00A         	goto	u2210
  4875   00142E                     u2211:
  4876   00142E  EF1F  F00A         	goto	l2617
  4877   001432                     u2210:
  4878   001432  90D8               	bcf	status,0,c
  4879   001434  3010               	rrcf	___fladd@grs^0,w,c
  4880   001436  0901               	iorlw	1
  4881   001438  6E10               	movwf	___fladd@grs^0,c
  4882   00143A  EF21  F00A         	goto	l2619
  4883   00143E                     l2617:
  4884   00143E  90D8               	bcf	status,0,c
  4885   001440  3210               	rrcf	___fladd@grs^0,f,c
  4886   001442                     l2619:
  4887   001442  A001               	btfss	___fladd@b^0,0,c
  4888   001444  EF26  F00A         	goto	u2221
  4889   001448  EF28  F00A         	goto	u2220
  4890   00144C                     u2221:
  4891   00144C  EF29  F00A         	goto	l2623
  4892   001450                     u2220:
  4893   001450  8E10               	bsf	___fladd@grs^0,7,c
  4894   001452                     l2623:
  4895   001452  3404               	rlcf	(___fladd@b+3)^0,w,c
  4896   001454  3204               	rrcf	(___fladd@b+3)^0,f,c
  4897   001456  3203               	rrcf	(___fladd@b+2)^0,f,c
  4898   001458  3202               	rrcf	(___fladd@b+1)^0,f,c
  4899   00145A  3201               	rrcf	___fladd@b^0,f,c
  4900   00145C  2A0F               	incf	___fladd@bexp^0,f,c
  4901   00145E                     l678:
  4902   00145E  500E               	movf	___fladd@aexp^0,w,c
  4903   001460  5C0F               	subwf	___fladd@bexp^0,w,c
  4904   001462  A0D8               	btfss	status,0,c
  4905   001464  EF36  F00A         	goto	u2231
  4906   001468  EF38  F00A         	goto	u2230
  4907   00146C                     u2231:
  4908   00146C  EF12  F00A         	goto	l679
  4909   001470                     u2230:
  4910   001470                     l677:
  4911   001470  BC0D               	btfsc	___fladd@signs^0,6,c
  4912   001472  EF3D  F00A         	goto	u2241
  4913   001476  EF3F  F00A         	goto	u2240
  4914   00147A                     u2241:
  4915   00147A  EF7F  F00A         	goto	l2651
  4916   00147E                     u2240:
  4917   00147E  500F               	movf	___fladd@bexp^0,w,c
  4918   001480  A4D8               	btfss	status,2,c
  4919   001482  EF45  F00A         	goto	u2251
  4920   001486  EF47  F00A         	goto	u2250
  4921   00148A                     u2251:
  4922   00148A  EF51  F00A         	goto	l2633
  4923   00148E                     u2250:
  4924   00148E  0E00               	movlw	0
  4925   001490  6E01               	movwf	?___fladd^0,c
  4926   001492  0E00               	movlw	0
  4927   001494  6E02               	movwf	(?___fladd+1)^0,c
  4928   001496  0E00               	movlw	0
  4929   001498  6E03               	movwf	(?___fladd+2)^0,c
  4930   00149A  0E00               	movlw	0
  4931   00149C  6E04               	movwf	(?___fladd+3)^0,c
  4932   00149E  EFA0  F00B         	goto	l686
  4933   0014A2                     l2633:
  4934   0014A2  5005               	movf	___fladd@a^0,w,c
  4935   0014A4  2601               	addwf	___fladd@b^0,f,c
  4936   0014A6  5006               	movf	(___fladd@a+1)^0,w,c
  4937   0014A8  2202               	addwfc	(___fladd@b+1)^0,f,c
  4938   0014AA  5007               	movf	(___fladd@a+2)^0,w,c
  4939   0014AC  2203               	addwfc	(___fladd@b+2)^0,f,c
  4940   0014AE  5008               	movf	(___fladd@a+3)^0,w,c
  4941   0014B0  2204               	addwfc	(___fladd@b+3)^0,f,c
  4942   0014B2  A004               	btfss	(___fladd@b+3)^0,0,c
  4943   0014B4  EF5E  F00A         	goto	u2261
  4944   0014B8  EF60  F00A         	goto	u2260
  4945   0014BC                     u2261:
  4946   0014BC  EF0C  F00B         	goto	l2687
  4947   0014C0                     u2260:
  4948   0014C0  A010               	btfss	___fladd@grs^0,0,c
  4949   0014C2  EF65  F00A         	goto	u2271
  4950   0014C6  EF67  F00A         	goto	u2270
  4951   0014CA                     u2271:
  4952   0014CA  EF6D  F00A         	goto	l2641
  4953   0014CE                     u2270:
  4954   0014CE  90D8               	bcf	status,0,c
  4955   0014D0  3010               	rrcf	___fladd@grs^0,w,c
  4956   0014D2  0901               	iorlw	1
  4957   0014D4  6E10               	movwf	___fladd@grs^0,c
  4958   0014D6  EF6F  F00A         	goto	l2643
  4959   0014DA                     l2641:
  4960   0014DA  90D8               	bcf	status,0,c
  4961   0014DC  3210               	rrcf	___fladd@grs^0,f,c
  4962   0014DE                     l2643:
  4963   0014DE  A001               	btfss	___fladd@b^0,0,c
  4964   0014E0  EF74  F00A         	goto	u2281
  4965   0014E4  EF76  F00A         	goto	u2280
  4966   0014E8                     u2281:
  4967   0014E8  EF77  F00A         	goto	l2647
  4968   0014EC                     u2280:
  4969   0014EC  8E10               	bsf	___fladd@grs^0,7,c
  4970   0014EE                     l2647:
  4971   0014EE  3404               	rlcf	(___fladd@b+3)^0,w,c
  4972   0014F0  3204               	rrcf	(___fladd@b+3)^0,f,c
  4973   0014F2  3203               	rrcf	(___fladd@b+2)^0,f,c
  4974   0014F4  3202               	rrcf	(___fladd@b+1)^0,f,c
  4975   0014F6  3201               	rrcf	___fladd@b^0,f,c
  4976   0014F8  2A0F               	incf	___fladd@bexp^0,f,c
  4977   0014FA  EF0C  F00B         	goto	l2687
  4978   0014FE                     l2651:
  4979   0014FE  5005               	movf	___fladd@a^0,w,c
  4980   001500  5C01               	subwf	___fladd@b^0,w,c
  4981   001502  5006               	movf	(___fladd@a+1)^0,w,c
  4982   001504  5802               	subwfb	(___fladd@b+1)^0,w,c
  4983   001506  5007               	movf	(___fladd@a+2)^0,w,c
  4984   001508  5803               	subwfb	(___fladd@b+2)^0,w,c
  4985   00150A  5004               	movf	(___fladd@b+3)^0,w,c
  4986   00150C  0A80               	xorlw	128
  4987   00150E  6E09               	movwf	??___fladd^0,c
  4988   001510  5008               	movf	(___fladd@a+3)^0,w,c
  4989   001512  0A80               	xorlw	128
  4990   001514  5809               	subwfb	??___fladd^0,w,c
  4991   001516  B0D8               	btfsc	status,0,c
  4992   001518  EF90  F00A         	goto	u2291
  4993   00151C  EF92  F00A         	goto	u2290
  4994   001520                     u2291:
  4995   001520  EFBD  F00A         	goto	l2661
  4996   001524                     u2290:
  4997   001524  5001               	movf	___fladd@b^0,w,c
  4998   001526  5C05               	subwf	___fladd@a^0,w,c
  4999   001528  6E09               	movwf	??___fladd^0,c
  5000   00152A  5002               	movf	(___fladd@b+1)^0,w,c
  5001   00152C  5806               	subwfb	(___fladd@a+1)^0,w,c
  5002   00152E  6E0A               	movwf	(??___fladd+1)^0,c
  5003   001530  5003               	movf	(___fladd@b+2)^0,w,c
  5004   001532  5807               	subwfb	(___fladd@a+2)^0,w,c
  5005   001534  6E0B               	movwf	(??___fladd+2)^0,c
  5006   001536  5004               	movf	(___fladd@b+3)^0,w,c
  5007   001538  5808               	subwfb	(___fladd@a+3)^0,w,c
  5008   00153A  6E0C               	movwf	(??___fladd+3)^0,c
  5009   00153C  0EFF               	movlw	255
  5010   00153E  2409               	addwf	??___fladd^0,w,c
  5011   001540  6E01               	movwf	___fladd@b^0,c
  5012   001542  0EFF               	movlw	255
  5013   001544  200A               	addwfc	(??___fladd+1)^0,w,c
  5014   001546  6E02               	movwf	(___fladd@b+1)^0,c
  5015   001548  0EFF               	movlw	255
  5016   00154A  200B               	addwfc	(??___fladd+2)^0,w,c
  5017   00154C  6E03               	movwf	(___fladd@b+2)^0,c
  5018   00154E  0EFF               	movlw	255
  5019   001550  200C               	addwfc	(??___fladd+3)^0,w,c
  5020   001552  6E04               	movwf	(___fladd@b+3)^0,c
  5021   001554  0E80               	movlw	128
  5022   001556  1A0D               	xorwf	___fladd@signs^0,f,c
  5023   001558  6C10               	negf	___fladd@grs^0,c
  5024   00155A  5010               	movf	___fladd@grs^0,w,c
  5025   00155C  A4D8               	btfss	status,2,c
  5026   00155E  EFB3  F00A         	goto	u2301
  5027   001562  EFB5  F00A         	goto	u2300
  5028   001566                     u2301:
  5029   001566  EFC5  F00A         	goto	l694
  5030   00156A                     u2300:
  5031   00156A  0E01               	movlw	1
  5032   00156C  2601               	addwf	___fladd@b^0,f,c
  5033   00156E  0E00               	movlw	0
  5034   001570  2202               	addwfc	(___fladd@b+1)^0,f,c
  5035   001572  2203               	addwfc	(___fladd@b+2)^0,f,c
  5036   001574  2204               	addwfc	(___fladd@b+3)^0,f,c
  5037   001576  EFC5  F00A         	goto	l694
  5038   00157A                     l2661:
  5039   00157A  5005               	movf	___fladd@a^0,w,c
  5040   00157C  5E01               	subwf	___fladd@b^0,f,c
  5041   00157E  5006               	movf	(___fladd@a+1)^0,w,c
  5042   001580  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5043   001582  5007               	movf	(___fladd@a+2)^0,w,c
  5044   001584  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5045   001586  5008               	movf	(___fladd@a+3)^0,w,c
  5046   001588  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5047   00158A                     l694:
  5048   00158A  5001               	movf	___fladd@b^0,w,c
  5049   00158C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5050   00158E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5051   001590  1004               	iorwf	(___fladd@b+3)^0,w,c
  5052   001592  A4D8               	btfss	status,2,c
  5053   001594  EFCE  F00A         	goto	u2311
  5054   001598  EFD0  F00A         	goto	u2310
  5055   00159C                     u2311:
  5056   00159C  EF05  F00B         	goto	l2685
  5057   0015A0                     u2310:
  5058   0015A0  5010               	movf	___fladd@grs^0,w,c
  5059   0015A2  A4D8               	btfss	status,2,c
  5060   0015A4  EFD6  F00A         	goto	u2321
  5061   0015A8  EFD8  F00A         	goto	u2320
  5062   0015AC                     u2321:
  5063   0015AC  EF05  F00B         	goto	l2685
  5064   0015B0                     u2320:
  5065   0015B0  0E00               	movlw	0
  5066   0015B2  6E01               	movwf	?___fladd^0,c
  5067   0015B4  0E00               	movlw	0
  5068   0015B6  6E02               	movwf	(?___fladd+1)^0,c
  5069   0015B8  0E00               	movlw	0
  5070   0015BA  6E03               	movwf	(?___fladd+2)^0,c
  5071   0015BC  0E00               	movlw	0
  5072   0015BE  6E04               	movwf	(?___fladd+3)^0,c
  5073   0015C0  EFA0  F00B         	goto	l686
  5074   0015C4                     l2669:
  5075   0015C4  90D8               	bcf	status,0,c
  5076   0015C6  3601               	rlcf	___fladd@b^0,f,c
  5077   0015C8  3602               	rlcf	(___fladd@b+1)^0,f,c
  5078   0015CA  3603               	rlcf	(___fladd@b+2)^0,f,c
  5079   0015CC  3604               	rlcf	(___fladd@b+3)^0,f,c
  5080   0015CE  AE10               	btfss	___fladd@grs^0,7,c
  5081   0015D0  EFEC  F00A         	goto	u2331
  5082   0015D4  EFEE  F00A         	goto	u2330
  5083   0015D8                     u2331:
  5084   0015D8  EFEF  F00A         	goto	l2675
  5085   0015DC                     u2330:
  5086   0015DC  8001               	bsf	___fladd@b^0,0,c
  5087   0015DE                     l2675:
  5088   0015DE  A010               	btfss	___fladd@grs^0,0,c
  5089   0015E0  EFF4  F00A         	goto	u2341
  5090   0015E4  EFF6  F00A         	goto	u2340
  5091   0015E8                     u2341:
  5092   0015E8  EFFA  F00A         	goto	l2679
  5093   0015EC                     u2340:
  5094   0015EC  80D8               	bsf	status,0,c
  5095   0015EE  3610               	rlcf	___fladd@grs^0,f,c
  5096   0015F0  EFFC  F00A         	goto	l2681
  5097   0015F4                     l2679:
  5098   0015F4  90D8               	bcf	status,0,c
  5099   0015F6  3610               	rlcf	___fladd@grs^0,f,c
  5100   0015F8                     l2681:
  5101   0015F8  500F               	movf	___fladd@bexp^0,w,c
  5102   0015FA  B4D8               	btfsc	status,2,c
  5103   0015FC  EF02  F00B         	goto	u2351
  5104   001600  EF04  F00B         	goto	u2350
  5105   001604                     u2351:
  5106   001604  EF05  F00B         	goto	l2685
  5107   001608                     u2350:
  5108   001608  060F               	decf	___fladd@bexp^0,f,c
  5109   00160A                     l2685:
  5110   00160A  AE03               	btfss	(___fladd@b+2)^0,7,c
  5111   00160C  EF0A  F00B         	goto	u2361
  5112   001610  EF0C  F00B         	goto	u2360
  5113   001614                     u2361:
  5114   001614  EFE2  F00A         	goto	l2669
  5115   001618                     u2360:
  5116   001618                     l2687:
  5117   001618  0E00               	movlw	0
  5118   00161A  6E0E               	movwf	___fladd@aexp^0,c
  5119   00161C  AE10               	btfss	___fladd@grs^0,7,c
  5120   00161E  EF13  F00B         	goto	u2371
  5121   001622  EF15  F00B         	goto	u2370
  5122   001626                     u2371:
  5123   001626  EF2D  F00B         	goto	l703
  5124   00162A                     u2370:
  5125   00162A  C010  F009         	movff	___fladd@grs,??___fladd
  5126   00162E  0E7F               	movlw	127
  5127   001630  1609               	andwf	??___fladd^0,f,c
  5128   001632  B4D8               	btfsc	status,2,c
  5129   001634  EF1E  F00B         	goto	u2381
  5130   001638  EF20  F00B         	goto	u2380
  5131   00163C                     u2381:
  5132   00163C  EF24  F00B         	goto	l704
  5133   001640                     u2380:
  5134   001640                     l2693:
  5135   001640  0E01               	movlw	1
  5136   001642  6E0E               	movwf	___fladd@aexp^0,c
  5137   001644  EF2D  F00B         	goto	l703
  5138   001648                     l704:
  5139   001648  A001               	btfss	___fladd@b^0,0,c
  5140   00164A  EF29  F00B         	goto	u2391
  5141   00164E  EF2B  F00B         	goto	u2390
  5142   001652                     u2391:
  5143   001652  EF2D  F00B         	goto	l703
  5144   001656                     u2390:
  5145   001656  EF20  F00B         	goto	l2693
  5146   00165A                     l703:
  5147   00165A  500E               	movf	___fladd@aexp^0,w,c
  5148   00165C  B4D8               	btfsc	status,2,c
  5149   00165E  EF33  F00B         	goto	u2401
  5150   001662  EF35  F00B         	goto	u2400
  5151   001666                     u2401:
  5152   001666  EF60  F00B         	goto	l2705
  5153   00166A                     u2400:
  5154   00166A  0E01               	movlw	1
  5155   00166C  2601               	addwf	___fladd@b^0,f,c
  5156   00166E  0E00               	movlw	0
  5157   001670  2202               	addwfc	(___fladd@b+1)^0,f,c
  5158   001672  2203               	addwfc	(___fladd@b+2)^0,f,c
  5159   001674  2204               	addwfc	(___fladd@b+3)^0,f,c
  5160   001676  A004               	btfss	(___fladd@b+3)^0,0,c
  5161   001678  EF40  F00B         	goto	u2411
  5162   00167C  EF42  F00B         	goto	u2410
  5163   001680                     u2411:
  5164   001680  EF60  F00B         	goto	l2705
  5165   001684                     u2410:
  5166   001684  C001  F009         	movff	___fladd@b,??___fladd
  5167   001688  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5168   00168C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5169   001690  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5170   001694  340C               	rlcf	(??___fladd+3)^0,w,c
  5171   001696  320C               	rrcf	(??___fladd+3)^0,f,c
  5172   001698  320B               	rrcf	(??___fladd+2)^0,f,c
  5173   00169A  320A               	rrcf	(??___fladd+1)^0,f,c
  5174   00169C  3209               	rrcf	??___fladd^0,f,c
  5175   00169E  C009  F001         	movff	??___fladd,___fladd@b
  5176   0016A2  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5177   0016A6  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5178   0016AA  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5179   0016AE  280F               	incf	___fladd@bexp^0,w,c
  5180   0016B0  B4D8               	btfsc	status,2,c
  5181   0016B2  EF5D  F00B         	goto	u2421
  5182   0016B6  EF5F  F00B         	goto	u2420
  5183   0016BA                     u2421:
  5184   0016BA  EF60  F00B         	goto	l2705
  5185   0016BE                     u2420:
  5186   0016BE  2A0F               	incf	___fladd@bexp^0,f,c
  5187   0016C0                     l2705:
  5188   0016C0  280F               	incf	___fladd@bexp^0,w,c
  5189   0016C2  B4D8               	btfsc	status,2,c
  5190   0016C4  EF66  F00B         	goto	u2431
  5191   0016C8  EF68  F00B         	goto	u2430
  5192   0016CC                     u2431:
  5193   0016CC  EF70  F00B         	goto	l2709
  5194   0016D0                     u2430:
  5195   0016D0  500F               	movf	___fladd@bexp^0,w,c
  5196   0016D2  A4D8               	btfss	status,2,c
  5197   0016D4  EF6E  F00B         	goto	u2441
  5198   0016D8  EF70  F00B         	goto	u2440
  5199   0016DC                     u2441:
  5200   0016DC  EF82  F00B         	goto	l2713
  5201   0016E0                     u2440:
  5202   0016E0                     l2709:
  5203   0016E0  0E00               	movlw	0
  5204   0016E2  6E01               	movwf	___fladd@b^0,c
  5205   0016E4  0E00               	movlw	0
  5206   0016E6  6E02               	movwf	(___fladd@b+1)^0,c
  5207   0016E8  0E00               	movlw	0
  5208   0016EA  6E03               	movwf	(___fladd@b+2)^0,c
  5209   0016EC  0E00               	movlw	0
  5210   0016EE  6E04               	movwf	(___fladd@b+3)^0,c
  5211   0016F0  500F               	movf	___fladd@bexp^0,w,c
  5212   0016F2  A4D8               	btfss	status,2,c
  5213   0016F4  EF7E  F00B         	goto	u2451
  5214   0016F8  EF80  F00B         	goto	u2450
  5215   0016FC                     u2451:
  5216   0016FC  EF82  F00B         	goto	l2713
  5217   001700                     u2450:
  5218   001700  0E00               	movlw	0
  5219   001702  6E0D               	movwf	___fladd@signs^0,c
  5220   001704                     l2713:
  5221   001704  A00F               	btfss	___fladd@bexp^0,0,c
  5222   001706  EF87  F00B         	goto	u2461
  5223   00170A  EF89  F00B         	goto	u2460
  5224   00170E                     u2461:
  5225   00170E  EF8C  F00B         	goto	l2717
  5226   001712                     u2460:
  5227   001712  8E03               	bsf	(___fladd@b+2)^0,7,c
  5228   001714  EF8D  F00B         	goto	l2719
  5229   001718                     l2717:
  5230   001718  9E03               	bcf	(___fladd@b+2)^0,7,c
  5231   00171A                     l2719:
  5232   00171A  90D8               	bcf	status,0,c
  5233   00171C  300F               	rrcf	___fladd@bexp^0,w,c
  5234   00171E  6E04               	movwf	(___fladd@b+3)^0,c
  5235   001720  AE0D               	btfss	___fladd@signs^0,7,c
  5236   001722  EF95  F00B         	goto	u2471
  5237   001726  EF97  F00B         	goto	u2470
  5238   00172A                     u2471:
  5239   00172A  EF98  F00B         	goto	l2725
  5240   00172E                     u2470:
  5241   00172E  8E04               	bsf	(___fladd@b+3)^0,7,c
  5242   001730                     l2725:
  5243   001730  C001  F001         	movff	___fladd@b,?___fladd
  5244   001734  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5245   001738  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5246   00173C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5247   001740                     l686:
  5248   001740  0012               	return		;funcret
  5249   001742                     __end_of___fladd:
  5250                           	callstack 0
  5251                           
  5252 ;; *************** function ___flneg *****************
  5253 ;; Defined at:
  5254 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  f1              4    0[COMRAM] unsigned char 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  4    0[COMRAM] unsigned char 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5268 ;;      Params:         4       0       0       0       0       0       0       0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5271 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5272 ;;Total ram usage:        4 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 1
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_efgtoa
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text17
  5283   0033DE                     __ptext17:
  5284                           	callstack 0
  5285   0033DE                     ___flneg:
  5286                           	callstack 25
  5287   0033DE  5001               	movf	___flneg@f1^0,w,c
  5288   0033E0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5289   0033E2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5290   0033E4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5291   0033E6  B4D8               	btfsc	status,2,c
  5292   0033E8  EFF8  F019         	goto	u2991
  5293   0033EC  EFFA  F019         	goto	u2990
  5294   0033F0                     u2991:
  5295   0033F0  EF02  F01A         	goto	l3059
  5296   0033F4                     u2990:
  5297   0033F4  0E00               	movlw	0
  5298   0033F6  1A01               	xorwf	___flneg@f1^0,f,c
  5299   0033F8  0E00               	movlw	0
  5300   0033FA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5301   0033FC  0E00               	movlw	0
  5302   0033FE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5303   003400  0E80               	movlw	128
  5304   003402  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5305   003404                     l3059:
  5306   003404  C001  F001         	movff	___flneg@f1,?___flneg
  5307   003408  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5308   00340C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5309   003410  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5310   003414  0012               	return		;funcret
  5311   003416                     __end_of___flneg:
  5312                           	callstack 0
  5313                           
  5314 ;; *************** function ___flmul *****************
  5315 ;; Defined at:
  5316 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  b               4   14[COMRAM] unsigned char 
  5319 ;;  a               4   18[COMRAM] unsigned char 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  prod            4   33[COMRAM] struct .
  5322 ;;  grs             4   27[COMRAM] unsigned long 
  5323 ;;  temp            2   37[COMRAM] struct .
  5324 ;;  bexp            1   32[COMRAM] unsigned char 
  5325 ;;  aexp            1   31[COMRAM] unsigned char 
  5326 ;;  sign            1   26[COMRAM] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  4   14[COMRAM] unsigned char 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0, prodl, prodh
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5336 ;;      Params:         8       0       0       0       0       0       0       0       0
  5337 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5338 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5339 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5340 ;;Total ram usage:       25 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; Hardware stack levels required when called: 1
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_main
  5347 ;;		_efgtoa
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text18
  5352   001BAA                     __ptext18:
  5353                           	callstack 0
  5354   001BAA                     ___flmul:
  5355                           	callstack 25
  5356   001BAA  5012               	movf	(___flmul@b+3)^0,w,c
  5357   001BAC  0B80               	andlw	128
  5358   001BAE  6E1B               	movwf	___flmul@sign^0,c
  5359   001BB0  5012               	movf	(___flmul@b+3)^0,w,c
  5360   001BB2  2412               	addwf	(___flmul@b+3)^0,w,c
  5361   001BB4  6E21               	movwf	___flmul@bexp^0,c
  5362   001BB6  AE11               	btfss	(___flmul@b+2)^0,7,c
  5363   001BB8  EFE0  F00D         	goto	u2721
  5364   001BBC  EFE2  F00D         	goto	u2720
  5365   001BC0                     u2721:
  5366   001BC0  EFE3  F00D         	goto	l2887
  5367   001BC4                     u2720:
  5368   001BC4  8021               	bsf	___flmul@bexp^0,0,c
  5369   001BC6                     l2887:
  5370   001BC6  5021               	movf	___flmul@bexp^0,w,c
  5371   001BC8  B4D8               	btfsc	status,2,c
  5372   001BCA  EFE9  F00D         	goto	u2731
  5373   001BCE  EFEB  F00D         	goto	u2730
  5374   001BD2                     u2731:
  5375   001BD2  EFFE  F00D         	goto	l2895
  5376   001BD6                     u2730:
  5377   001BD6  2821               	incf	___flmul@bexp^0,w,c
  5378   001BD8  A4D8               	btfss	status,2,c
  5379   001BDA  EFF1  F00D         	goto	u2741
  5380   001BDE  EFF3  F00D         	goto	u2740
  5381   001BE2                     u2741:
  5382   001BE2  EFFB  F00D         	goto	l2893
  5383   001BE6                     u2740:
  5384   001BE6  0E00               	movlw	0
  5385   001BE8  6E0F               	movwf	___flmul@b^0,c
  5386   001BEA  0E00               	movlw	0
  5387   001BEC  6E10               	movwf	(___flmul@b+1)^0,c
  5388   001BEE  0E00               	movlw	0
  5389   001BF0  6E11               	movwf	(___flmul@b+2)^0,c
  5390   001BF2  0E00               	movlw	0
  5391   001BF4  6E12               	movwf	(___flmul@b+3)^0,c
  5392   001BF6                     l2893:
  5393   001BF6  8E11               	bsf	(___flmul@b+2)^0,7,c
  5394   001BF8  EF06  F00E         	goto	l2897
  5395   001BFC                     l2895:
  5396   001BFC  0E00               	movlw	0
  5397   001BFE  6E0F               	movwf	___flmul@b^0,c
  5398   001C00  0E00               	movlw	0
  5399   001C02  6E10               	movwf	(___flmul@b+1)^0,c
  5400   001C04  0E00               	movlw	0
  5401   001C06  6E11               	movwf	(___flmul@b+2)^0,c
  5402   001C08  0E00               	movlw	0
  5403   001C0A  6E12               	movwf	(___flmul@b+3)^0,c
  5404   001C0C                     l2897:
  5405   001C0C  5016               	movf	(___flmul@a+3)^0,w,c
  5406   001C0E  0B80               	andlw	128
  5407   001C10  1A1B               	xorwf	___flmul@sign^0,f,c
  5408   001C12  5016               	movf	(___flmul@a+3)^0,w,c
  5409   001C14  2416               	addwf	(___flmul@a+3)^0,w,c
  5410   001C16  6E20               	movwf	___flmul@aexp^0,c
  5411   001C18  AE15               	btfss	(___flmul@a+2)^0,7,c
  5412   001C1A  EF11  F00E         	goto	u2751
  5413   001C1E  EF13  F00E         	goto	u2750
  5414   001C22                     u2751:
  5415   001C22  EF14  F00E         	goto	l2905
  5416   001C26                     u2750:
  5417   001C26  8020               	bsf	___flmul@aexp^0,0,c
  5418   001C28                     l2905:
  5419   001C28  5020               	movf	___flmul@aexp^0,w,c
  5420   001C2A  B4D8               	btfsc	status,2,c
  5421   001C2C  EF1A  F00E         	goto	u2761
  5422   001C30  EF1C  F00E         	goto	u2760
  5423   001C34                     u2761:
  5424   001C34  EF2F  F00E         	goto	l2913
  5425   001C38                     u2760:
  5426   001C38  2820               	incf	___flmul@aexp^0,w,c
  5427   001C3A  A4D8               	btfss	status,2,c
  5428   001C3C  EF22  F00E         	goto	u2771
  5429   001C40  EF24  F00E         	goto	u2770
  5430   001C44                     u2771:
  5431   001C44  EF2C  F00E         	goto	l2911
  5432   001C48                     u2770:
  5433   001C48  0E00               	movlw	0
  5434   001C4A  6E13               	movwf	___flmul@a^0,c
  5435   001C4C  0E00               	movlw	0
  5436   001C4E  6E14               	movwf	(___flmul@a+1)^0,c
  5437   001C50  0E00               	movlw	0
  5438   001C52  6E15               	movwf	(___flmul@a+2)^0,c
  5439   001C54  0E00               	movlw	0
  5440   001C56  6E16               	movwf	(___flmul@a+3)^0,c
  5441   001C58                     l2911:
  5442   001C58  8E15               	bsf	(___flmul@a+2)^0,7,c
  5443   001C5A  EF37  F00E         	goto	l763
  5444   001C5E                     l2913:
  5445   001C5E  0E00               	movlw	0
  5446   001C60  6E13               	movwf	___flmul@a^0,c
  5447   001C62  0E00               	movlw	0
  5448   001C64  6E14               	movwf	(___flmul@a+1)^0,c
  5449   001C66  0E00               	movlw	0
  5450   001C68  6E15               	movwf	(___flmul@a+2)^0,c
  5451   001C6A  0E00               	movlw	0
  5452   001C6C  6E16               	movwf	(___flmul@a+3)^0,c
  5453   001C6E                     l763:
  5454   001C6E  5020               	movf	___flmul@aexp^0,w,c
  5455   001C70  B4D8               	btfsc	status,2,c
  5456   001C72  EF3D  F00E         	goto	u2781
  5457   001C76  EF3F  F00E         	goto	u2780
  5458   001C7A                     u2781:
  5459   001C7A  EF47  F00E         	goto	l2917
  5460   001C7E                     u2780:
  5461   001C7E  5021               	movf	___flmul@bexp^0,w,c
  5462   001C80  A4D8               	btfss	status,2,c
  5463   001C82  EF45  F00E         	goto	u2791
  5464   001C86  EF47  F00E         	goto	u2790
  5465   001C8A                     u2791:
  5466   001C8A  EF51  F00E         	goto	l2921
  5467   001C8E                     u2790:
  5468   001C8E                     l2917:
  5469   001C8E  0E00               	movlw	0
  5470   001C90  6E0F               	movwf	?___flmul^0,c
  5471   001C92  0E00               	movlw	0
  5472   001C94  6E10               	movwf	(?___flmul+1)^0,c
  5473   001C96  0E00               	movlw	0
  5474   001C98  6E11               	movwf	(?___flmul+2)^0,c
  5475   001C9A  0E00               	movlw	0
  5476   001C9C  6E12               	movwf	(?___flmul+3)^0,c
  5477   001C9E  EFE9  F00F         	goto	l767
  5478   001CA2                     l2921:
  5479   001CA2  5015               	movf	(___flmul@a+2)^0,w,c
  5480   001CA4  020F               	mulwf	___flmul@b^0,c
  5481   001CA6  CFF3 F026          	movff	prodl,___flmul@temp
  5482   001CAA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5483   001CAE  5026               	movf	___flmul@temp^0,w,c
  5484   001CB0  6E1C               	movwf	___flmul@grs^0,c
  5485   001CB2  6A1D               	clrf	(___flmul@grs+1)^0,c
  5486   001CB4  6A1E               	clrf	(___flmul@grs+2)^0,c
  5487   001CB6  6A1F               	clrf	(___flmul@grs+3)^0,c
  5488   001CB8  5027               	movf	(___flmul@temp+1)^0,w,c
  5489   001CBA  6E22               	movwf	___flmul@prod^0,c
  5490   001CBC  6A23               	clrf	(___flmul@prod+1)^0,c
  5491   001CBE  6A24               	clrf	(___flmul@prod+2)^0,c
  5492   001CC0  6A25               	clrf	(___flmul@prod+3)^0,c
  5493   001CC2  5014               	movf	(___flmul@a+1)^0,w,c
  5494   001CC4  0210               	mulwf	(___flmul@b+1)^0,c
  5495   001CC6  CFF3 F026          	movff	prodl,___flmul@temp
  5496   001CCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5497   001CCE  5026               	movf	___flmul@temp^0,w,c
  5498   001CD0  261C               	addwf	___flmul@grs^0,f,c
  5499   001CD2  0E00               	movlw	0
  5500   001CD4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5501   001CD6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5502   001CD8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5503   001CDA  5027               	movf	(___flmul@temp+1)^0,w,c
  5504   001CDC  2622               	addwf	___flmul@prod^0,f,c
  5505   001CDE  0E00               	movlw	0
  5506   001CE0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5507   001CE2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5508   001CE4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5509   001CE6  5013               	movf	___flmul@a^0,w,c
  5510   001CE8  0211               	mulwf	(___flmul@b+2)^0,c
  5511   001CEA  CFF3 F026          	movff	prodl,___flmul@temp
  5512   001CEE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5513   001CF2  5026               	movf	___flmul@temp^0,w,c
  5514   001CF4  261C               	addwf	___flmul@grs^0,f,c
  5515   001CF6  0E00               	movlw	0
  5516   001CF8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5517   001CFA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5518   001CFC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5519   001CFE  5027               	movf	(___flmul@temp+1)^0,w,c
  5520   001D00  2622               	addwf	___flmul@prod^0,f,c
  5521   001D02  0E00               	movlw	0
  5522   001D04  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5523   001D06  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5524   001D08  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5525   001D0A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5526   001D0E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5527   001D12  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5528   001D16  6A1C               	clrf	___flmul@grs^0,c
  5529   001D18  5013               	movf	___flmul@a^0,w,c
  5530   001D1A  0210               	mulwf	(___flmul@b+1)^0,c
  5531   001D1C  CFF3 F026          	movff	prodl,___flmul@temp
  5532   001D20  CFF4 F027          	movff	prodh,___flmul@temp+1
  5533   001D24  5026               	movf	___flmul@temp^0,w,c
  5534   001D26  261C               	addwf	___flmul@grs^0,f,c
  5535   001D28  5027               	movf	(___flmul@temp+1)^0,w,c
  5536   001D2A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5537   001D2C  0E00               	movlw	0
  5538   001D2E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5539   001D30  0E00               	movlw	0
  5540   001D32  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5541   001D34  5014               	movf	(___flmul@a+1)^0,w,c
  5542   001D36  020F               	mulwf	___flmul@b^0,c
  5543   001D38  CFF3 F026          	movff	prodl,___flmul@temp
  5544   001D3C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5545   001D40  5026               	movf	___flmul@temp^0,w,c
  5546   001D42  261C               	addwf	___flmul@grs^0,f,c
  5547   001D44  5027               	movf	(___flmul@temp+1)^0,w,c
  5548   001D46  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5549   001D48  0E00               	movlw	0
  5550   001D4A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5551   001D4C  0E00               	movlw	0
  5552   001D4E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5553   001D50  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5554   001D54  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5555   001D58  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5556   001D5C  6A1C               	clrf	___flmul@grs^0,c
  5557   001D5E  5013               	movf	___flmul@a^0,w,c
  5558   001D60  020F               	mulwf	___flmul@b^0,c
  5559   001D62  CFF3 F026          	movff	prodl,___flmul@temp
  5560   001D66  CFF4 F027          	movff	prodh,___flmul@temp+1
  5561   001D6A  5026               	movf	___flmul@temp^0,w,c
  5562   001D6C  261C               	addwf	___flmul@grs^0,f,c
  5563   001D6E  5027               	movf	(___flmul@temp+1)^0,w,c
  5564   001D70  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5565   001D72  0E00               	movlw	0
  5566   001D74  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5567   001D76  0E00               	movlw	0
  5568   001D78  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5569   001D7A  5015               	movf	(___flmul@a+2)^0,w,c
  5570   001D7C  0210               	mulwf	(___flmul@b+1)^0,c
  5571   001D7E  CFF3 F026          	movff	prodl,___flmul@temp
  5572   001D82  CFF4 F027          	movff	prodh,___flmul@temp+1
  5573   001D86  5026               	movf	___flmul@temp^0,w,c
  5574   001D88  2622               	addwf	___flmul@prod^0,f,c
  5575   001D8A  5027               	movf	(___flmul@temp+1)^0,w,c
  5576   001D8C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5577   001D8E  0E00               	movlw	0
  5578   001D90  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5579   001D92  0E00               	movlw	0
  5580   001D94  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5581   001D96  5014               	movf	(___flmul@a+1)^0,w,c
  5582   001D98  0211               	mulwf	(___flmul@b+2)^0,c
  5583   001D9A  CFF3 F026          	movff	prodl,___flmul@temp
  5584   001D9E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5585   001DA2  5026               	movf	___flmul@temp^0,w,c
  5586   001DA4  2622               	addwf	___flmul@prod^0,f,c
  5587   001DA6  5027               	movf	(___flmul@temp+1)^0,w,c
  5588   001DA8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5589   001DAA  0E00               	movlw	0
  5590   001DAC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5591   001DAE  0E00               	movlw	0
  5592   001DB0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5593   001DB2  5015               	movf	(___flmul@a+2)^0,w,c
  5594   001DB4  0211               	mulwf	(___flmul@b+2)^0,c
  5595   001DB6  CFF3 F026          	movff	prodl,___flmul@temp
  5596   001DBA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5597   001DBE  5026               	movf	___flmul@temp^0,w,c
  5598   001DC0  6E17               	movwf	??___flmul^0,c
  5599   001DC2  5027               	movf	(___flmul@temp+1)^0,w,c
  5600   001DC4  6E18               	movwf	(??___flmul+1)^0,c
  5601   001DC6  6A19               	clrf	(??___flmul+2)^0,c
  5602   001DC8  6A1A               	clrf	(??___flmul+3)^0,c
  5603   001DCA  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5604   001DCE  C018  F019         	movff	??___flmul+1,??___flmul+2
  5605   001DD2  C017  F018         	movff	??___flmul,??___flmul+1
  5606   001DD6  6A17               	clrf	??___flmul^0,c
  5607   001DD8  5017               	movf	??___flmul^0,w,c
  5608   001DDA  2622               	addwf	___flmul@prod^0,f,c
  5609   001DDC  5018               	movf	(??___flmul+1)^0,w,c
  5610   001DDE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5611   001DE0  5019               	movf	(??___flmul+2)^0,w,c
  5612   001DE2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5613   001DE4  501A               	movf	(??___flmul+3)^0,w,c
  5614   001DE6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5615   001DE8  C01C  F017         	movff	___flmul@grs,??___flmul
  5616   001DEC  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5617   001DF0  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5618   001DF4  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5619   001DF8  0E19               	movlw	25
  5620   001DFA  EF04  F00F         	goto	u2800
  5621   001DFE                     u2805:
  5622   001DFE  90D8               	bcf	status,0,c
  5623   001E00  321A               	rrcf	(??___flmul+3)^0,f,c
  5624   001E02  3219               	rrcf	(??___flmul+2)^0,f,c
  5625   001E04  3218               	rrcf	(??___flmul+1)^0,f,c
  5626   001E06  3217               	rrcf	??___flmul^0,f,c
  5627   001E08                     u2800:
  5628   001E08  2EE8               	decfsz	wreg,f,c
  5629   001E0A  EFFF  F00E         	goto	u2805
  5630   001E0E  5017               	movf	??___flmul^0,w,c
  5631   001E10  2622               	addwf	___flmul@prod^0,f,c
  5632   001E12  5018               	movf	(??___flmul+1)^0,w,c
  5633   001E14  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5634   001E16  5019               	movf	(??___flmul+2)^0,w,c
  5635   001E18  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5636   001E1A  501A               	movf	(??___flmul+3)^0,w,c
  5637   001E1C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5638   001E1E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5639   001E22  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5640   001E26  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5641   001E2A  6A1C               	clrf	___flmul@grs^0,c
  5642   001E2C  5020               	movf	___flmul@aexp^0,w,c
  5643   001E2E  C021  F017         	movff	___flmul@bexp,??___flmul
  5644   001E32  6A18               	clrf	(??___flmul+1)^0,c
  5645   001E34  2617               	addwf	??___flmul^0,f,c
  5646   001E36  0E00               	movlw	0
  5647   001E38  2218               	addwfc	(??___flmul+1)^0,f,c
  5648   001E3A  0E82               	movlw	130
  5649   001E3C  2417               	addwf	??___flmul^0,w,c
  5650   001E3E  6E26               	movwf	___flmul@temp^0,c
  5651   001E40  0EFF               	movlw	255
  5652   001E42  2018               	addwfc	(??___flmul+1)^0,w,c
  5653   001E44  6E27               	movwf	(___flmul@temp+1)^0,c
  5654   001E46  EF3A  F00F         	goto	l2969
  5655   001E4A                     l2963:
  5656   001E4A  90D8               	bcf	status,0,c
  5657   001E4C  3622               	rlcf	___flmul@prod^0,f,c
  5658   001E4E  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5659   001E50  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5660   001E52  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5661   001E54  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5662   001E56  EF2F  F00F         	goto	u2811
  5663   001E5A  EF31  F00F         	goto	u2810
  5664   001E5E                     u2811:
  5665   001E5E  EF32  F00F         	goto	l770
  5666   001E62                     u2810:
  5667   001E62  8022               	bsf	___flmul@prod^0,0,c
  5668   001E64                     l770:
  5669   001E64  90D8               	bcf	status,0,c
  5670   001E66  361C               	rlcf	___flmul@grs^0,f,c
  5671   001E68  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5672   001E6A  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5673   001E6C  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5674   001E6E  0626               	decf	___flmul@temp^0,f,c
  5675   001E70  A0D8               	btfss	status,0,c
  5676   001E72  0627               	decf	(___flmul@temp+1)^0,f,c
  5677   001E74                     l2969:
  5678   001E74  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5679   001E76  EF3F  F00F         	goto	u2821
  5680   001E7A  EF41  F00F         	goto	u2820
  5681   001E7E                     u2821:
  5682   001E7E  EF25  F00F         	goto	l2963
  5683   001E82                     u2820:
  5684   001E82  0E00               	movlw	0
  5685   001E84  6E20               	movwf	___flmul@aexp^0,c
  5686   001E86  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5687   001E88  EF48  F00F         	goto	u2831
  5688   001E8C  EF4A  F00F         	goto	u2830
  5689   001E90                     u2831:
  5690   001E90  EF6E  F00F         	goto	l772
  5691   001E94                     u2830:
  5692   001E94  0EFF               	movlw	255
  5693   001E96  141C               	andwf	___flmul@grs^0,w,c
  5694   001E98  6E17               	movwf	??___flmul^0,c
  5695   001E9A  0EFF               	movlw	255
  5696   001E9C  141D               	andwf	(___flmul@grs+1)^0,w,c
  5697   001E9E  6E18               	movwf	(??___flmul+1)^0,c
  5698   001EA0  0EFF               	movlw	255
  5699   001EA2  141E               	andwf	(___flmul@grs+2)^0,w,c
  5700   001EA4  6E19               	movwf	(??___flmul+2)^0,c
  5701   001EA6  0E7F               	movlw	127
  5702   001EA8  141F               	andwf	(___flmul@grs+3)^0,w,c
  5703   001EAA  6E1A               	movwf	(??___flmul+3)^0,c
  5704   001EAC  5017               	movf	??___flmul^0,w,c
  5705   001EAE  1018               	iorwf	(??___flmul+1)^0,w,c
  5706   001EB0  1019               	iorwf	(??___flmul+2)^0,w,c
  5707   001EB2  101A               	iorwf	(??___flmul+3)^0,w,c
  5708   001EB4  B4D8               	btfsc	status,2,c
  5709   001EB6  EF5F  F00F         	goto	u2841
  5710   001EBA  EF61  F00F         	goto	u2840
  5711   001EBE                     u2841:
  5712   001EBE  EF65  F00F         	goto	l773
  5713   001EC2                     u2840:
  5714   001EC2                     l2977:
  5715   001EC2  0E01               	movlw	1
  5716   001EC4  6E20               	movwf	___flmul@aexp^0,c
  5717   001EC6  EF6E  F00F         	goto	l772
  5718   001ECA                     l773:
  5719   001ECA  A022               	btfss	___flmul@prod^0,0,c
  5720   001ECC  EF6A  F00F         	goto	u2851
  5721   001ED0  EF6C  F00F         	goto	u2850
  5722   001ED4                     u2851:
  5723   001ED4  EF6E  F00F         	goto	l772
  5724   001ED8                     u2850:
  5725   001ED8  EF61  F00F         	goto	l2977
  5726   001EDC                     l772:
  5727   001EDC  5020               	movf	___flmul@aexp^0,w,c
  5728   001EDE  B4D8               	btfsc	status,2,c
  5729   001EE0  EF74  F00F         	goto	u2861
  5730   001EE4  EF76  F00F         	goto	u2860
  5731   001EE8                     u2861:
  5732   001EE8  EF9A  F00F         	goto	l2989
  5733   001EEC                     u2860:
  5734   001EEC  0E01               	movlw	1
  5735   001EEE  2622               	addwf	___flmul@prod^0,f,c
  5736   001EF0  0E00               	movlw	0
  5737   001EF2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5738   001EF4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5739   001EF6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5740   001EF8  A025               	btfss	(___flmul@prod+3)^0,0,c
  5741   001EFA  EF81  F00F         	goto	u2871
  5742   001EFE  EF83  F00F         	goto	u2870
  5743   001F02                     u2871:
  5744   001F02  EF9A  F00F         	goto	l2989
  5745   001F06                     u2870:
  5746   001F06  C022  F017         	movff	___flmul@prod,??___flmul
  5747   001F0A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5748   001F0E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5749   001F12  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5750   001F16  341A               	rlcf	(??___flmul+3)^0,w,c
  5751   001F18  321A               	rrcf	(??___flmul+3)^0,f,c
  5752   001F1A  3219               	rrcf	(??___flmul+2)^0,f,c
  5753   001F1C  3218               	rrcf	(??___flmul+1)^0,f,c
  5754   001F1E  3217               	rrcf	??___flmul^0,f,c
  5755   001F20  C017  F022         	movff	??___flmul,___flmul@prod
  5756   001F24  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5757   001F28  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5758   001F2C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5759   001F30  4A26               	infsnz	___flmul@temp^0,f,c
  5760   001F32  2A27               	incf	(___flmul@temp+1)^0,f,c
  5761   001F34                     l2989:
  5762   001F34  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5763   001F36  EFA5  F00F         	goto	u2881
  5764   001F3A  5027               	movf	(___flmul@temp+1)^0,w,c
  5765   001F3C  E108               	bnz	u2880
  5766   001F3E  2826               	incf	___flmul@temp^0,w,c
  5767   001F40  A0D8               	btfss	status,0,c
  5768   001F42  EFA5  F00F         	goto	u2881
  5769   001F46  EFA7  F00F         	goto	u2880
  5770   001F4A                     u2881:
  5771   001F4A  EFB1  F00F         	goto	l2993
  5772   001F4E                     u2880:
  5773   001F4E  0E00               	movlw	0
  5774   001F50  6E22               	movwf	___flmul@prod^0,c
  5775   001F52  0E00               	movlw	0
  5776   001F54  6E23               	movwf	(___flmul@prod+1)^0,c
  5777   001F56  0E80               	movlw	128
  5778   001F58  6E24               	movwf	(___flmul@prod+2)^0,c
  5779   001F5A  0E7F               	movlw	127
  5780   001F5C  6E25               	movwf	(___flmul@prod+3)^0,c
  5781   001F5E  EFDF  F00F         	goto	l3005
  5782   001F62                     l2993:
  5783   001F62  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5784   001F64  EFBE  F00F         	goto	u2890
  5785   001F68  5027               	movf	(___flmul@temp+1)^0,w,c
  5786   001F6A  E106               	bnz	u2891
  5787   001F6C  0426               	decf	___flmul@temp^0,w,c
  5788   001F6E  B0D8               	btfsc	status,0,c
  5789   001F70  EFBC  F00F         	goto	u2891
  5790   001F74  EFBE  F00F         	goto	u2890
  5791   001F78                     u2891:
  5792   001F78  EFCA  F00F         	goto	l780
  5793   001F7C                     u2890:
  5794   001F7C  0E00               	movlw	0
  5795   001F7E  6E22               	movwf	___flmul@prod^0,c
  5796   001F80  0E00               	movlw	0
  5797   001F82  6E23               	movwf	(___flmul@prod+1)^0,c
  5798   001F84  0E00               	movlw	0
  5799   001F86  6E24               	movwf	(___flmul@prod+2)^0,c
  5800   001F88  0E00               	movlw	0
  5801   001F8A  6E25               	movwf	(___flmul@prod+3)^0,c
  5802   001F8C  0E00               	movlw	0
  5803   001F8E  6E1B               	movwf	___flmul@sign^0,c
  5804   001F90  EFDF  F00F         	goto	l3005
  5805   001F94                     l780:
  5806   001F94  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5807   001F98  0EFF               	movlw	255
  5808   001F9A  1622               	andwf	___flmul@prod^0,f,c
  5809   001F9C  0EFF               	movlw	255
  5810   001F9E  1623               	andwf	(___flmul@prod+1)^0,f,c
  5811   001FA0  0E7F               	movlw	127
  5812   001FA2  1624               	andwf	(___flmul@prod+2)^0,f,c
  5813   001FA4  0E00               	movlw	0
  5814   001FA6  1625               	andwf	(___flmul@prod+3)^0,f,c
  5815   001FA8  A021               	btfss	___flmul@bexp^0,0,c
  5816   001FAA  EFD9  F00F         	goto	u2901
  5817   001FAE  EFDB  F00F         	goto	u2900
  5818   001FB2                     u2901:
  5819   001FB2  EFDC  F00F         	goto	l3003
  5820   001FB6                     u2900:
  5821   001FB6  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5822   001FB8                     l3003:
  5823   001FB8  90D8               	bcf	status,0,c
  5824   001FBA  3021               	rrcf	___flmul@bexp^0,w,c
  5825   001FBC  6E25               	movwf	(___flmul@prod+3)^0,c
  5826   001FBE                     l3005:
  5827   001FBE  501B               	movf	___flmul@sign^0,w,c
  5828   001FC0  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5829   001FC2  C022  F00F         	movff	___flmul@prod,?___flmul
  5830   001FC6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5831   001FCA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5832   001FCE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5833   001FD2                     l767:
  5834   001FD2  0012               	return		;funcret
  5835   001FD4                     __end_of___flmul:
  5836                           	callstack 0
  5837                           
  5838 ;; *************** function ___flge *****************
  5839 ;; Defined at:
  5840 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  ff1             4   39[COMRAM] unsigned char 
  5843 ;;  ff2             4   43[COMRAM] unsigned char 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;		None               void
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5855 ;;      Params:         8       0       0       0       0       0       0       0       0
  5856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5857 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5858 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5859 ;;Total ram usage:       12 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 1
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_main
  5866 ;;		_efgtoa
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text19
  5871   002B98                     __ptext19:
  5872                           	callstack 0
  5873   002B98                     ___flge:
  5874                           	callstack 25
  5875   002B98  0E00               	movlw	0
  5876   002B9A  1428               	andwf	___flge@ff1^0,w,c
  5877   002B9C  6E30               	movwf	??___flge^0,c
  5878   002B9E  0E00               	movlw	0
  5879   002BA0  1429               	andwf	(___flge@ff1+1)^0,w,c
  5880   002BA2  6E31               	movwf	(??___flge+1)^0,c
  5881   002BA4  0E80               	movlw	128
  5882   002BA6  142A               	andwf	(___flge@ff1+2)^0,w,c
  5883   002BA8  6E32               	movwf	(??___flge+2)^0,c
  5884   002BAA  0E7F               	movlw	127
  5885   002BAC  142B               	andwf	(___flge@ff1+3)^0,w,c
  5886   002BAE  6E33               	movwf	(??___flge+3)^0,c
  5887   002BB0  5030               	movf	??___flge^0,w,c
  5888   002BB2  1031               	iorwf	(??___flge+1)^0,w,c
  5889   002BB4  1032               	iorwf	(??___flge+2)^0,w,c
  5890   002BB6  1033               	iorwf	(??___flge+3)^0,w,c
  5891   002BB8  A4D8               	btfss	status,2,c
  5892   002BBA  EFE1  F015         	goto	u2941
  5893   002BBE  EFE3  F015         	goto	u2940
  5894   002BC2                     u2941:
  5895   002BC2  EFEB  F015         	goto	l3037
  5896   002BC6                     u2940:
  5897   002BC6  0E00               	movlw	0
  5898   002BC8  6E28               	movwf	___flge@ff1^0,c
  5899   002BCA  0E00               	movlw	0
  5900   002BCC  6E29               	movwf	(___flge@ff1+1)^0,c
  5901   002BCE  0E00               	movlw	0
  5902   002BD0  6E2A               	movwf	(___flge@ff1+2)^0,c
  5903   002BD2  0E00               	movlw	0
  5904   002BD4  6E2B               	movwf	(___flge@ff1+3)^0,c
  5905   002BD6                     l3037:
  5906   002BD6  0E00               	movlw	0
  5907   002BD8  142C               	andwf	___flge@ff2^0,w,c
  5908   002BDA  6E30               	movwf	??___flge^0,c
  5909   002BDC  0E00               	movlw	0
  5910   002BDE  142D               	andwf	(___flge@ff2+1)^0,w,c
  5911   002BE0  6E31               	movwf	(??___flge+1)^0,c
  5912   002BE2  0E80               	movlw	128
  5913   002BE4  142E               	andwf	(___flge@ff2+2)^0,w,c
  5914   002BE6  6E32               	movwf	(??___flge+2)^0,c
  5915   002BE8  0E7F               	movlw	127
  5916   002BEA  142F               	andwf	(___flge@ff2+3)^0,w,c
  5917   002BEC  6E33               	movwf	(??___flge+3)^0,c
  5918   002BEE  5030               	movf	??___flge^0,w,c
  5919   002BF0  1031               	iorwf	(??___flge+1)^0,w,c
  5920   002BF2  1032               	iorwf	(??___flge+2)^0,w,c
  5921   002BF4  1033               	iorwf	(??___flge+3)^0,w,c
  5922   002BF6  A4D8               	btfss	status,2,c
  5923   002BF8  EF00  F016         	goto	u2951
  5924   002BFC  EF02  F016         	goto	u2950
  5925   002C00                     u2951:
  5926   002C00  EF0A  F016         	goto	l3041
  5927   002C04                     u2950:
  5928   002C04  0E00               	movlw	0
  5929   002C06  6E2C               	movwf	___flge@ff2^0,c
  5930   002C08  0E00               	movlw	0
  5931   002C0A  6E2D               	movwf	(___flge@ff2+1)^0,c
  5932   002C0C  0E00               	movlw	0
  5933   002C0E  6E2E               	movwf	(___flge@ff2+2)^0,c
  5934   002C10  0E00               	movlw	0
  5935   002C12  6E2F               	movwf	(___flge@ff2+3)^0,c
  5936   002C14                     l3041:
  5937   002C14  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5938   002C16  EF0F  F016         	goto	u2961
  5939   002C1A  EF11  F016         	goto	u2960
  5940   002C1E                     u2961:
  5941   002C1E  EF1A  F016         	goto	l3045
  5942   002C22                     u2960:
  5943   002C22  6C28               	negf	___flge@ff1^0,c
  5944   002C24  1E29               	comf	(___flge@ff1+1)^0,f,c
  5945   002C26  B0D8               	btfsc	status,0,c
  5946   002C28  2A29               	incf	(___flge@ff1+1)^0,f,c
  5947   002C2A  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5948   002C2C  B0D8               	btfsc	status,0,c
  5949   002C2E  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5950   002C30  0E80               	movlw	128
  5951   002C32  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5952   002C34                     l3045:
  5953   002C34  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5954   002C36  EF1F  F016         	goto	u2971
  5955   002C3A  EF21  F016         	goto	u2970
  5956   002C3E                     u2971:
  5957   002C3E  EF2A  F016         	goto	l414
  5958   002C42                     u2970:
  5959   002C42  6C2C               	negf	___flge@ff2^0,c
  5960   002C44  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5961   002C46  B0D8               	btfsc	status,0,c
  5962   002C48  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5963   002C4A  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5964   002C4C  B0D8               	btfsc	status,0,c
  5965   002C4E  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5966   002C50  0E80               	movlw	128
  5967   002C52  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5968   002C54                     l414:
  5969   002C54  0E00               	movlw	0
  5970   002C56  1A28               	xorwf	___flge@ff1^0,f,c
  5971   002C58  0E00               	movlw	0
  5972   002C5A  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5973   002C5C  0E00               	movlw	0
  5974   002C5E  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5975   002C60  0E80               	movlw	128
  5976   002C62  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5977   002C64  0E00               	movlw	0
  5978   002C66  1A2C               	xorwf	___flge@ff2^0,f,c
  5979   002C68  0E00               	movlw	0
  5980   002C6A  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5981   002C6C  0E00               	movlw	0
  5982   002C6E  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5983   002C70  0E80               	movlw	128
  5984   002C72  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5985   002C74  502C               	movf	___flge@ff2^0,w,c
  5986   002C76  5C28               	subwf	___flge@ff1^0,w,c
  5987   002C78  502D               	movf	(___flge@ff2+1)^0,w,c
  5988   002C7A  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5989   002C7C  502E               	movf	(___flge@ff2+2)^0,w,c
  5990   002C7E  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5991   002C80  502F               	movf	(___flge@ff2+3)^0,w,c
  5992   002C82  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5993   002C84  B0D8               	btfsc	status,0,c
  5994   002C86  EF47  F016         	goto	u2981
  5995   002C8A  EF49  F016         	goto	u2980
  5996   002C8E                     u2981:
  5997   002C8E  EF4C  F016         	goto	l3051
  5998   002C92                     u2980:
  5999   002C92  90D8               	bcf	status,0,c
  6000   002C94  EF4D  F016         	goto	l419
  6001   002C98                     l3051:
  6002   002C98  80D8               	bsf	status,0,c
  6003   002C9A                     l419:
  6004   002C9A  0012               	return		;funcret
  6005   002C9C                     __end_of___flge:
  6006                           	callstack 0
  6007                           
  6008 ;; *************** function ___fleq *****************
  6009 ;; Defined at:
  6010 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  ff1             4    0[COMRAM] unsigned char 
  6013 ;;  ff2             4    4[COMRAM] unsigned char 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;		None
  6016 ;; Return value:  Size  Location     Type
  6017 ;;		None               void
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6025 ;;      Params:         8       0       0       0       0       0       0       0       0
  6026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6027 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6028 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6029 ;;Total ram usage:       12 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; Hardware stack levels required when called: 1
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_efgtoa
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text20
  6040   002F0E                     __ptext20:
  6041                           	callstack 0
  6042   002F0E                     ___fleq:
  6043                           	callstack 25
  6044   002F0E  0E00               	movlw	0
  6045   002F10  1401               	andwf	___fleq@ff1^0,w,c
  6046   002F12  6E09               	movwf	??___fleq^0,c
  6047   002F14  0E00               	movlw	0
  6048   002F16  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6049   002F18  6E0A               	movwf	(??___fleq+1)^0,c
  6050   002F1A  0E80               	movlw	128
  6051   002F1C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6052   002F1E  6E0B               	movwf	(??___fleq+2)^0,c
  6053   002F20  0E7F               	movlw	127
  6054   002F22  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6055   002F24  6E0C               	movwf	(??___fleq+3)^0,c
  6056   002F26  5009               	movf	??___fleq^0,w,c
  6057   002F28  100A               	iorwf	(??___fleq+1)^0,w,c
  6058   002F2A  100B               	iorwf	(??___fleq+2)^0,w,c
  6059   002F2C  100C               	iorwf	(??___fleq+3)^0,w,c
  6060   002F2E  A4D8               	btfss	status,2,c
  6061   002F30  EF9C  F017         	goto	u2911
  6062   002F34  EF9E  F017         	goto	u2910
  6063   002F38                     u2911:
  6064   002F38  EFA6  F017         	goto	l3021
  6065   002F3C                     u2910:
  6066   002F3C  0E00               	movlw	0
  6067   002F3E  6E01               	movwf	___fleq@ff1^0,c
  6068   002F40  0E00               	movlw	0
  6069   002F42  6E02               	movwf	(___fleq@ff1+1)^0,c
  6070   002F44  0E00               	movlw	0
  6071   002F46  6E03               	movwf	(___fleq@ff1+2)^0,c
  6072   002F48  0E00               	movlw	0
  6073   002F4A  6E04               	movwf	(___fleq@ff1+3)^0,c
  6074   002F4C                     l3021:
  6075   002F4C  0E00               	movlw	0
  6076   002F4E  1405               	andwf	___fleq@ff2^0,w,c
  6077   002F50  6E09               	movwf	??___fleq^0,c
  6078   002F52  0E00               	movlw	0
  6079   002F54  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6080   002F56  6E0A               	movwf	(??___fleq+1)^0,c
  6081   002F58  0E80               	movlw	128
  6082   002F5A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6083   002F5C  6E0B               	movwf	(??___fleq+2)^0,c
  6084   002F5E  0E7F               	movlw	127
  6085   002F60  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6086   002F62  6E0C               	movwf	(??___fleq+3)^0,c
  6087   002F64  5009               	movf	??___fleq^0,w,c
  6088   002F66  100A               	iorwf	(??___fleq+1)^0,w,c
  6089   002F68  100B               	iorwf	(??___fleq+2)^0,w,c
  6090   002F6A  100C               	iorwf	(??___fleq+3)^0,w,c
  6091   002F6C  A4D8               	btfss	status,2,c
  6092   002F6E  EFBB  F017         	goto	u2921
  6093   002F72  EFBD  F017         	goto	u2920
  6094   002F76                     u2921:
  6095   002F76  EFC5  F017         	goto	l3025
  6096   002F7A                     u2920:
  6097   002F7A  0E00               	movlw	0
  6098   002F7C  6E05               	movwf	___fleq@ff2^0,c
  6099   002F7E  0E00               	movlw	0
  6100   002F80  6E06               	movwf	(___fleq@ff2+1)^0,c
  6101   002F82  0E00               	movlw	0
  6102   002F84  6E07               	movwf	(___fleq@ff2+2)^0,c
  6103   002F86  0E00               	movlw	0
  6104   002F88  6E08               	movwf	(___fleq@ff2+3)^0,c
  6105   002F8A                     l3025:
  6106   002F8A  5005               	movf	___fleq@ff2^0,w,c
  6107   002F8C  1801               	xorwf	___fleq@ff1^0,w,c
  6108   002F8E  E10F               	bnz	u2930
  6109   002F90  5006               	movf	(___fleq@ff2+1)^0,w,c
  6110   002F92  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6111   002F94  E10C               	bnz	u2930
  6112   002F96  5007               	movf	(___fleq@ff2+2)^0,w,c
  6113   002F98  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6114   002F9A  E109               	bnz	u2930
  6115   002F9C  5008               	movf	(___fleq@ff2+3)^0,w,c
  6116   002F9E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6117   002FA0  B4D8               	btfsc	status,2,c
  6118   002FA2  EFD5  F017         	goto	u2931
  6119   002FA6  EFD7  F017         	goto	u2930
  6120   002FAA                     u2931:
  6121   002FAA  EFDA  F017         	goto	l3029
  6122   002FAE                     u2930:
  6123   002FAE  90D8               	bcf	status,0,c
  6124   002FB0  EFDB  F017         	goto	l408
  6125   002FB4                     l3029:
  6126   002FB4  80D8               	bsf	status,0,c
  6127   002FB6                     l408:
  6128   002FB6  0012               	return		;funcret
  6129   002FB8                     __end_of___fleq:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function ___fldiv *****************
  6133 ;; Defined at:
  6134 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  b               4   39[COMRAM] unsigned char 
  6137 ;;  a               4   43[COMRAM] unsigned char 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  grs             4   58[COMRAM] unsigned long 
  6140 ;;  rem             4   51[COMRAM] unsigned long 
  6141 ;;  new_exp         2   56[COMRAM] short 
  6142 ;;  aexp            1   63[COMRAM] unsigned char 
  6143 ;;  bexp            1   62[COMRAM] unsigned char 
  6144 ;;  sign            1   55[COMRAM] unsigned char 
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  4   39[COMRAM] unsigned char 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2, status,0
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6154 ;;      Params:         8       0       0       0       0       0       0       0       0
  6155 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6156 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6157 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6158 ;;Total ram usage:       25 bytes
  6159 ;; Hardware stack levels used: 1
  6160 ;; Hardware stack levels required when called: 1
  6161 ;; This function calls:
  6162 ;;		Nothing
  6163 ;; This function is called by:
  6164 ;;		_main
  6165 ;;		_efgtoa
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text21
  6170   001FD4                     __ptext21:
  6171                           	callstack 0
  6172   001FD4                     ___fldiv:
  6173                           	callstack 25
  6174   001FD4  502B               	movf	(___fldiv@b+3)^0,w,c
  6175   001FD6  0B80               	andlw	128
  6176   001FD8  6E38               	movwf	___fldiv@sign^0,c
  6177   001FDA  502B               	movf	(___fldiv@b+3)^0,w,c
  6178   001FDC  242B               	addwf	(___fldiv@b+3)^0,w,c
  6179   001FDE  6E3F               	movwf	___fldiv@bexp^0,c
  6180   001FE0  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6181   001FE2  EFF5  F00F         	goto	u2491
  6182   001FE6  EFF7  F00F         	goto	u2490
  6183   001FEA                     u2491:
  6184   001FEA  EFF8  F00F         	goto	l2749
  6185   001FEE                     u2490:
  6186   001FEE  803F               	bsf	___fldiv@bexp^0,0,c
  6187   001FF0                     l2749:
  6188   001FF0  503F               	movf	___fldiv@bexp^0,w,c
  6189   001FF2  B4D8               	btfsc	status,2,c
  6190   001FF4  EFFE  F00F         	goto	u2501
  6191   001FF8  EF00  F010         	goto	u2500
  6192   001FFC                     u2501:
  6193   001FFC  EF15  F010         	goto	l2759
  6194   002000                     u2500:
  6195   002000  283F               	incf	___fldiv@bexp^0,w,c
  6196   002002  A4D8               	btfss	status,2,c
  6197   002004  EF06  F010         	goto	u2511
  6198   002008  EF08  F010         	goto	u2510
  6199   00200C                     u2511:
  6200   00200C  EF10  F010         	goto	l2755
  6201   002010                     u2510:
  6202   002010  0E00               	movlw	0
  6203   002012  6E28               	movwf	___fldiv@b^0,c
  6204   002014  0E00               	movlw	0
  6205   002016  6E29               	movwf	(___fldiv@b+1)^0,c
  6206   002018  0E00               	movlw	0
  6207   00201A  6E2A               	movwf	(___fldiv@b+2)^0,c
  6208   00201C  0E00               	movlw	0
  6209   00201E  6E2B               	movwf	(___fldiv@b+3)^0,c
  6210   002020                     l2755:
  6211   002020  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6212   002022  0E00               	movlw	0
  6213   002024  6E2B               	movwf	(___fldiv@b+3)^0,c
  6214   002026  EF1D  F010         	goto	l2761
  6215   00202A                     l2759:
  6216   00202A  0E00               	movlw	0
  6217   00202C  6E28               	movwf	___fldiv@b^0,c
  6218   00202E  0E00               	movlw	0
  6219   002030  6E29               	movwf	(___fldiv@b+1)^0,c
  6220   002032  0E00               	movlw	0
  6221   002034  6E2A               	movwf	(___fldiv@b+2)^0,c
  6222   002036  0E00               	movlw	0
  6223   002038  6E2B               	movwf	(___fldiv@b+3)^0,c
  6224   00203A                     l2761:
  6225   00203A  502F               	movf	(___fldiv@a+3)^0,w,c
  6226   00203C  0B80               	andlw	128
  6227   00203E  1A38               	xorwf	___fldiv@sign^0,f,c
  6228   002040  502F               	movf	(___fldiv@a+3)^0,w,c
  6229   002042  242F               	addwf	(___fldiv@a+3)^0,w,c
  6230   002044  6E40               	movwf	___fldiv@aexp^0,c
  6231   002046  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6232   002048  EF28  F010         	goto	u2521
  6233   00204C  EF2A  F010         	goto	u2520
  6234   002050                     u2521:
  6235   002050  EF2B  F010         	goto	l2769
  6236   002054                     u2520:
  6237   002054  8040               	bsf	___fldiv@aexp^0,0,c
  6238   002056                     l2769:
  6239   002056  5040               	movf	___fldiv@aexp^0,w,c
  6240   002058  B4D8               	btfsc	status,2,c
  6241   00205A  EF31  F010         	goto	u2531
  6242   00205E  EF33  F010         	goto	u2530
  6243   002062                     u2531:
  6244   002062  EF48  F010         	goto	l2779
  6245   002066                     u2530:
  6246   002066  2840               	incf	___fldiv@aexp^0,w,c
  6247   002068  A4D8               	btfss	status,2,c
  6248   00206A  EF39  F010         	goto	u2541
  6249   00206E  EF3B  F010         	goto	u2540
  6250   002072                     u2541:
  6251   002072  EF43  F010         	goto	l2775
  6252   002076                     u2540:
  6253   002076  0E00               	movlw	0
  6254   002078  6E2C               	movwf	___fldiv@a^0,c
  6255   00207A  0E00               	movlw	0
  6256   00207C  6E2D               	movwf	(___fldiv@a+1)^0,c
  6257   00207E  0E00               	movlw	0
  6258   002080  6E2E               	movwf	(___fldiv@a+2)^0,c
  6259   002082  0E00               	movlw	0
  6260   002084  6E2F               	movwf	(___fldiv@a+3)^0,c
  6261   002086                     l2775:
  6262   002086  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6263   002088  0E00               	movlw	0
  6264   00208A  6E2F               	movwf	(___fldiv@a+3)^0,c
  6265   00208C  EF50  F010         	goto	l2781
  6266   002090                     l2779:
  6267   002090  0E00               	movlw	0
  6268   002092  6E2C               	movwf	___fldiv@a^0,c
  6269   002094  0E00               	movlw	0
  6270   002096  6E2D               	movwf	(___fldiv@a+1)^0,c
  6271   002098  0E00               	movlw	0
  6272   00209A  6E2E               	movwf	(___fldiv@a+2)^0,c
  6273   00209C  0E00               	movlw	0
  6274   00209E  6E2F               	movwf	(___fldiv@a+3)^0,c
  6275   0020A0                     l2781:
  6276   0020A0  502C               	movf	___fldiv@a^0,w,c
  6277   0020A2  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6278   0020A4  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6279   0020A6  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6280   0020A8  A4D8               	btfss	status,2,c
  6281   0020AA  EF59  F010         	goto	u2551
  6282   0020AE  EF5B  F010         	goto	u2550
  6283   0020B2                     u2551:
  6284   0020B2  EF73  F010         	goto	l2793
  6285   0020B6                     u2550:
  6286   0020B6  0E00               	movlw	0
  6287   0020B8  6E28               	movwf	___fldiv@b^0,c
  6288   0020BA  0E00               	movlw	0
  6289   0020BC  6E29               	movwf	(___fldiv@b+1)^0,c
  6290   0020BE  0E00               	movlw	0
  6291   0020C0  6E2A               	movwf	(___fldiv@b+2)^0,c
  6292   0020C2  0E00               	movlw	0
  6293   0020C4  6E2B               	movwf	(___fldiv@b+3)^0,c
  6294   0020C6  0E80               	movlw	128
  6295   0020C8  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6296   0020CA  0E7F               	movlw	127
  6297   0020CC  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6298   0020CE                     l2787:
  6299   0020CE  5038               	movf	___fldiv@sign^0,w,c
  6300   0020D0  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6301   0020D2  C028  F028         	movff	___fldiv@b,?___fldiv
  6302   0020D6  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6303   0020DA  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6304   0020DE  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6305   0020E2  EFB6  F011         	goto	l731
  6306   0020E6                     l2793:
  6307   0020E6  503F               	movf	___fldiv@bexp^0,w,c
  6308   0020E8  A4D8               	btfss	status,2,c
  6309   0020EA  EF79  F010         	goto	u2561
  6310   0020EE  EF7B  F010         	goto	u2560
  6311   0020F2                     u2561:
  6312   0020F2  EF85  F010         	goto	l2801
  6313   0020F6                     u2560:
  6314   0020F6  0E00               	movlw	0
  6315   0020F8  6E28               	movwf	?___fldiv^0,c
  6316   0020FA  0E00               	movlw	0
  6317   0020FC  6E29               	movwf	(?___fldiv+1)^0,c
  6318   0020FE  0E00               	movlw	0
  6319   002100  6E2A               	movwf	(?___fldiv+2)^0,c
  6320   002102  0E00               	movlw	0
  6321   002104  6E2B               	movwf	(?___fldiv+3)^0,c
  6322   002106  EFB6  F011         	goto	l731
  6323   00210A                     l2801:
  6324   00210A  5040               	movf	___fldiv@aexp^0,w,c
  6325   00210C  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6326   002110  6A31               	clrf	(??___fldiv+1)^0,c
  6327   002112  5E30               	subwf	??___fldiv^0,f,c
  6328   002114  0E00               	movlw	0
  6329   002116  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6330   002118  0E7F               	movlw	127
  6331   00211A  2430               	addwf	??___fldiv^0,w,c
  6332   00211C  6E39               	movwf	___fldiv@new_exp^0,c
  6333   00211E  0E00               	movlw	0
  6334   002120  2031               	addwfc	(??___fldiv+1)^0,w,c
  6335   002122  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6336   002124  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6337   002128  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6338   00212C  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6339   002130  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6340   002134  0E00               	movlw	0
  6341   002136  6E28               	movwf	___fldiv@b^0,c
  6342   002138  0E00               	movlw	0
  6343   00213A  6E29               	movwf	(___fldiv@b+1)^0,c
  6344   00213C  0E00               	movlw	0
  6345   00213E  6E2A               	movwf	(___fldiv@b+2)^0,c
  6346   002140  0E00               	movlw	0
  6347   002142  6E2B               	movwf	(___fldiv@b+3)^0,c
  6348   002144  0E00               	movlw	0
  6349   002146  6E3B               	movwf	___fldiv@grs^0,c
  6350   002148  0E00               	movlw	0
  6351   00214A  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6352   00214C  0E00               	movlw	0
  6353   00214E  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6354   002150  0E00               	movlw	0
  6355   002152  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6356   002154  0E00               	movlw	0
  6357   002156  6E40               	movwf	___fldiv@aexp^0,c
  6358   002158  EFE6  F010         	goto	l733
  6359   00215C                     l2811:
  6360   00215C  5040               	movf	___fldiv@aexp^0,w,c
  6361   00215E  B4D8               	btfsc	status,2,c
  6362   002160  EFB4  F010         	goto	u2571
  6363   002164  EFB6  F010         	goto	u2570
  6364   002168                     u2571:
  6365   002168  EFCD  F010         	goto	l2819
  6366   00216C                     u2570:
  6367   00216C  90D8               	bcf	status,0,c
  6368   00216E  3634               	rlcf	___fldiv@rem^0,f,c
  6369   002170  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6370   002172  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6371   002174  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6372   002176  90D8               	bcf	status,0,c
  6373   002178  3628               	rlcf	___fldiv@b^0,f,c
  6374   00217A  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6375   00217C  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6376   00217E  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6377   002180  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6378   002182  EFC5  F010         	goto	u2581
  6379   002186  EFC7  F010         	goto	u2580
  6380   00218A                     u2581:
  6381   00218A  EFC8  F010         	goto	l736
  6382   00218E                     u2580:
  6383   00218E  8028               	bsf	___fldiv@b^0,0,c
  6384   002190                     l736:
  6385   002190  90D8               	bcf	status,0,c
  6386   002192  363B               	rlcf	___fldiv@grs^0,f,c
  6387   002194  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6388   002196  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6389   002198  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6390   00219A                     l2819:
  6391   00219A  502C               	movf	___fldiv@a^0,w,c
  6392   00219C  5C34               	subwf	___fldiv@rem^0,w,c
  6393   00219E  502D               	movf	(___fldiv@a+1)^0,w,c
  6394   0021A0  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6395   0021A2  502E               	movf	(___fldiv@a+2)^0,w,c
  6396   0021A4  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6397   0021A6  502F               	movf	(___fldiv@a+3)^0,w,c
  6398   0021A8  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6399   0021AA  A0D8               	btfss	status,0,c
  6400   0021AC  EFDA  F010         	goto	u2591
  6401   0021B0  EFDC  F010         	goto	u2590
  6402   0021B4                     u2591:
  6403   0021B4  EFE5  F010         	goto	l2825
  6404   0021B8                     u2590:
  6405   0021B8  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6406   0021BA  502C               	movf	___fldiv@a^0,w,c
  6407   0021BC  5E34               	subwf	___fldiv@rem^0,f,c
  6408   0021BE  502D               	movf	(___fldiv@a+1)^0,w,c
  6409   0021C0  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6410   0021C2  502E               	movf	(___fldiv@a+2)^0,w,c
  6411   0021C4  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6412   0021C6  502F               	movf	(___fldiv@a+3)^0,w,c
  6413   0021C8  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6414   0021CA                     l2825:
  6415   0021CA  2A40               	incf	___fldiv@aexp^0,f,c
  6416   0021CC                     l733:
  6417   0021CC  0E19               	movlw	25
  6418   0021CE  6440               	cpfsgt	___fldiv@aexp^0,c
  6419   0021D0  EFEC  F010         	goto	u2601
  6420   0021D4  EFEE  F010         	goto	u2600
  6421   0021D8                     u2601:
  6422   0021D8  EFAE  F010         	goto	l2811
  6423   0021DC                     u2600:
  6424   0021DC  5034               	movf	___fldiv@rem^0,w,c
  6425   0021DE  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6426   0021E0  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6427   0021E2  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6428   0021E4  B4D8               	btfsc	status,2,c
  6429   0021E6  EFF7  F010         	goto	u2611
  6430   0021EA  EFF9  F010         	goto	u2610
  6431   0021EE                     u2611:
  6432   0021EE  EF11  F011         	goto	l2837
  6433   0021F2                     u2610:
  6434   0021F2  803B               	bsf	___fldiv@grs^0,0,c
  6435   0021F4  EF11  F011         	goto	l2837
  6436   0021F8                     l2831:
  6437   0021F8  90D8               	bcf	status,0,c
  6438   0021FA  3628               	rlcf	___fldiv@b^0,f,c
  6439   0021FC  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6440   0021FE  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6441   002200  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6442   002202  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6443   002204  EF06  F011         	goto	u2621
  6444   002208  EF08  F011         	goto	u2620
  6445   00220C                     u2621:
  6446   00220C  EF09  F011         	goto	l742
  6447   002210                     u2620:
  6448   002210  8028               	bsf	___fldiv@b^0,0,c
  6449   002212                     l742:
  6450   002212  90D8               	bcf	status,0,c
  6451   002214  363B               	rlcf	___fldiv@grs^0,f,c
  6452   002216  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6453   002218  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6454   00221A  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6455   00221C  0639               	decf	___fldiv@new_exp^0,f,c
  6456   00221E  A0D8               	btfss	status,0,c
  6457   002220  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6458   002222                     l2837:
  6459   002222  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6460   002224  EF16  F011         	goto	u2631
  6461   002228  EF18  F011         	goto	u2630
  6462   00222C                     u2631:
  6463   00222C  EFFC  F010         	goto	l2831
  6464   002230                     u2630:
  6465   002230  0E00               	movlw	0
  6466   002232  6E40               	movwf	___fldiv@aexp^0,c
  6467   002234  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6468   002236  EF1F  F011         	goto	u2641
  6469   00223A  EF21  F011         	goto	u2640
  6470   00223E                     u2641:
  6471   00223E  EF45  F011         	goto	l744
  6472   002242                     u2640:
  6473   002242  0EFF               	movlw	255
  6474   002244  143B               	andwf	___fldiv@grs^0,w,c
  6475   002246  6E30               	movwf	??___fldiv^0,c
  6476   002248  0EFF               	movlw	255
  6477   00224A  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6478   00224C  6E31               	movwf	(??___fldiv+1)^0,c
  6479   00224E  0EFF               	movlw	255
  6480   002250  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6481   002252  6E32               	movwf	(??___fldiv+2)^0,c
  6482   002254  0E7F               	movlw	127
  6483   002256  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6484   002258  6E33               	movwf	(??___fldiv+3)^0,c
  6485   00225A  5030               	movf	??___fldiv^0,w,c
  6486   00225C  1031               	iorwf	(??___fldiv+1)^0,w,c
  6487   00225E  1032               	iorwf	(??___fldiv+2)^0,w,c
  6488   002260  1033               	iorwf	(??___fldiv+3)^0,w,c
  6489   002262  B4D8               	btfsc	status,2,c
  6490   002264  EF36  F011         	goto	u2651
  6491   002268  EF38  F011         	goto	u2650
  6492   00226C                     u2651:
  6493   00226C  EF3C  F011         	goto	l745
  6494   002270                     u2650:
  6495   002270                     l2845:
  6496   002270  0E01               	movlw	1
  6497   002272  6E40               	movwf	___fldiv@aexp^0,c
  6498   002274  EF45  F011         	goto	l744
  6499   002278                     l745:
  6500   002278  A028               	btfss	___fldiv@b^0,0,c
  6501   00227A  EF41  F011         	goto	u2661
  6502   00227E  EF43  F011         	goto	u2660
  6503   002282                     u2661:
  6504   002282  EF45  F011         	goto	l744
  6505   002286                     u2660:
  6506   002286  EF38  F011         	goto	l2845
  6507   00228A                     l744:
  6508   00228A  5040               	movf	___fldiv@aexp^0,w,c
  6509   00228C  B4D8               	btfsc	status,2,c
  6510   00228E  EF4B  F011         	goto	u2671
  6511   002292  EF4D  F011         	goto	u2670
  6512   002296                     u2671:
  6513   002296  EF71  F011         	goto	l2857
  6514   00229A                     u2670:
  6515   00229A  0E01               	movlw	1
  6516   00229C  2628               	addwf	___fldiv@b^0,f,c
  6517   00229E  0E00               	movlw	0
  6518   0022A0  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6519   0022A2  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6520   0022A4  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6521   0022A6  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6522   0022A8  EF58  F011         	goto	u2681
  6523   0022AC  EF5A  F011         	goto	u2680
  6524   0022B0                     u2681:
  6525   0022B0  EF71  F011         	goto	l2857
  6526   0022B4                     u2680:
  6527   0022B4  C028  F030         	movff	___fldiv@b,??___fldiv
  6528   0022B8  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6529   0022BC  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6530   0022C0  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6531   0022C4  3433               	rlcf	(??___fldiv+3)^0,w,c
  6532   0022C6  3233               	rrcf	(??___fldiv+3)^0,f,c
  6533   0022C8  3232               	rrcf	(??___fldiv+2)^0,f,c
  6534   0022CA  3231               	rrcf	(??___fldiv+1)^0,f,c
  6535   0022CC  3230               	rrcf	??___fldiv^0,f,c
  6536   0022CE  C030  F028         	movff	??___fldiv,___fldiv@b
  6537   0022D2  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6538   0022D6  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6539   0022DA  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6540   0022DE  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6541   0022E0  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6542   0022E2                     l2857:
  6543   0022E2  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6544   0022E4  EF7C  F011         	goto	u2691
  6545   0022E8  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6546   0022EA  E108               	bnz	u2690
  6547   0022EC  2839               	incf	___fldiv@new_exp^0,w,c
  6548   0022EE  A0D8               	btfss	status,0,c
  6549   0022F0  EF7C  F011         	goto	u2691
  6550   0022F4  EF7E  F011         	goto	u2690
  6551   0022F8                     u2691:
  6552   0022F8  EF89  F011         	goto	l2861
  6553   0022FC                     u2690:
  6554   0022FC  0E00               	movlw	0
  6555   0022FE  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6556   002300  6839               	setf	___fldiv@new_exp^0,c
  6557   002302  0E00               	movlw	0
  6558   002304  6E28               	movwf	___fldiv@b^0,c
  6559   002306  0E00               	movlw	0
  6560   002308  6E29               	movwf	(___fldiv@b+1)^0,c
  6561   00230A  0E00               	movlw	0
  6562   00230C  6E2A               	movwf	(___fldiv@b+2)^0,c
  6563   00230E  0E00               	movlw	0
  6564   002310  6E2B               	movwf	(___fldiv@b+3)^0,c
  6565   002312                     l2861:
  6566   002312  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6567   002314  EF96  F011         	goto	u2700
  6568   002318  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6569   00231A  E106               	bnz	u2701
  6570   00231C  0439               	decf	___fldiv@new_exp^0,w,c
  6571   00231E  B0D8               	btfsc	status,0,c
  6572   002320  EF94  F011         	goto	u2701
  6573   002324  EF96  F011         	goto	u2700
  6574   002328                     u2701:
  6575   002328  EFA4  F011         	goto	l2865
  6576   00232C                     u2700:
  6577   00232C  0E00               	movlw	0
  6578   00232E  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6579   002330  0E00               	movlw	0
  6580   002332  6E39               	movwf	___fldiv@new_exp^0,c
  6581   002334  0E00               	movlw	0
  6582   002336  6E28               	movwf	___fldiv@b^0,c
  6583   002338  0E00               	movlw	0
  6584   00233A  6E29               	movwf	(___fldiv@b+1)^0,c
  6585   00233C  0E00               	movlw	0
  6586   00233E  6E2A               	movwf	(___fldiv@b+2)^0,c
  6587   002340  0E00               	movlw	0
  6588   002342  6E2B               	movwf	(___fldiv@b+3)^0,c
  6589   002344  0E00               	movlw	0
  6590   002346  6E38               	movwf	___fldiv@sign^0,c
  6591   002348                     l2865:
  6592   002348  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6593   00234C  A03F               	btfss	___fldiv@bexp^0,0,c
  6594   00234E  EFAB  F011         	goto	u2711
  6595   002352  EFAD  F011         	goto	u2710
  6596   002356                     u2711:
  6597   002356  EFB0  F011         	goto	l2871
  6598   00235A                     u2710:
  6599   00235A  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6600   00235C  EFB1  F011         	goto	l2873
  6601   002360                     l2871:
  6602   002360  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6603   002362                     l2873:
  6604   002362  90D8               	bcf	status,0,c
  6605   002364  303F               	rrcf	___fldiv@bexp^0,w,c
  6606   002366  6E2B               	movwf	(___fldiv@b+3)^0,c
  6607   002368  EF67  F010         	goto	l2787
  6608   00236C                     l731:
  6609   00236C  0012               	return		;funcret
  6610   00236E                     __end_of___fldiv:
  6611                           	callstack 0
  6612                           
  6613 ;; *************** function _atoi *****************
  6614 ;; Defined at:
  6615 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6618 ;;		 -> STR_2(8), 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  n               2   13[COMRAM] int 
  6621 ;;  neg             2   11[COMRAM] int 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  2    6[COMRAM] int 
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6631 ;;      Params:         2       0       0       0       0       0       0       0       0
  6632 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6633 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6634 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6635 ;;Total ram usage:        9 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; Hardware stack levels required when called: 2
  6638 ;; This function calls:
  6639 ;;		___wmul
  6640 ;;		_isdigit
  6641 ;;		_isspace
  6642 ;; This function is called by:
  6643 ;;		_vfpfcnvrt
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text22
  6648   002948                     __ptext22:
  6649                           	callstack 0
  6650   002948                     _atoi:
  6651                           	callstack 25
  6652   002948  0E00               	movlw	0
  6653   00294A  6E0F               	movwf	(atoi@n+1)^0,c
  6654   00294C  0E00               	movlw	0
  6655   00294E  6E0E               	movwf	atoi@n^0,c
  6656   002950  0E00               	movlw	0
  6657   002952  6E0D               	movwf	(atoi@neg+1)^0,c
  6658   002954  0E00               	movlw	0
  6659   002956  6E0C               	movwf	atoi@neg^0,c
  6660   002958  EFB0  F014         	goto	l3451
  6661   00295C                     l3447:
  6662   00295C  4A07               	infsnz	atoi@s^0,f,c
  6663   00295E  2A08               	incf	(atoi@s+1)^0,f,c
  6664   002960                     l3451:
  6665   002960  C007  FFF6         	movff	atoi@s,tblptrl
  6666   002964  C008  FFF7         	movff	atoi@s+1,tblptrh
  6667   002968                     	if	0	;tblptru may be non-zero
  6668   002968                     	endif
  6669   002968                     	if	0	;tblptru may be non-zero
  6670   002968                     	endif
  6671   002968  0008               	tblrd		*
  6672   00296A  50F5               	movf	tablat,w,c
  6673   00296C  0A20               	xorlw	32
  6674   00296E  B4D8               	btfsc	status,2,c
  6675   002970  EFBC  F014         	goto	u3701
  6676   002974  EFBE  F014         	goto	u3700
  6677   002978                     u3701:
  6678   002978  EFAE  F014         	goto	l3447
  6679   00297C                     u3700:
  6680   00297C  C007  FFF6         	movff	atoi@s,tblptrl
  6681   002980  C008  FFF7         	movff	atoi@s+1,tblptrh
  6682   002984                     	if	0	;tblptru may be non-zero
  6683   002984                     	endif
  6684   002984                     	if	0	;tblptru may be non-zero
  6685   002984                     	endif
  6686   002984  0008               	tblrd		*
  6687   002986  CFF5 F009          	movff	tablat,??_atoi
  6688   00298A  0EF7               	movlw	247
  6689   00298C  2409               	addwf	??_atoi^0,w,c
  6690   00298E  6E0A               	movwf	(??_atoi+1)^0,c
  6691   002990  6A0B               	clrf	(??_atoi+2)^0,c
  6692   002992  0EFF               	movlw	255
  6693   002994  220B               	addwfc	(??_atoi+2)^0,f,c
  6694   002996  500B               	movf	(??_atoi+2)^0,w,c
  6695   002998  E109               	bnz	u3710
  6696   00299A  0E05               	movlw	5
  6697   00299C  5C0A               	subwf	(??_atoi+1)^0,w,c
  6698   00299E  A0D8               	btfss	status,0,c
  6699   0029A0  EFD4  F014         	goto	u3711
  6700   0029A4  EFD6  F014         	goto	u3710
  6701   0029A8                     u3711:
  6702   0029A8  EFAE  F014         	goto	l3447
  6703   0029AC                     u3710:
  6704   0029AC  EFE0  F014         	goto	l3459
  6705   0029B0                     l3455:
  6706   0029B0  0E00               	movlw	0
  6707   0029B2  6E0D               	movwf	(atoi@neg+1)^0,c
  6708   0029B4  0E01               	movlw	1
  6709   0029B6  6E0C               	movwf	atoi@neg^0,c
  6710   0029B8                     l3457:
  6711   0029B8  4A07               	infsnz	atoi@s^0,f,c
  6712   0029BA  2A08               	incf	(atoi@s+1)^0,f,c
  6713   0029BC  EF15  F015         	goto	l3467
  6714   0029C0                     l3459:
  6715   0029C0  C007  FFF6         	movff	atoi@s,tblptrl
  6716   0029C4  C008  FFF7         	movff	atoi@s+1,tblptrh
  6717   0029C8                     	if	0	;tblptru may be non-zero
  6718   0029C8                     	endif
  6719   0029C8                     	if	0	;tblptru may be non-zero
  6720   0029C8                     	endif
  6721   0029C8  0008               	tblrd		*
  6722   0029CA  50F5               	movf	tablat,w,c
  6723   0029CC  6E09               	movwf	??_atoi^0,c
  6724   0029CE  6A0A               	clrf	(??_atoi+1)^0,c
  6725                           
  6726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6727                           ; Switch size 1, requested type "simple"
  6728                           ; Number of cases is 1, Range of values is 0 to 0
  6729                           ; switch strategies available:
  6730                           ; Name         Instructions Cycles
  6731                           ; simple_byte            4     3 (average)
  6732                           ;	Chosen strategy is simple_byte
  6733   0029D0  500A               	movf	(??_atoi+1)^0,w,c
  6734   0029D2  0A00               	xorlw	0	; case 0
  6735   0029D4  B4D8               	btfsc	status,2,c
  6736   0029D6  EFEF  F014         	goto	l4001
  6737   0029DA  EF15  F015         	goto	l3467
  6738   0029DE                     l4001:
  6739                           
  6740                           ; Switch size 1, requested type "simple"
  6741                           ; Number of cases is 2, Range of values is 43 to 45
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte            7     4 (average)
  6745                           ;	Chosen strategy is simple_byte
  6746   0029DE  5009               	movf	??_atoi^0,w,c
  6747   0029E0  0A2B               	xorlw	43	; case 43
  6748   0029E2  B4D8               	btfsc	status,2,c
  6749   0029E4  EFDC  F014         	goto	l3457
  6750   0029E8  0A06               	xorlw	6	; case 45
  6751   0029EA  B4D8               	btfsc	status,2,c
  6752   0029EC  EFD8  F014         	goto	l3455
  6753   0029F0  EF15  F015         	goto	l3467
  6754   0029F4                     l3461:
  6755   0029F4  C00E  F001         	movff	atoi@n,___wmul@multiplier
  6756   0029F8  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6757   0029FC  0E00               	movlw	0
  6758   0029FE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6759   002A00  0E0A               	movlw	10
  6760   002A02  6E03               	movwf	___wmul@multiplicand^0,c
  6761   002A04  EC51  F01A         	call	___wmul	;wreg free
  6762   002A08  C007  FFF6         	movff	atoi@s,tblptrl
  6763   002A0C  C008  FFF7         	movff	atoi@s+1,tblptrh
  6764   002A10                     	if	0	;tblptru may be non-zero
  6765   002A10                     	endif
  6766   002A10                     	if	0	;tblptru may be non-zero
  6767   002A10                     	endif
  6768   002A10  0008               	tblrd		*
  6769   002A12  50F5               	movf	tablat,w,c
  6770   002A14  5E01               	subwf	?___wmul^0,f,c
  6771   002A16  0E00               	movlw	0
  6772   002A18  5A02               	subwfb	(?___wmul+1)^0,f,c
  6773   002A1A  0E30               	movlw	48
  6774   002A1C  2401               	addwf	?___wmul^0,w,c
  6775   002A1E  6E0E               	movwf	atoi@n^0,c
  6776   002A20  0E00               	movlw	0
  6777   002A22  2002               	addwfc	(?___wmul+1)^0,w,c
  6778   002A24  6E0F               	movwf	(atoi@n+1)^0,c
  6779   002A26  EFDC  F014         	goto	l3457
  6780   002A2A                     l3467:
  6781   002A2A  C007  FFF6         	movff	atoi@s,tblptrl
  6782   002A2E  C008  FFF7         	movff	atoi@s+1,tblptrh
  6783   002A32                     	if	0	;tblptru may be non-zero
  6784   002A32                     	endif
  6785   002A32                     	if	0	;tblptru may be non-zero
  6786   002A32                     	endif
  6787   002A32  0008               	tblrd		*
  6788   002A34  CFF5 F009          	movff	tablat,??_atoi
  6789   002A38  0ED0               	movlw	208
  6790   002A3A  2409               	addwf	??_atoi^0,w,c
  6791   002A3C  6E0A               	movwf	(??_atoi+1)^0,c
  6792   002A3E  6A0B               	clrf	(??_atoi+2)^0,c
  6793   002A40  0EFF               	movlw	255
  6794   002A42  220B               	addwfc	(??_atoi+2)^0,f,c
  6795   002A44  500B               	movf	(??_atoi+2)^0,w,c
  6796   002A46  E109               	bnz	u3720
  6797   002A48  0E0A               	movlw	10
  6798   002A4A  5C0A               	subwf	(??_atoi+1)^0,w,c
  6799   002A4C  A0D8               	btfss	status,0,c
  6800   002A4E  EF2B  F015         	goto	u3721
  6801   002A52  EF2D  F015         	goto	u3720
  6802   002A56                     u3721:
  6803   002A56  EFFA  F014         	goto	l3461
  6804   002A5A                     u3720:
  6805   002A5A  500C               	movf	atoi@neg^0,w,c
  6806   002A5C  100D               	iorwf	(atoi@neg+1)^0,w,c
  6807   002A5E  A4D8               	btfss	status,2,c
  6808   002A60  EF34  F015         	goto	u3731
  6809   002A64  EF36  F015         	goto	u3730
  6810   002A68                     u3731:
  6811   002A68  EF44  F015         	goto	l1007
  6812   002A6C                     u3730:
  6813   002A6C  C00E  F009         	movff	atoi@n,??_atoi
  6814   002A70  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  6815   002A74  1E09               	comf	??_atoi^0,f,c
  6816   002A76  1E0A               	comf	(??_atoi+1)^0,f,c
  6817   002A78  4A09               	infsnz	??_atoi^0,f,c
  6818   002A7A  2A0A               	incf	(??_atoi+1)^0,f,c
  6819   002A7C  C009  F007         	movff	??_atoi,?_atoi
  6820   002A80  C00A  F008         	movff	??_atoi+1,?_atoi+1
  6821   002A84  EF48  F015         	goto	l1010
  6822   002A88                     l1007:
  6823   002A88  C00E  F007         	movff	atoi@n,?_atoi
  6824   002A8C  C00F  F008         	movff	atoi@n+1,?_atoi+1
  6825   002A90                     l1010:
  6826   002A90  0012               	return		;funcret
  6827   002A92                     __end_of_atoi:
  6828                           	callstack 0
  6829                           
  6830 ;; *************** function _isspace *****************
  6831 ;; Defined at:
  6832 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  c               2    0[COMRAM] int 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;		None
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  2    0[COMRAM] int 
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, status,0
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6846 ;;      Params:         2       0       0       0       0       0       0       0       0
  6847 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6848 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6849 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6850 ;;Total ram usage:        5 bytes
  6851 ;; Hardware stack levels used: 1
  6852 ;; Hardware stack levels required when called: 1
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_atoi
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text23
  6861   003314                     __ptext23:
  6862                           	callstack 0
  6863   003314                     _isspace:
  6864                           	callstack 25
  6865   003314  0E01               	movlw	1
  6866   003316  6E05               	movwf	_isspace$1185^0,c
  6867   003318  0E20               	movlw	32
  6868   00331A  1801               	xorwf	isspace@c^0,w,c
  6869   00331C  1002               	iorwf	(isspace@c+1)^0,w,c
  6870   00331E  B4D8               	btfsc	status,2,c
  6871   003320  EF94  F019         	goto	u3331
  6872   003324  EF96  F019         	goto	u3330
  6873   003328                     u3331:
  6874   003328  EFA9  F019         	goto	l3207
  6875   00332C                     u3330:
  6876   00332C  0EF7               	movlw	247
  6877   00332E  2401               	addwf	isspace@c^0,w,c
  6878   003330  6E03               	movwf	??_isspace^0,c
  6879   003332  0EFF               	movlw	255
  6880   003334  2002               	addwfc	(isspace@c+1)^0,w,c
  6881   003336  6E04               	movwf	(??_isspace+1)^0,c
  6882   003338  5004               	movf	(??_isspace+1)^0,w,c
  6883   00333A  E109               	bnz	u3340
  6884   00333C  0E05               	movlw	5
  6885   00333E  5C03               	subwf	??_isspace^0,w,c
  6886   003340  A0D8               	btfss	status,0,c
  6887   003342  EFA5  F019         	goto	u3341
  6888   003346  EFA7  F019         	goto	u3340
  6889   00334A                     u3341:
  6890   00334A  EFA9  F019         	goto	l3207
  6891   00334E                     u3340:
  6892   00334E  0E00               	movlw	0
  6893   003350  6E05               	movwf	_isspace$1185^0,c
  6894   003352                     l3207:
  6895   003352  C005  F001         	movff	_isspace$1185,?_isspace
  6896   003356  6A02               	clrf	(?_isspace+1)^0,c
  6897   003358  0012               	return		;funcret
  6898   00335A                     __end_of_isspace:
  6899                           	callstack 0
  6900                           
  6901 ;; *************** function _isdigit *****************
  6902 ;; Defined at:
  6903 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;  c               2    0[COMRAM] int 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  2    0[COMRAM] int 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6917 ;;      Params:         2       0       0       0       0       0       0       0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6919 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6920 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6921 ;;Total ram usage:        4 bytes
  6922 ;; Hardware stack levels used: 1
  6923 ;; Hardware stack levels required when called: 1
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_vfpfcnvrt
  6928 ;;		_atoi
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           	psect	text24
  6933   00344E                     __ptext24:
  6934                           	callstack 0
  6935   00344E                     _isdigit:
  6936                           	callstack 26
  6937   00344E  0ED0               	movlw	208
  6938   003450  2401               	addwf	isdigit@c^0,w,c
  6939   003452  6E03               	movwf	??_isdigit^0,c
  6940   003454  0EFF               	movlw	255
  6941   003456  2002               	addwfc	(isdigit@c+1)^0,w,c
  6942   003458  6E04               	movwf	(??_isdigit+1)^0,c
  6943   00345A  5004               	movf	(??_isdigit+1)^0,w,c
  6944   00345C  E10A               	bnz	u3310
  6945   00345E  0E0A               	movlw	10
  6946   003460  5C03               	subwf	??_isdigit^0,w,c
  6947   003462  A0D8               	btfss	status,0,c
  6948   003464  EF36  F01A         	goto	u3311
  6949   003468  EF39  F01A         	goto	u3310
  6950   00346C                     u3311:
  6951   00346C  0E01               	movlw	1
  6952   00346E  EF3A  F01A         	goto	u3320
  6953   003472                     u3310:
  6954   003472  0E00               	movlw	0
  6955   003474                     u3320:
  6956   003474  6E01               	movwf	?_isdigit^0,c
  6957   003476  6A02               	clrf	(?_isdigit+1)^0,c
  6958   003478  0012               	return		;funcret
  6959   00347A                     __end_of_isdigit:
  6960                           	callstack 0
  6961                           
  6962 ;; *************** function ___wmul *****************
  6963 ;; Defined at:
  6964 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  multiplier      2    0[COMRAM] unsigned int 
  6967 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  product         2    4[COMRAM] unsigned int 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  2    0[COMRAM] unsigned int 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0, prodl, prodh
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6979 ;;      Params:         4       0       0       0       0       0       0       0       0
  6980 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6982 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6983 ;;Total ram usage:        6 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; Hardware stack levels required when called: 1
  6986 ;; This function calls:
  6987 ;;		Nothing
  6988 ;; This function is called by:
  6989 ;;		_atoi
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text25
  6994   0034A2                     __ptext25:
  6995                           	callstack 0
  6996   0034A2                     ___wmul:
  6997                           	callstack 25
  6998   0034A2  5001               	movf	___wmul@multiplier^0,w,c
  6999   0034A4  0203               	mulwf	___wmul@multiplicand^0,c
  7000   0034A6  CFF3 F005          	movff	prodl,___wmul@product
  7001   0034AA  CFF4 F006          	movff	prodh,___wmul@product+1
  7002   0034AE  5001               	movf	___wmul@multiplier^0,w,c
  7003   0034B0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7004   0034B2  50F3               	movf	243,w,c
  7005   0034B4  2606               	addwf	(___wmul@product+1)^0,f,c
  7006   0034B6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7007   0034B8  0203               	mulwf	___wmul@multiplicand^0,c
  7008   0034BA  50F3               	movf	243,w,c
  7009   0034BC  2606               	addwf	(___wmul@product+1)^0,f,c
  7010   0034BE  C005  F001         	movff	___wmul@product,?___wmul
  7011   0034C2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7012   0034C6  0012               	return		;funcret
  7013   0034C8                     __end_of___wmul:
  7014                           	callstack 0
  7015                           
  7016 ;; *************** function ___xxtofl *****************
  7017 ;; Defined at:
  7018 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  sign            1    wreg     unsigned char 
  7021 ;;  val             4    0[COMRAM] long 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  sign            1    8[COMRAM] unsigned char 
  7024 ;;  arg             4   10[COMRAM] unsigned long 
  7025 ;;  exp             1    9[COMRAM] unsigned char 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  4    0[COMRAM] unsigned char 
  7028 ;; Registers used:
  7029 ;;		wreg, status,2, status,0
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7035 ;;      Params:         4       0       0       0       0       0       0       0       0
  7036 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7037 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7038 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7039 ;;Total ram usage:       14 bytes
  7040 ;; Hardware stack levels used: 1
  7041 ;; Hardware stack levels required when called: 1
  7042 ;; This function calls:
  7043 ;;		Nothing
  7044 ;; This function is called by:
  7045 ;;		_main
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           	psect	text26
  7050   002794                     __ptext26:
  7051                           	callstack 0
  7052   002794                     ___xxtofl:
  7053                           	callstack 29
  7054                           
  7055                           ;incstack = 0
  7056                           ;___xxtofl@sign stored from wreg
  7057   002794  6E09               	movwf	___xxtofl@sign^0,c
  7058   002796  5009               	movf	___xxtofl@sign^0,w,c
  7059   002798  B4D8               	btfsc	status,2,c
  7060   00279A  EFD1  F013         	goto	u3931
  7061   00279E  EFD3  F013         	goto	u3930
  7062   0027A2                     u3931:
  7063   0027A2  EFF5  F013         	goto	l804
  7064   0027A6                     u3930:
  7065   0027A6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7066   0027A8  EFDA  F013         	goto	u3940
  7067   0027AC  EFD8  F013         	goto	u3941
  7068   0027B0                     u3941:
  7069   0027B0  EFF5  F013         	goto	l804
  7070   0027B4                     u3940:
  7071   0027B4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7072   0027B8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7073   0027BC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7074   0027C0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7075   0027C4  1E05               	comf	??___xxtofl^0,f,c
  7076   0027C6  1E06               	comf	(??___xxtofl+1)^0,f,c
  7077   0027C8  1E07               	comf	(??___xxtofl+2)^0,f,c
  7078   0027CA  1E08               	comf	(??___xxtofl+3)^0,f,c
  7079   0027CC  2A05               	incf	??___xxtofl^0,f,c
  7080   0027CE  0E00               	movlw	0
  7081   0027D0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7082   0027D2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7083   0027D4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7084   0027D6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7085   0027DA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7086   0027DE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7087   0027E2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7088   0027E6  EFFD  F013         	goto	l3753
  7089   0027EA                     l804:
  7090   0027EA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7091   0027EE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7092   0027F2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7093   0027F6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7094   0027FA                     l3753:
  7095   0027FA  5001               	movf	___xxtofl@val^0,w,c
  7096   0027FC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7097   0027FE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7098   002800  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7099   002802  A4D8               	btfss	status,2,c
  7100   002804  EF06  F014         	goto	u3951
  7101   002808  EF08  F014         	goto	u3950
  7102   00280C                     u3951:
  7103   00280C  EF12  F014         	goto	l3759
  7104   002810                     u3950:
  7105   002810  0E00               	movlw	0
  7106   002812  6E01               	movwf	?___xxtofl^0,c
  7107   002814  0E00               	movlw	0
  7108   002816  6E02               	movwf	(?___xxtofl+1)^0,c
  7109   002818  0E00               	movlw	0
  7110   00281A  6E03               	movwf	(?___xxtofl+2)^0,c
  7111   00281C  0E00               	movlw	0
  7112   00281E  6E04               	movwf	(?___xxtofl+3)^0,c
  7113   002820  EFA3  F014         	goto	l807
  7114   002824                     l3759:
  7115   002824  0E96               	movlw	150
  7116   002826  6E0A               	movwf	___xxtofl@exp^0,c
  7117   002828  EF1C  F014         	goto	l3763
  7118   00282C                     l3761:
  7119   00282C  2A0A               	incf	___xxtofl@exp^0,f,c
  7120   00282E  90D8               	bcf	status,0,c
  7121   002830  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7122   002832  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7123   002834  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7124   002836  320B               	rrcf	___xxtofl@arg^0,f,c
  7125   002838                     l3763:
  7126   002838  0E00               	movlw	0
  7127   00283A  140B               	andwf	___xxtofl@arg^0,w,c
  7128   00283C  6E05               	movwf	??___xxtofl^0,c
  7129   00283E  0E00               	movlw	0
  7130   002840  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7131   002842  6E06               	movwf	(??___xxtofl+1)^0,c
  7132   002844  0E00               	movlw	0
  7133   002846  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7134   002848  6E07               	movwf	(??___xxtofl+2)^0,c
  7135   00284A  0EFE               	movlw	254
  7136   00284C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7137   00284E  6E08               	movwf	(??___xxtofl+3)^0,c
  7138   002850  5005               	movf	??___xxtofl^0,w,c
  7139   002852  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7140   002854  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7141   002856  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7142   002858  A4D8               	btfss	status,2,c
  7143   00285A  EF31  F014         	goto	u3961
  7144   00285E  EF33  F014         	goto	u3960
  7145   002862                     u3961:
  7146   002862  EF16  F014         	goto	l3761
  7147   002866                     u3960:
  7148   002866  EF41  F014         	goto	l811
  7149   00286A                     l3765:
  7150   00286A  2A0A               	incf	___xxtofl@exp^0,f,c
  7151   00286C  0E01               	movlw	1
  7152   00286E  260B               	addwf	___xxtofl@arg^0,f,c
  7153   002870  0E00               	movlw	0
  7154   002872  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7155   002874  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7156   002876  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7157   002878  90D8               	bcf	status,0,c
  7158   00287A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7159   00287C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7160   00287E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7161   002880  320B               	rrcf	___xxtofl@arg^0,f,c
  7162   002882                     l811:
  7163   002882  0E00               	movlw	0
  7164   002884  140B               	andwf	___xxtofl@arg^0,w,c
  7165   002886  6E05               	movwf	??___xxtofl^0,c
  7166   002888  0E00               	movlw	0
  7167   00288A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7168   00288C  6E06               	movwf	(??___xxtofl+1)^0,c
  7169   00288E  0E00               	movlw	0
  7170   002890  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7171   002892  6E07               	movwf	(??___xxtofl+2)^0,c
  7172   002894  0EFF               	movlw	255
  7173   002896  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7174   002898  6E08               	movwf	(??___xxtofl+3)^0,c
  7175   00289A  5005               	movf	??___xxtofl^0,w,c
  7176   00289C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7177   00289E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7178   0028A0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7179   0028A2  A4D8               	btfss	status,2,c
  7180   0028A4  EF56  F014         	goto	u3971
  7181   0028A8  EF58  F014         	goto	u3970
  7182   0028AC                     u3971:
  7183   0028AC  EF35  F014         	goto	l3765
  7184   0028B0                     u3970:
  7185   0028B0  EF60  F014         	goto	l3773
  7186   0028B4                     l3771:
  7187   0028B4  060A               	decf	___xxtofl@exp^0,f,c
  7188   0028B6  90D8               	bcf	status,0,c
  7189   0028B8  360B               	rlcf	___xxtofl@arg^0,f,c
  7190   0028BA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7191   0028BC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7192   0028BE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7193   0028C0                     l3773:
  7194   0028C0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7195   0028C2  EF65  F014         	goto	u3981
  7196   0028C6  EF67  F014         	goto	u3980
  7197   0028CA                     u3981:
  7198   0028CA  EF6F  F014         	goto	l818
  7199   0028CE                     u3980:
  7200   0028CE  0E02               	movlw	2
  7201   0028D0  600A               	cpfslt	___xxtofl@exp^0,c
  7202   0028D2  EF6D  F014         	goto	u3991
  7203   0028D6  EF6F  F014         	goto	u3990
  7204   0028DA                     u3991:
  7205   0028DA  EF5A  F014         	goto	l3771
  7206   0028DE                     u3990:
  7207   0028DE                     l818:
  7208   0028DE  B00A               	btfsc	___xxtofl@exp^0,0,c
  7209   0028E0  EF74  F014         	goto	u4001
  7210   0028E4  EF76  F014         	goto	u4000
  7211   0028E8                     u4001:
  7212   0028E8  EF77  F014         	goto	l3779
  7213   0028EC                     u4000:
  7214   0028EC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7215   0028EE                     l3779:
  7216   0028EE  90D8               	bcf	status,0,c
  7217   0028F0  320A               	rrcf	___xxtofl@exp^0,f,c
  7218   0028F2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7219   0028F6  6A06               	clrf	(??___xxtofl+1)^0,c
  7220   0028F8  6A07               	clrf	(??___xxtofl+2)^0,c
  7221   0028FA  6A08               	clrf	(??___xxtofl+3)^0,c
  7222   0028FC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7223   002900  6A07               	clrf	(??___xxtofl+2)^0,c
  7224   002902  6A06               	clrf	(??___xxtofl+1)^0,c
  7225   002904  6A05               	clrf	??___xxtofl^0,c
  7226   002906  5005               	movf	??___xxtofl^0,w,c
  7227   002908  120B               	iorwf	___xxtofl@arg^0,f,c
  7228   00290A  5006               	movf	(??___xxtofl+1)^0,w,c
  7229   00290C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7230   00290E  5007               	movf	(??___xxtofl+2)^0,w,c
  7231   002910  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7232   002912  5008               	movf	(??___xxtofl+3)^0,w,c
  7233   002914  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7234   002916  5009               	movf	___xxtofl@sign^0,w,c
  7235   002918  B4D8               	btfsc	status,2,c
  7236   00291A  EF91  F014         	goto	u4011
  7237   00291E  EF93  F014         	goto	u4010
  7238   002922                     u4011:
  7239   002922  EF9B  F014         	goto	l3789
  7240   002926                     u4010:
  7241   002926  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7242   002928  EF9A  F014         	goto	u4020
  7243   00292C  EF98  F014         	goto	u4021
  7244   002930                     u4021:
  7245   002930  EF9B  F014         	goto	l3789
  7246   002934                     u4020:
  7247   002934  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7248   002936                     l3789:
  7249   002936  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7250   00293A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7251   00293E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7252   002942  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7253   002946                     l807:
  7254   002946  0012               	return		;funcret
  7255   002948                     __end_of___xxtofl:
  7256                           	callstack 0
  7257                           
  7258 ;; *************** function _TMR0_Init *****************
  7259 ;; Defined at:
  7260 ;;		line 123 in file "main.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;		None
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;		None
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      void 
  7267 ;; Registers used:
  7268 ;;		wreg, status,2
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7274 ;;      Params:         0       0       0       0       0       0       0       0       0
  7275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7277 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7278 ;;Total ram usage:        0 bytes
  7279 ;; Hardware stack levels used: 1
  7280 ;; Hardware stack levels required when called: 1
  7281 ;; This function calls:
  7282 ;;		Nothing
  7283 ;; This function is called by:
  7284 ;;		_main
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text27
  7289   0034E8                     __ptext27:
  7290                           	callstack 0
  7291   0034E8                     _TMR0_Init:
  7292                           	callstack 29
  7293   0034E8                     
  7294                           ;main.c: 124:     T0CONbits.T08BIT = 0;
  7295   0034E8  9CD5               	bcf	213,6,c	;volatile
  7296                           
  7297                           ;main.c: 125:     T0CONbits.T0CS = 0;
  7298   0034EA  9AD5               	bcf	213,5,c	;volatile
  7299                           
  7300                           ;main.c: 126:     T0CONbits.PSA = 0;
  7301   0034EC  96D5               	bcf	213,3,c	;volatile
  7302   0034EE                     
  7303                           ;main.c: 127:     T0CONbits.T0PS = 0b010;
  7304   0034EE  50D5               	movf	213,w,c	;volatile
  7305   0034F0  0BF8               	andlw	-8
  7306   0034F2  0902               	iorlw	2
  7307   0034F4  6ED5               	movwf	213,c	;volatile
  7308                           
  7309                           ;main.c: 129:     TMR0 = 0;
  7310   0034F6  0E00               	movlw	0
  7311   0034F8  6ED7               	movwf	215,c	;volatile
  7312   0034FA  0E00               	movlw	0
  7313   0034FC  6ED6               	movwf	214,c	;volatile
  7314   0034FE  0012               	return		;funcret
  7315   003500                     __end_of_TMR0_Init:
  7316                           	callstack 0
  7317                           
  7318 ;; *************** function _PORT_Init *****************
  7319 ;; Defined at:
  7320 ;;		line 104 in file "main.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;		None
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;		None
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  1    wreg      void 
  7327 ;; Registers used:
  7328 ;;		wreg, status,2
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7334 ;;      Params:         0       0       0       0       0       0       0       0       0
  7335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7337 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7338 ;;Total ram usage:        0 bytes
  7339 ;; Hardware stack levels used: 1
  7340 ;; Hardware stack levels required when called: 1
  7341 ;; This function calls:
  7342 ;;		Nothing
  7343 ;; This function is called by:
  7344 ;;		_main
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text28
  7349   003500                     __ptext28:
  7350                           	callstack 0
  7351   003500                     _PORT_Init:
  7352                           	callstack 29
  7353   003500                     
  7354                           ;main.c: 106:     ANSELD = 0x00;
  7355   003500  0E00               	movlw	0
  7356   003502  010F               	movlb	15	; () banked
  7357   003504  6F5E               	movwf	94,b	;volatile
  7358                           
  7359                           ;main.c: 107:     TRISD = 0b00000010;
  7360   003506  0E02               	movlw	2
  7361   003508  6E95               	movwf	149,c	;volatile
  7362                           
  7363                           ;main.c: 111:     ANSELB = 0x00;
  7364   00350A  0E00               	movlw	0
  7365   00350C  6F5C               	movwf	92,b	;volatile
  7366                           
  7367                           ;main.c: 112:     TRISB = 0b00001111;
  7368   00350E  0E0F               	movlw	15
  7369   003510  6E93               	movwf	147,c	;volatile
  7370   003512                     
  7371                           ; BSR set to: 15
  7372   003512  0012               	return		;funcret
  7373   003514                     __end_of_PORT_Init:
  7374                           	callstack 0
  7375                           
  7376 ;; *************** function _OSCILADOR_Init *****************
  7377 ;; Defined at:
  7378 ;;		line 5 in file "LibreriasPic/config_device.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;		None
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7392 ;;      Params:         0       0       0       0       0       0       0       0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7395 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7396 ;;Total ram usage:        0 bytes
  7397 ;; Hardware stack levels used: 1
  7398 ;; Hardware stack levels required when called: 1
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_main
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text29
  7407   003522                     __ptext29:
  7408                           	callstack 0
  7409   003522                     _OSCILADOR_Init:
  7410                           	callstack 29
  7411   003522                     
  7412                           ;LibreriasPic/config_device.c: 7:     OSCCONbits.IRCF = 0b111;
  7413   003522  0E70               	movlw	112
  7414   003524  12D3               	iorwf	211,f,c	;volatile
  7415   003526                     
  7416                           ;LibreriasPic/config_device.c: 8:     OSCCONbits.SCS0 = 0;
  7417   003526  90D3               	bcf	211,0,c	;volatile
  7418   003528                     
  7419                           ;LibreriasPic/config_device.c: 9:     OSCCONbits.SCS1 = 1;
  7420   003528  82D3               	bsf	211,1,c	;volatile
  7421   00352A  0012               	return		;funcret
  7422   00352C                     __end_of_OSCILADOR_Init:
  7423                           	callstack 0
  7424                           
  7425 ;; *************** function _Lcd_Write_String *****************
  7426 ;; Defined at:
  7427 ;;		line 113 in file "LibreriasPic/lcd_2x16.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  a               2    4[COMRAM] PTR unsigned char 
  7430 ;;		 -> strDistance(20), STR_1(12), 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;  i               2    8[COMRAM] int 
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      void 
  7435 ;; Registers used:
  7436 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7442 ;;      Params:         2       0       0       0       0       0       0       0       0
  7443 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7444 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7445 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7446 ;;Total ram usage:        6 bytes
  7447 ;; Hardware stack levels used: 1
  7448 ;; Hardware stack levels required when called: 3
  7449 ;; This function calls:
  7450 ;;		_Lcd_Write_Char
  7451 ;; This function is called by:
  7452 ;;		_main
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	text30
  7457   002FB8                     __ptext30:
  7458                           	callstack 0
  7459   002FB8                     _Lcd_Write_String:
  7460                           	callstack 27
  7461   002FB8                     
  7462                           ;LibreriasPic/lcd_2x16.c: 113: void Lcd_Write_String(unsigned char *a);LibreriasPic/lcd_
      +                          2x16.c: 114: {;LibreriasPic/lcd_2x16.c: 115:  int i;;LibreriasPic/lcd_2x16.c: 116:  for(
      +                          i=0;a[i]!='\0';i++)
  7463   002FB8  0E00               	movlw	0
  7464   002FBA  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  7465   002FBC  0E00               	movlw	0
  7466   002FBE  6E09               	movwf	Lcd_Write_String@i^0,c
  7467   002FC0  EFFC  F017         	goto	l3723
  7468   002FC4                     l3719:
  7469                           
  7470                           ;LibreriasPic/lcd_2x16.c: 117:     Lcd_Write_Char(a[i]);
  7471   002FC4  5009               	movf	Lcd_Write_String@i^0,w,c
  7472   002FC6  2405               	addwf	Lcd_Write_String@a^0,w,c
  7473   002FC8  6E07               	movwf	??_Lcd_Write_String^0,c
  7474   002FCA  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7475   002FCC  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7476   002FCE  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7477   002FD0  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7478   002FD4  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7479   002FD8  6AF8               	clrf	tblptru,c
  7480   002FDA  0E07               	movlw	(high __ramtop+-1)
  7481   002FDC  64F7               	cpfsgt	tblptrh,c
  7482   002FDE  D003               	bra	u3907
  7483   002FE0  0008               	tblrd		*
  7484   002FE2  50F5               	movf	tablat,w,c
  7485   002FE4  D005               	bra	u3900
  7486   002FE6                     u3907:
  7487   002FE6  CFF6 FFE1          	movff	tblptrl,fsr1l
  7488   002FEA  CFF7 FFE2          	movff	tblptrh,fsr1h
  7489   002FEE  50E7               	movf	indf1,w,c
  7490   002FF0                     u3900:
  7491   002FF0  EC0B  F01A         	call	_Lcd_Write_Char
  7492   002FF4  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  7493   002FF6  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  7494   002FF8                     l3723:
  7495   002FF8  5009               	movf	Lcd_Write_String@i^0,w,c
  7496   002FFA  2405               	addwf	Lcd_Write_String@a^0,w,c
  7497   002FFC  6E07               	movwf	??_Lcd_Write_String^0,c
  7498   002FFE  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7499   003000  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7500   003002  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7501   003004  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7502   003008  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7503   00300C  6AF8               	clrf	tblptru,c
  7504   00300E  0E07               	movlw	(high __ramtop+-1)
  7505   003010  64F7               	cpfsgt	tblptrh,c
  7506   003012  D003               	bra	u3917
  7507   003014  0008               	tblrd		*
  7508   003016  50F5               	movf	tablat,w,c
  7509   003018  D005               	bra	u3910
  7510   00301A                     u3917:
  7511   00301A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7512   00301E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7513   003022  50E7               	movf	indf1,w,c
  7514   003024                     u3910:
  7515   003024  0900               	iorlw	0
  7516   003026  A4D8               	btfss	status,2,c
  7517   003028  EF18  F018         	goto	u3921
  7518   00302C  EF1A  F018         	goto	u3920
  7519   003030                     u3921:
  7520   003030  EFE2  F017         	goto	l3719
  7521   003034                     u3920:
  7522   003034  0012               	return		;funcret
  7523   003036                     __end_of_Lcd_Write_String:
  7524                           	callstack 0
  7525                           
  7526 ;; *************** function _Lcd_Write_Char *****************
  7527 ;; Defined at:
  7528 ;;		line 96 in file "LibreriasPic/lcd_2x16.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;  a               1    wreg     unsigned char 
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;  a               1    3[COMRAM] unsigned char 
  7533 ;;  y               1    2[COMRAM] unsigned char 
  7534 ;;  temp            1    1[COMRAM] unsigned char 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  1    wreg      void 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0, cstack
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7544 ;;      Params:         0       0       0       0       0       0       0       0       0
  7545 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7547 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7548 ;;Total ram usage:        3 bytes
  7549 ;; Hardware stack levels used: 1
  7550 ;; Hardware stack levels required when called: 2
  7551 ;; This function calls:
  7552 ;;		_Lcd_Port
  7553 ;; This function is called by:
  7554 ;;		_Lcd_Write_String
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text31
  7559   003416                     __ptext31:
  7560                           	callstack 0
  7561   003416                     _Lcd_Write_Char:
  7562                           	callstack 27
  7563                           
  7564                           ;incstack = 0
  7565                           ;Lcd_Write_Char@a stored from wreg
  7566   003416  6E04               	movwf	Lcd_Write_Char@a^0,c
  7567   003418                     
  7568                           ;LibreriasPic/lcd_2x16.c: 96: void Lcd_Write_Char(unsigned char a);LibreriasPic/lcd_2x16
      +                          .c: 97: {;LibreriasPic/lcd_2x16.c: 98:    char temp,y;;LibreriasPic/lcd_2x16.c: 99:    t
      +                          emp = a&0x0F;
  7569   003418  5004               	movf	Lcd_Write_Char@a^0,w,c
  7570   00341A  0B0F               	andlw	15
  7571   00341C  6E02               	movwf	Lcd_Write_Char@temp^0,c
  7572                           
  7573                           ;LibreriasPic/lcd_2x16.c: 100:    y = a&0xF0;
  7574   00341E  5004               	movf	Lcd_Write_Char@a^0,w,c
  7575   003420  0BF0               	andlw	240
  7576   003422  6E03               	movwf	Lcd_Write_Char@y^0,c
  7577   003424                     
  7578                           ;LibreriasPic/lcd_2x16.c: 101:    LATD |= (1<<2);
  7579   003424  848C               	bsf	140,2,c	;volatile
  7580   003426                     
  7581                           ;LibreriasPic/lcd_2x16.c: 102:    Lcd_Port(y>>4);
  7582   003426  3803               	swapf	Lcd_Write_Char@y^0,w,c
  7583   003428  0B0F               	andlw	15
  7584   00342A  ECBF  F018         	call	_Lcd_Port
  7585   00342E                     
  7586                           ;LibreriasPic/lcd_2x16.c: 103:    LATD |= (1<<3);
  7587   00342E  868C               	bsf	140,3,c	;volatile
  7588   003430                     
  7589                           ;LibreriasPic/lcd_2x16.c: 104:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  7590   003430  0E35               	movlw	53
  7591   003432                     u4127:
  7592   003432  2EE8               	decfsz	wreg,f,c
  7593   003434  D7FE               	bra	u4127
  7594   003436  F000               	nop	
  7595   003438                     
  7596                           ;LibreriasPic/lcd_2x16.c: 105:    LATD &= ~(1<<3);
  7597   003438  968C               	bcf	140,3,c	;volatile
  7598                           
  7599                           ;LibreriasPic/lcd_2x16.c: 106:    Lcd_Port(temp);
  7600   00343A  5002               	movf	Lcd_Write_Char@temp^0,w,c
  7601   00343C  ECBF  F018         	call	_Lcd_Port
  7602   003440                     
  7603                           ;LibreriasPic/lcd_2x16.c: 107:    LATD |= (1<<3);
  7604   003440  868C               	bsf	140,3,c	;volatile
  7605   003442                     
  7606                           ;LibreriasPic/lcd_2x16.c: 108:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  7607   003442  0E35               	movlw	53
  7608   003444                     u4137:
  7609   003444  2EE8               	decfsz	wreg,f,c
  7610   003446  D7FE               	bra	u4137
  7611   003448  F000               	nop	
  7612   00344A                     
  7613                           ;LibreriasPic/lcd_2x16.c: 109:    LATD &= ~(1<<3);
  7614   00344A  968C               	bcf	140,3,c	;volatile
  7615   00344C  0012               	return		;funcret
  7616   00344E                     __end_of_Lcd_Write_Char:
  7617                           	callstack 0
  7618                           
  7619 ;; *************** function _Lcd_Set_Cursor *****************
  7620 ;; Defined at:
  7621 ;;		line 50 in file "LibreriasPic/lcd_2x16.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  a               1    wreg     unsigned char 
  7624 ;;  b               1    3[COMRAM] unsigned char 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  a               1    4[COMRAM] unsigned char 
  7627 ;;  temp            1    7[COMRAM] unsigned char 
  7628 ;;  y               1    6[COMRAM] unsigned char 
  7629 ;;  z               1    5[COMRAM] unsigned char 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0, cstack
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7639 ;;      Params:         1       0       0       0       0       0       0       0       0
  7640 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7642 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7643 ;;Total ram usage:        5 bytes
  7644 ;; Hardware stack levels used: 1
  7645 ;; Hardware stack levels required when called: 3
  7646 ;; This function calls:
  7647 ;;		_Lcd_Cmd
  7648 ;; This function is called by:
  7649 ;;		_main
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text32
  7654   003118                     __ptext32:
  7655                           	callstack 0
  7656   003118                     _Lcd_Set_Cursor:
  7657                           	callstack 27
  7658                           
  7659                           ;incstack = 0
  7660                           ;Lcd_Set_Cursor@a stored from wreg
  7661   003118  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  7662   00311A                     
  7663                           ;LibreriasPic/lcd_2x16.c: 50: void Lcd_Set_Cursor(unsigned char a, unsigned char b);Libr
      +                          eriasPic/lcd_2x16.c: 51: {;LibreriasPic/lcd_2x16.c: 52:  char temp,z,y;;LibreriasPic/lcd
      +                          _2x16.c: 53:  if(a == 1)
  7664   00311A  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  7665   00311C  A4D8               	btfss	status,2,c
  7666   00311E  EF93  F018         	goto	u3881
  7667   003122  EF95  F018         	goto	u3880
  7668   003126                     u3881:
  7669   003126  EFA6  F018         	goto	l3679
  7670   00312A                     u3880:
  7671   00312A                     
  7672                           ;LibreriasPic/lcd_2x16.c: 54:  {;LibreriasPic/lcd_2x16.c: 55:    temp = 0x80 + b - 1;
  7673   00312A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7674   00312C  0F7F               	addlw	127
  7675   00312E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7676                           
  7677                           ;LibreriasPic/lcd_2x16.c: 56:   z = temp>>4;
  7678   003130  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7679   003132  0B0F               	andlw	15
  7680   003134  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7681                           
  7682                           ;LibreriasPic/lcd_2x16.c: 57:   y = temp & 0x0F;
  7683   003136  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7684   003138  0B0F               	andlw	15
  7685   00313A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7686   00313C                     
  7687                           ;LibreriasPic/lcd_2x16.c: 58:   Lcd_Cmd(z);
  7688   00313C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7689   00313E  EC64  F01A         	call	_Lcd_Cmd
  7690   003142                     
  7691                           ;LibreriasPic/lcd_2x16.c: 59:   Lcd_Cmd(y);
  7692   003142  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7693   003144  EC64  F01A         	call	_Lcd_Cmd
  7694                           
  7695                           ;LibreriasPic/lcd_2x16.c: 60:  }
  7696   003148  EFBE  F018         	goto	l34
  7697   00314C                     l3679:
  7698   00314C  0E02               	movlw	2
  7699   00314E  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7700   003150  A4D8               	btfss	status,2,c
  7701   003152  EFAD  F018         	goto	u3891
  7702   003156  EFAF  F018         	goto	u3890
  7703   00315A                     u3891:
  7704   00315A  EFBE  F018         	goto	l34
  7705   00315E                     u3890:
  7706   00315E                     
  7707                           ;LibreriasPic/lcd_2x16.c: 62:  {;LibreriasPic/lcd_2x16.c: 63:   temp = 0xC0 + b - 1;
  7708   00315E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7709   003160  0FBF               	addlw	191
  7710   003162  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7711                           
  7712                           ;LibreriasPic/lcd_2x16.c: 64:   z = temp>>4;
  7713   003164  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7714   003166  0B0F               	andlw	15
  7715   003168  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7716                           
  7717                           ;LibreriasPic/lcd_2x16.c: 65:   y = temp & 0x0F;
  7718   00316A  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7719   00316C  0B0F               	andlw	15
  7720   00316E  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7721   003170                     
  7722                           ;LibreriasPic/lcd_2x16.c: 66:   Lcd_Cmd(z);
  7723   003170  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7724   003172  EC64  F01A         	call	_Lcd_Cmd
  7725   003176                     
  7726                           ;LibreriasPic/lcd_2x16.c: 67:   Lcd_Cmd(y);
  7727   003176  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7728   003178  EC64  F01A         	call	_Lcd_Cmd
  7729   00317C                     l34:
  7730   00317C  0012               	return		;funcret
  7731   00317E                     __end_of_Lcd_Set_Cursor:
  7732                           	callstack 0
  7733                           
  7734 ;; *************** function _Lcd_Init *****************
  7735 ;; Defined at:
  7736 ;;		line 72 in file "LibreriasPic/lcd_2x16.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;		None
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;		None
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      void 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7750 ;;      Params:         0       0       0       0       0       0       0       0       0
  7751 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7752 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7753 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7754 ;;Total ram usage:        1 bytes
  7755 ;; Hardware stack levels used: 1
  7756 ;; Hardware stack levels required when called: 3
  7757 ;; This function calls:
  7758 ;;		_Lcd_Cmd
  7759 ;;		_Lcd_Port
  7760 ;; This function is called by:
  7761 ;;		_main
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text33
  7766   003036                     __ptext33:
  7767                           	callstack 0
  7768   003036                     _Lcd_Init:
  7769                           	callstack 27
  7770   003036                     
  7771                           ;LibreriasPic/lcd_2x16.c: 75:  TRISD &= ~(0xF0);
  7772   003036  0E0F               	movlw	15
  7773   003038  1695               	andwf	149,f,c	;volatile
  7774                           
  7775                           ;LibreriasPic/lcd_2x16.c: 76:  TRISD &= ~((1<<3)|(1<<2));
  7776   00303A  0EF3               	movlw	243
  7777   00303C  1695               	andwf	149,f,c	;volatile
  7778   00303E                     
  7779                           ;LibreriasPic/lcd_2x16.c: 78:  Lcd_Port(0x00);
  7780   00303E  0E00               	movlw	0
  7781   003040  ECBF  F018         	call	_Lcd_Port
  7782   003044                     
  7783                           ;LibreriasPic/lcd_2x16.c: 79:  _delay((unsigned long)((20)*(16000000UL/4000.0)));
  7784   003044  0E68               	movlw	104
  7785   003046  6E04               	movwf	??_Lcd_Init^0,c
  7786   003048  0EE4               	movlw	228
  7787   00304A                     u4147:
  7788   00304A  2EE8               	decfsz	wreg,f,c
  7789   00304C  D7FE               	bra	u4147
  7790   00304E  2E04               	decfsz	??_Lcd_Init^0,f,c
  7791   003050  D7FC               	bra	u4147
  7792   003052  D000               	nop2	
  7793   003054                     
  7794                           ;LibreriasPic/lcd_2x16.c: 80:  Lcd_Cmd(0x03);
  7795   003054  0E03               	movlw	3
  7796   003056  EC64  F01A         	call	_Lcd_Cmd
  7797   00305A                     
  7798                           ;LibreriasPic/lcd_2x16.c: 81:  _delay((unsigned long)((5)*(16000000UL/4000.0)));
  7799   00305A  0E1A               	movlw	26
  7800   00305C  6E04               	movwf	??_Lcd_Init^0,c
  7801   00305E  0EF8               	movlw	248
  7802   003060                     u4157:
  7803   003060  2EE8               	decfsz	wreg,f,c
  7804   003062  D7FE               	bra	u4157
  7805   003064  2E04               	decfsz	??_Lcd_Init^0,f,c
  7806   003066  D7FC               	bra	u4157
  7807   003068  D000               	nop2	
  7808   00306A                     
  7809                           ;LibreriasPic/lcd_2x16.c: 82:  Lcd_Cmd(0x03);
  7810   00306A  0E03               	movlw	3
  7811   00306C  EC64  F01A         	call	_Lcd_Cmd
  7812   003070                     
  7813                           ;LibreriasPic/lcd_2x16.c: 83:  _delay((unsigned long)((11)*(16000000UL/4000.0)));
  7814   003070  0E3A               	movlw	58
  7815   003072  6E04               	movwf	??_Lcd_Init^0,c
  7816   003074  0E23               	movlw	35
  7817   003076                     u4167:
  7818   003076  2EE8               	decfsz	wreg,f,c
  7819   003078  D7FE               	bra	u4167
  7820   00307A  2E04               	decfsz	??_Lcd_Init^0,f,c
  7821   00307C  D7FC               	bra	u4167
  7822   00307E  F000               	nop	
  7823   003080                     
  7824                           ;LibreriasPic/lcd_2x16.c: 84:  Lcd_Cmd(0x03);
  7825   003080  0E03               	movlw	3
  7826   003082  EC64  F01A         	call	_Lcd_Cmd
  7827   003086                     
  7828                           ;LibreriasPic/lcd_2x16.c: 86:  Lcd_Cmd(0x02);
  7829   003086  0E02               	movlw	2
  7830   003088  EC64  F01A         	call	_Lcd_Cmd
  7831   00308C                     
  7832                           ;LibreriasPic/lcd_2x16.c: 87:  Lcd_Cmd(0x02);
  7833   00308C  0E02               	movlw	2
  7834   00308E  EC64  F01A         	call	_Lcd_Cmd
  7835   003092                     
  7836                           ;LibreriasPic/lcd_2x16.c: 88:  Lcd_Cmd(0x08);
  7837   003092  0E08               	movlw	8
  7838   003094  EC64  F01A         	call	_Lcd_Cmd
  7839   003098                     
  7840                           ;LibreriasPic/lcd_2x16.c: 89:  Lcd_Cmd(0x00);
  7841   003098  0E00               	movlw	0
  7842   00309A  EC64  F01A         	call	_Lcd_Cmd
  7843   00309E                     
  7844                           ;LibreriasPic/lcd_2x16.c: 90:  Lcd_Cmd(0x0C);
  7845   00309E  0E0C               	movlw	12
  7846   0030A0  EC64  F01A         	call	_Lcd_Cmd
  7847   0030A4                     
  7848                           ;LibreriasPic/lcd_2x16.c: 91:  Lcd_Cmd(0x00);
  7849   0030A4  0E00               	movlw	0
  7850   0030A6  EC64  F01A         	call	_Lcd_Cmd
  7851   0030AA                     
  7852                           ;LibreriasPic/lcd_2x16.c: 92:  Lcd_Cmd(0x06);
  7853   0030AA  0E06               	movlw	6
  7854   0030AC  EC64  F01A         	call	_Lcd_Cmd
  7855   0030B0  0012               	return		;funcret
  7856   0030B2                     __end_of_Lcd_Init:
  7857                           	callstack 0
  7858                           
  7859 ;; *************** function _Lcd_Clear *****************
  7860 ;; Defined at:
  7861 ;;		line 43 in file "LibreriasPic/lcd_2x16.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;		None
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;		None
  7866 ;; Return value:  Size  Location     Type
  7867 ;;                  1    wreg      void 
  7868 ;; Registers used:
  7869 ;;		wreg, status,2, status,0, cstack
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7875 ;;      Params:         0       0       0       0       0       0       0       0       0
  7876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7878 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7879 ;;Total ram usage:        0 bytes
  7880 ;; Hardware stack levels used: 1
  7881 ;; Hardware stack levels required when called: 3
  7882 ;; This function calls:
  7883 ;;		_Lcd_Cmd
  7884 ;; This function is called by:
  7885 ;;		_main
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text34
  7890   003514                     __ptext34:
  7891                           	callstack 0
  7892   003514                     _Lcd_Clear:
  7893                           	callstack 27
  7894   003514                     
  7895                           ;LibreriasPic/lcd_2x16.c: 45:  Lcd_Cmd(0);
  7896   003514  0E00               	movlw	0
  7897   003516  EC64  F01A         	call	_Lcd_Cmd
  7898                           
  7899                           ;LibreriasPic/lcd_2x16.c: 46:  Lcd_Cmd(1);
  7900   00351A  0E01               	movlw	1
  7901   00351C  EC64  F01A         	call	_Lcd_Cmd
  7902   003520  0012               	return		;funcret
  7903   003522                     __end_of_Lcd_Clear:
  7904                           	callstack 0
  7905                           
  7906 ;; *************** function _Lcd_Cmd *****************
  7907 ;; Defined at:
  7908 ;;		line 33 in file "LibreriasPic/lcd_2x16.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  a               1    wreg     unsigned char 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  a               1    2[COMRAM] unsigned char 
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  1    wreg      void 
  7915 ;; Registers used:
  7916 ;;		wreg, status,2, status,0, cstack
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7922 ;;      Params:         0       0       0       0       0       0       0       0       0
  7923 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7924 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7925 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7926 ;;Total ram usage:        2 bytes
  7927 ;; Hardware stack levels used: 1
  7928 ;; Hardware stack levels required when called: 2
  7929 ;; This function calls:
  7930 ;;		_Lcd_Port
  7931 ;; This function is called by:
  7932 ;;		_Lcd_Clear
  7933 ;;		_Lcd_Set_Cursor
  7934 ;;		_Lcd_Init
  7935 ;;		_Lcd_Shift_Right
  7936 ;;		_Lcd_Shift_Left
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           	psect	text35
  7941   0034C8                     __ptext35:
  7942                           	callstack 0
  7943   0034C8                     _Lcd_Cmd:
  7944                           	callstack 27
  7945                           
  7946                           ;incstack = 0
  7947                           ;Lcd_Cmd@a stored from wreg
  7948   0034C8  6E03               	movwf	Lcd_Cmd@a^0,c
  7949   0034CA                     
  7950                           ;LibreriasPic/lcd_2x16.c: 33: void Lcd_Cmd(unsigned char a);LibreriasPic/lcd_2x16.c: 34:
      +                           {;LibreriasPic/lcd_2x16.c: 35:  LATD &= ~(1<<2);
  7951   0034CA  948C               	bcf	140,2,c	;volatile
  7952   0034CC                     
  7953                           ;LibreriasPic/lcd_2x16.c: 36:  Lcd_Port(a);
  7954   0034CC  5003               	movf	Lcd_Cmd@a^0,w,c
  7955   0034CE  ECBF  F018         	call	_Lcd_Port
  7956   0034D2                     
  7957                           ;LibreriasPic/lcd_2x16.c: 37:  LATD |= (1<<3);
  7958   0034D2  868C               	bsf	140,3,c	;volatile
  7959   0034D4                     
  7960                           ;LibreriasPic/lcd_2x16.c: 38:     _delay((unsigned long)((4)*(16000000UL/4000.0)));
  7961   0034D4  0E15               	movlw	21
  7962   0034D6  6E02               	movwf	??_Lcd_Cmd^0,c
  7963   0034D8  0EC6               	movlw	198
  7964   0034DA                     u4177:
  7965   0034DA  2EE8               	decfsz	wreg,f,c
  7966   0034DC  D7FE               	bra	u4177
  7967   0034DE  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7968   0034E0  D7FC               	bra	u4177
  7969   0034E2  D000               	nop2	
  7970   0034E4                     
  7971                           ;LibreriasPic/lcd_2x16.c: 39:  LATD &= ~(1<<3);
  7972   0034E4  968C               	bcf	140,3,c	;volatile
  7973   0034E6  0012               	return		;funcret
  7974   0034E8                     __end_of_Lcd_Cmd:
  7975                           	callstack 0
  7976                           
  7977 ;; *************** function _Lcd_Port *****************
  7978 ;; Defined at:
  7979 ;;		line 5 in file "LibreriasPic/lcd_2x16.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  a               1    wreg     unsigned char 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;  a               1    0[COMRAM] unsigned char 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      void 
  7986 ;; Registers used:
  7987 ;;		wreg, status,2, status,0
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7993 ;;      Params:         0       0       0       0       0       0       0       0       0
  7994 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7995 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7996 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7997 ;;Total ram usage:        1 bytes
  7998 ;; Hardware stack levels used: 1
  7999 ;; Hardware stack levels required when called: 1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_Lcd_Cmd
  8004 ;;		_Lcd_Init
  8005 ;;		_Lcd_Write_Char
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           	psect	text36
  8010   00317E                     __ptext36:
  8011                           	callstack 0
  8012   00317E                     _Lcd_Port:
  8013                           	callstack 27
  8014                           
  8015                           ;incstack = 0
  8016                           ;Lcd_Port@a stored from wreg
  8017   00317E  6E01               	movwf	Lcd_Port@a^0,c
  8018   003180                     
  8019                           ;LibreriasPic/lcd_2x16.c: 5: void Lcd_Port(unsigned char a);LibreriasPic/lcd_2x16.c: 6: 
      +                          {;LibreriasPic/lcd_2x16.c: 7:  if(a & 1)
  8020   003180  A001               	btfss	Lcd_Port@a^0,0,c
  8021   003182  EFC5  F018         	goto	u3741
  8022   003186  EFC7  F018         	goto	u3740
  8023   00318A                     u3741:
  8024   00318A  EFCA  F018         	goto	l3481
  8025   00318E                     u3740:
  8026   00318E                     
  8027                           ;LibreriasPic/lcd_2x16.c: 9:   LATD |= (1<<4);
  8028   00318E  888C               	bsf	140,4,c	;volatile
  8029   003190  EFCB  F018         	goto	l3483
  8030   003194                     l3481:
  8031                           
  8032                           ;LibreriasPic/lcd_2x16.c: 12:   LATD &= ~(1<<4);
  8033   003194  988C               	bcf	140,4,c	;volatile
  8034   003196                     l3483:
  8035                           
  8036                           ;LibreriasPic/lcd_2x16.c: 13:  if(a & 2)
  8037   003196  A201               	btfss	Lcd_Port@a^0,1,c
  8038   003198  EFD0  F018         	goto	u3751
  8039   00319C  EFD2  F018         	goto	u3750
  8040   0031A0                     u3751:
  8041   0031A0  EFD5  F018         	goto	l3487
  8042   0031A4                     u3750:
  8043   0031A4                     
  8044                           ;LibreriasPic/lcd_2x16.c: 15:   LATD |= (1<<5);
  8045   0031A4  8A8C               	bsf	140,5,c	;volatile
  8046   0031A6  EFD6  F018         	goto	l3489
  8047   0031AA                     l3487:
  8048                           
  8049                           ;LibreriasPic/lcd_2x16.c: 18:   LATD &= ~(1<<5);
  8050   0031AA  9A8C               	bcf	140,5,c	;volatile
  8051   0031AC                     l3489:
  8052                           
  8053                           ;LibreriasPic/lcd_2x16.c: 19:  if(a & 4)
  8054   0031AC  A401               	btfss	Lcd_Port@a^0,2,c
  8055   0031AE  EFDB  F018         	goto	u3761
  8056   0031B2  EFDD  F018         	goto	u3760
  8057   0031B6                     u3761:
  8058   0031B6  EFE0  F018         	goto	l3493
  8059   0031BA                     u3760:
  8060   0031BA                     
  8061                           ;LibreriasPic/lcd_2x16.c: 21:   LATD |= (1<<6);
  8062   0031BA  8C8C               	bsf	140,6,c	;volatile
  8063   0031BC  EFE1  F018         	goto	l3495
  8064   0031C0                     l3493:
  8065                           
  8066                           ;LibreriasPic/lcd_2x16.c: 24:   LATD &= ~(1<<6);
  8067   0031C0  9C8C               	bcf	140,6,c	;volatile
  8068   0031C2                     l3495:
  8069                           
  8070                           ;LibreriasPic/lcd_2x16.c: 25:  if(a & 8)
  8071   0031C2  A601               	btfss	Lcd_Port@a^0,3,c
  8072   0031C4  EFE6  F018         	goto	u3771
  8073   0031C8  EFE8  F018         	goto	u3770
  8074   0031CC                     u3771:
  8075   0031CC  EFEB  F018         	goto	l3499
  8076   0031D0                     u3770:
  8077   0031D0                     
  8078                           ;LibreriasPic/lcd_2x16.c: 27:   LATD |= (1<<7);
  8079   0031D0  8E8C               	bsf	140,7,c	;volatile
  8080   0031D2  EFEC  F018         	goto	l22
  8081   0031D6                     l3499:
  8082                           
  8083                           ;LibreriasPic/lcd_2x16.c: 30:   LATD &= ~(1<<7);
  8084   0031D6  9E8C               	bcf	140,7,c	;volatile
  8085   0031D8                     l22:
  8086   0031D8  0012               	return		;funcret
  8087   0031DA                     __end_of_Lcd_Port:
  8088                           	callstack 0
  8089                           
  8090 ;; *************** function _INTERRUPT_INTx_Config *****************
  8091 ;; Defined at:
  8092 ;;		line 141 in file "main.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;		None
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      void 
  8099 ;; Registers used:
  8100 ;;		None
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8106 ;;      Params:         0       0       0       0       0       0       0       0       0
  8107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8109 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8110 ;;Total ram usage:        0 bytes
  8111 ;; Hardware stack levels used: 1
  8112 ;; Hardware stack levels required when called: 1
  8113 ;; This function calls:
  8114 ;;		Nothing
  8115 ;; This function is called by:
  8116 ;;		_main
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text37
  8121   00352C                     __ptext37:
  8122                           	callstack 0
  8123   00352C                     _INTERRUPT_INTx_Config:
  8124                           	callstack 29
  8125   00352C                     
  8126                           ;main.c: 142:     INTCONbits.INT0IE = 1;
  8127   00352C  88F2               	bsf	242,4,c	;volatile
  8128                           
  8129                           ;main.c: 143:     INTCONbits.INT0IF = 0;
  8130   00352E  92F2               	bcf	242,1,c	;volatile
  8131                           
  8132                           ;main.c: 145:     INTCON2bits.INTEDG0 = 0;
  8133   003530  9CF1               	bcf	241,6,c	;volatile
  8134   003532  0012               	return		;funcret
  8135   003534                     __end_of_INTERRUPT_INTx_Config:
  8136                           	callstack 0
  8137                           
  8138 ;; *************** function _INTERRUPT_Global_Config *****************
  8139 ;; Defined at:
  8140 ;;		line 133 in file "main.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;		None
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;		None
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		None
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8154 ;;      Params:         0       0       0       0       0       0       0       0       0
  8155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8157 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8158 ;;Total ram usage:        0 bytes
  8159 ;; Hardware stack levels used: 1
  8160 ;; Hardware stack levels required when called: 1
  8161 ;; This function calls:
  8162 ;;		Nothing
  8163 ;; This function is called by:
  8164 ;;		_main
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text38
  8169   003534                     __ptext38:
  8170                           	callstack 0
  8171   003534                     _INTERRUPT_Global_Config:
  8172                           	callstack 29
  8173   003534                     
  8174                           ;main.c: 135:     RCONbits.IPEN = 0;
  8175   003534  9ED0               	bcf	208,7,c	;volatile
  8176                           
  8177                           ;main.c: 138:     INTCONbits.GIE = 1;
  8178   003536  8EF2               	bsf	242,7,c	;volatile
  8179   003538  0012               	return		;funcret
  8180   00353A                     __end_of_INTERRUPT_Global_Config:
  8181                           	callstack 0
  8182                           
  8183 ;; *************** function _RutinaServicioInterrupcion_ISR *****************
  8184 ;; Defined at:
  8185 ;;		line 93 in file "main.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		wreg, status,2
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8199 ;;      Params:         0       0       0       0       0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8202 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8203 ;;Total ram usage:        0 bytes
  8204 ;; Hardware stack levels used: 1
  8205 ;; This function calls:
  8206 ;;		Nothing
  8207 ;; This function is called by:
  8208 ;;		Interrupt level 2
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           	psect	intcode
  8213   000008                     __pintcode:
  8214                           	callstack 0
  8215   000008                     _RutinaServicioInterrupcion_ISR:
  8216                           	callstack 22
  8217                           
  8218                           ;incstack = 0
  8219   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8220   00000A                     
  8221                           ;main.c: 95:     if ( INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1 ) {
  8222   00000A  A8F2               	btfss	242,4,c	;volatile
  8223   00000C  EF0A  F000         	goto	i2u407_41
  8224   000010  EF0C  F000         	goto	i2u407_40
  8225   000014                     i2u407_41:
  8226   000014  EF17  F000         	goto	i2l134
  8227   000018                     i2u407_40:
  8228   000018  A2F2               	btfss	242,1,c	;volatile
  8229   00001A  EF11  F000         	goto	i2u408_41
  8230   00001E  EF13  F000         	goto	i2u408_40
  8231   000022                     i2u408_41:
  8232   000022  EF17  F000         	goto	i2l134
  8233   000026                     i2u408_40:
  8234   000026                     
  8235                           ;main.c: 97:         is_danger = 0;
  8236   000026  0E00               	movlw	0
  8237   000028  0100               	movlb	0	; () banked
  8238   00002A  6FD3               	movwf	_is_danger& (0+255),b	;volatile
  8239   00002C                     
  8240                           ; BSR set to: 0
  8241                           ;main.c: 99:         INTCONbits.INT0IF = 0;
  8242   00002C  92F2               	bcf	242,1,c	;volatile
  8243   00002E                     i2l134:
  8244   00002E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8245   000030  0011               	retfie		f
  8246   000032                     __end_of_RutinaServicioInterrupcion_ISR:
  8247                           	callstack 0
  8248                           
  8249                           	psect	rparam
  8250   000000                     
  8251                           	psect	temp
  8252   00005F                     btemp:
  8253                           	callstack 0
  8254   00005F                     	ds	1
  8255   000000                     int$flags	set	btemp
  8256   000000                     wtemp8	set	btemp+1
  8257   000000                     ttemp5	set	btemp+1
  8258   000000                     ttemp6	set	btemp+4
  8259   000000                     ttemp7	set	btemp+8
  8260                           
  8261                           	psect	idloc
  8262                           
  8263                           ;Config register IDLOC0 @ 0x200000
  8264                           ;	unspecified, using default values
  8265   200000                     	org	2097152
  8266   200000  FF                 	db	255
  8267                           
  8268                           ;Config register IDLOC1 @ 0x200001
  8269                           ;	unspecified, using default values
  8270   200001                     	org	2097153
  8271   200001  FF                 	db	255
  8272                           
  8273                           ;Config register IDLOC2 @ 0x200002
  8274                           ;	unspecified, using default values
  8275   200002                     	org	2097154
  8276   200002  FF                 	db	255
  8277                           
  8278                           ;Config register IDLOC3 @ 0x200003
  8279                           ;	unspecified, using default values
  8280   200003                     	org	2097155
  8281   200003  FF                 	db	255
  8282                           
  8283                           ;Config register IDLOC4 @ 0x200004
  8284                           ;	unspecified, using default values
  8285   200004                     	org	2097156
  8286   200004  FF                 	db	255
  8287                           
  8288                           ;Config register IDLOC5 @ 0x200005
  8289                           ;	unspecified, using default values
  8290   200005                     	org	2097157
  8291   200005  FF                 	db	255
  8292                           
  8293                           ;Config register IDLOC6 @ 0x200006
  8294                           ;	unspecified, using default values
  8295   200006                     	org	2097158
  8296   200006  FF                 	db	255
  8297                           
  8298                           ;Config register IDLOC7 @ 0x200007
  8299                           ;	unspecified, using default values
  8300   200007                     	org	2097159
  8301   200007  FF                 	db	255
  8302                           
  8303                           	psect	config
  8304                           
  8305                           ;Config register CONFIG1L @ 0x300000
  8306                           ;	PLL Selection
  8307                           ;	PLLSEL = PLL4X, 4x clock multiplier
  8308                           ;	PLL Enable Configuration bit
  8309                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  8310                           ;	CPU System Clock Postscaler
  8311                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  8312                           ;	Low Speed USB mode with 48 MHz system clock
  8313                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  8314   300000                     	org	3145728
  8315   300000  00                 	db	0
  8316                           
  8317                           ;Config register CONFIG1H @ 0x300001
  8318                           ;	Oscillator Selection
  8319                           ;	FOSC = INTOSCIO, Internal oscillator
  8320                           ;	Primary Oscillator Shutdown
  8321                           ;	PCLKEN = ON, Primary oscillator enabled
  8322                           ;	Fail-Safe Clock Monitor
  8323                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8324                           ;	Internal/External Oscillator Switchover
  8325                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8326   300001                     	org	3145729
  8327   300001  28                 	db	40
  8328                           
  8329                           ;Config register CONFIG2L @ 0x300002
  8330                           ;	Power-up Timer Enable
  8331                           ;	nPWRTEN = ON, Power up timer enabled
  8332                           ;	Brown-out Reset Enable
  8333                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  8334                           ;	Brown-out Reset Voltage
  8335                           ;	BORV = 190, BOR set to 1.9V nominal
  8336                           ;	Low-Power Brown-out Reset
  8337                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  8338   300002                     	org	3145730
  8339   300002  5E                 	db	94
  8340                           
  8341                           ;Config register CONFIG2H @ 0x300003
  8342                           ;	Watchdog Timer Enable bits
  8343                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  8344                           ;	Watchdog Timer Postscaler
  8345                           ;	WDTPS = 32768, 1:32768
  8346   300003                     	org	3145731
  8347   300003  3C                 	db	60
  8348                           
  8349                           ; Padding undefined space
  8350   300004                     	org	3145732
  8351   300004  FF                 	db	255
  8352                           
  8353                           ;Config register CONFIG3H @ 0x300005
  8354                           ;	CCP2 MUX bit
  8355                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  8356                           ;	PORTB A/D Enable bit
  8357                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  8358                           ;	Timer3 Clock Input MUX bit
  8359                           ;	T3CMX = RC0, T3CKI function is on RC0
  8360                           ;	SDO Output MUX bit
  8361                           ;	SDOMX = RB3, SDO function is on RB3
  8362                           ;	Master Clear Reset Pin Enable
  8363                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  8364   300005                     	org	3145733
  8365   300005  D3                 	db	211
  8366                           
  8367                           ;Config register CONFIG4L @ 0x300006
  8368                           ;	Stack Full/Underflow Reset
  8369                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8370                           ;	Single-Supply ICSP Enable bit
  8371                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  8372                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  8373                           ;	ICPRT = OFF, ICPORT disabled
  8374                           ;	Extended Instruction Set Enable bit
  8375                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  8376                           ;	Background Debugger Enable bit
  8377                           ;	DEBUG = 0x1, unprogrammed default
  8378   300006                     	org	3145734
  8379   300006  85                 	db	133
  8380                           
  8381                           ; Padding undefined space
  8382   300007                     	org	3145735
  8383   300007  FF                 	db	255
  8384                           
  8385                           ;Config register CONFIG5L @ 0x300008
  8386                           ;	Block 0 Code Protect
  8387                           ;	CP0 = OFF, Block 0 is not code-protected
  8388                           ;	Block 1 Code Protect
  8389                           ;	CP1 = OFF, Block 1 is not code-protected
  8390                           ;	Block 2 Code Protect
  8391                           ;	CP2 = OFF, Block 2 is not code-protected
  8392                           ;	Block 3 Code Protect
  8393                           ;	CP3 = OFF, Block 3 is not code-protected
  8394   300008                     	org	3145736
  8395   300008  0F                 	db	15
  8396                           
  8397                           ;Config register CONFIG5H @ 0x300009
  8398                           ;	Boot Block Code Protect
  8399                           ;	CPB = OFF, Boot block is not code-protected
  8400                           ;	Data EEPROM Code Protect
  8401                           ;	CPD = OFF, Data EEPROM is not code-protected
  8402   300009                     	org	3145737
  8403   300009  C0                 	db	192
  8404                           
  8405                           ;Config register CONFIG6L @ 0x30000A
  8406                           ;	Block 0 Write Protect
  8407                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  8408                           ;	Block 1 Write Protect
  8409                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  8410                           ;	Block 2 Write Protect
  8411                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  8412                           ;	Block 3 Write Protect
  8413                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  8414   30000A                     	org	3145738
  8415   30000A  0F                 	db	15
  8416                           
  8417                           ;Config register CONFIG6H @ 0x30000B
  8418                           ;	Configuration Registers Write Protect
  8419                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8420                           ;	Boot Block Write Protect
  8421                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  8422                           ;	Data EEPROM Write Protect
  8423                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8424   30000B                     	org	3145739
  8425   30000B  E0                 	db	224
  8426                           
  8427                           ;Config register CONFIG7L @ 0x30000C
  8428                           ;	Block 0 Table Read Protect
  8429                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  8430                           ;	Block 1 Table Read Protect
  8431                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  8432                           ;	Block 2 Table Read Protect
  8433                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  8434                           ;	Block 3 Table Read Protect
  8435                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  8436   30000C                     	org	3145740
  8437   30000C  0F                 	db	15
  8438                           
  8439                           ;Config register CONFIG7H @ 0x30000D
  8440                           ;	Boot Block Table Read Protect
  8441                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  8442   30000D                     	org	3145741
  8443   30000D  40                 	db	64
  8444                           tosu	equ	0xFFF
  8445                           tosh	equ	0xFFE
  8446                           tosl	equ	0xFFD
  8447                           stkptr	equ	0xFFC
  8448                           pclatu	equ	0xFFB
  8449                           pclath	equ	0xFFA
  8450                           pcl	equ	0xFF9
  8451                           tblptru	equ	0xFF8
  8452                           tblptrh	equ	0xFF7
  8453                           tblptrl	equ	0xFF6
  8454                           tablat	equ	0xFF5
  8455                           prodh	equ	0xFF4
  8456                           prodl	equ	0xFF3
  8457                           indf0	equ	0xFEF
  8458                           postinc0	equ	0xFEE
  8459                           postdec0	equ	0xFED
  8460                           preinc0	equ	0xFEC
  8461                           plusw0	equ	0xFEB
  8462                           fsr0h	equ	0xFEA
  8463                           fsr0l	equ	0xFE9
  8464                           wreg	equ	0xFE8
  8465                           indf1	equ	0xFE7
  8466                           postinc1	equ	0xFE6
  8467                           postdec1	equ	0xFE5
  8468                           preinc1	equ	0xFE4
  8469                           plusw1	equ	0xFE3
  8470                           fsr1h	equ	0xFE2
  8471                           fsr1l	equ	0xFE1
  8472                           bsr	equ	0xFE0
  8473                           indf2	equ	0xFDF
  8474                           postinc2	equ	0xFDE
  8475                           postdec2	equ	0xFDD
  8476                           preinc2	equ	0xFDC
  8477                           plusw2	equ	0xFDB
  8478                           fsr2h	equ	0xFDA
  8479                           fsr2l	equ	0xFD9
  8480                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     97     140
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1048$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> strDistance(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S969$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S969$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> strDistance(BANK0[20]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _RutinaServicioInterrupcion_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RutinaServicioInterrupcion_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31396
                                             95 BANK0      2     2      0
            _INTERRUPT_Global_Config
              _INTERRUPT_INTx_Config
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                     _OSCILADOR_Init
                          _PORT_Init
                          _TMR0_Init
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   23677
                                             74 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   23320
                                             66 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6   22948
                                             44 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19648
                                             84 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2651
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2311
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1232
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     313
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILADOR_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     420
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     532
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_INTx_Config                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_Global_Config                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _RutinaServicioInterrupcion_ISR                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INTERRUPT_Global_Config
   _INTERRUPT_INTx_Config
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _OSCILADOR_Init
   _PORT_Init
   _TMR0_Init
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _isdigit

 _RutinaServicioInterrupcion_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITBIGSFRlhhl       3A      0       0      24        0.0%
BITBIGSFRllllh      24      0       0      29        0.0%
BITBIGSFRhhl        19      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllllll      9      0       0      31        0.0%
BITBIGSFRlllh        6      0       0      28        0.0%
BITBIGSFRlhll        6      0       0      26        0.0%
BITBIGSFRlhhh        2      0       0      23        0.0%
BITBIGSFRlhlh        1      0       0      25        0.0%
BITBIGSFRlllllh      1      0       0      30        0.0%
BITBIGSFRllh         1      0       0      27        0.0%
BITBIGSFRhl          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13A      32        0.0%
DATA                 0      0     13A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 07 17:47:30 2023

                                     l5 352A                            ___fldiv@aexp 0040  
                          ___fldiv@bexp 003F                            ___fldiv@sign 0038  
                                    l22 31D8                                      l40 344C  
                                    l25 34E6                                      l34 317C  
                                    l28 3520                                      l37 30B0  
                                    l46 3034                     ___wmul@multiplicand 0003  
                                   l121 23CC                                     l122 2574  
                                   l140 34FE                                     l124 2528  
                                   l116 23AE                                     l118 23BC  
                                   l143 3538                                     l119 23BE  
                                   l137 3512                                     l146 3532  
                                   l149 34C6                                     l414 2C54  
                                   l423 3414                                     l408 2FB6  
                                   l419 2C9A                                     l446 2B96  
                                   l703 165A                                     l704 1648  
                                   l811 2882                                     l731 236C  
                                   l804 27EA                                     l733 21CC  
                                   l742 2212                                     l807 2946  
                                   l719 3312                                     l911 0FF8  
                                   l744 228A                                     l736 2190  
                                   l745 2278                                     l818 28DE  
                                   l770 1E64                                     l763 1C6E  
                                   l827 322A                                     l780 1F94  
                                   l772 1EDC                                     l773 1ECA  
                                   l677 1470                                     l694 158A  
                                   l686 1740                                     l678 145E  
                                   l862 2EA8                                     l767 1FD2  
                                   l679 1424                                     l865 2EEA  
                                   l881 0BB0                                     l867 2F0C  
                                   l883 09F6                                     l878 1280  
                                   l974 327C                                     l967 1BA8  
                                   l984 2D98                                     _pad 2E64  
       __end_of_INTERRUPT_Global_Config 353A                                     wreg 000FE8  
                          ___flmul@aexp 0020                            ___flmul@bexp 0021  
                          ___flmul@sign 001B                            ___flmul@temp 0026  
                          ___flmul@prod 0022                            ___fltol@exp1 000A  
                                  l1010 2A90                                    l1007 2A88  
                                  l1016 2792                                    l1041 3106  
                                  l1026 3478                                    l1034 3358  
                                  l1050 32CC                                    l1019 26D6  
                                  l1044 3116                                    l1062 2E62  
                                  l1070 339C                                    l3001 1FB6  
                                  l1073 353A                                    l3003 1FB8  
                                  l3011 32CE                                    l3021 2F4C  
                                  l3005 1FBE                                    l3013 32DE  
                                  l3101 2B76                                    l3023 2F7A  
                                  l3007 1FC2                                    l3103 2B86  
                                  l3111 2E86                                    l1079 33DC  
                                  l3201 3318                                    l4001 29DE  
                                  l3025 2F8A                                    l3017 2F0E  
                                  l3041 2C14                                    l3033 2B98  
                                  l3121 2ECC                                    l3113 2E94  
                                  l3203 332C                                    l3027 2FAE  
                                  l3019 2F3C                                    l3051 2C98  
                                  l3043 2C22                                    l3035 2BC6  
                                  l3131 2D22                                    l3123 2EF8  
                                  l3115 2EA0                                    l3107 2E64  
                                  l3211 081E                                    l3205 334E  
                                  l3029 2FB4                                    l3045 2C34  
                                  l3037 2BD6                                    l3133 2D2E  
                                  l3125 2C9C                                    l3117 2EB4  
                                  l3109 2E72                                    l3301 0BC8  
                                  l3221 086A                                    l3213 0824  
                                  l3207 3352                                    l3047 2C42  
                                  l3039 2C04                                    l3055 33DE  
                                  l3071 2AE6                                    l3063 2A92  
                                  l3143 2D90                                    l3127 2CBC  
                                  l3151 30B2                                    l3119 2EC8  
                                  l3311 0BFA                                    l3303 0BD4  
                                  l3231 08A8                                    l3223 0874  
                                  l3215 0834                                    l3049 2C92  
                                  l3057 33F4                                    l2601 13BA  
                                  l3073 2AE8                                    l3065 2AA8  
                                  l3129 2CFA                                    l3137 2D3A  
                                  l3161 260C                                    l3153 30D0  
                                  l2521 2DE6                                    l2513 2D9A  
                                  l3401 1088                                    l3321 0C42  
                                  l3313 0C08                                    l3305 0BDC  
                                  l3241 08F0                                    l3233 08B0  
                                  l3225 087C                                    l3217 0842  
                                  l3059 3404                                    l2611 140C  
                                  l2603 13BE                                    l2531 129C  
                                  l3075 2AF8                                    l3139 2D4C  
                                  l3163 261A                                    l3171 26FA  
                                  l3155 2582                                    l2523 2E1C  
                                  l2515 2DAC                                    l3147 339E  
                                  l3411 113E                                    l3403 10E0  
                                  l3331 0D56                                    l3323 0C52  
                                  l3315 0C20                                    l3307 0BE4  
                                  l3243 08F6                                    l3227 088C  
                                  l3235 08B4                                    l3219 0846  
                                  l2701 1684                                    l2621 1450  
                                  l2613 141C                                    l2605 13C2  
                                  l2541 12D0                                    l2533 129E  
                                  l3085 2B22                                    l3077 2AFC  
                                  l3069 2ABC                                    l3173 2736  
                                  l3157 25A2                                    l2517 2DBE  
                                  l3149 33AE                                    l3421 11B0  
                                  l3413 115A                                    l3405 1114  
                                  l3341 0DF6                                    l3325 0C66  
                                  l3333 0D5C                                    l3317 0C32  
                                  l3309 0BE8                                    l3261 0982  
                                  l3245 08FE                                    l3237 08DA  
                                  l3253 0940                                    l3229 089C  
                                  l3501 1742                                    l2711 1700  
                                  l2703 16BE                                    l2623 1452  
                                  l2615 1432                                    l2607 13C6  
                                  l2551 1302                                    l2535 12AE  
                                  l2543 12D8                                    l2527 1282  
                                  l3095 2B4A                                    l3087 2B2C  
                                  l3079 2B0A                                    l3175 274A  
                                  l3167 268A                                    l3159 25F8  
                                  l3191 32AE                                    l3183 327E  
                                  l2519 2DC8                                    l3431 11F6  
                                  l3423 11C8                                    l3415 1162  
                                  l3407 111C                                    l3351 0ED2  
                                  l3343 0E28                                    l3335 0D7A  
                                  l3327 0CCA                                    l3319 0C3A  
                                  l3263 098A                                    l3255 0966  
                                  l3271 09A6                                    l3247 0916  
                                  l3239 08EC                                    l3511 1792  
                                  l3503 1766                                    l2801 210A  
                                  l2721 1720                                    l2713 1704  
                                  l2705 16C0                                    l2641 14DA  
                                  l2633 14A2                                    l2625 145C  
                                  l2617 143E                                    l2609 13F0  
                                  l2561 1338                                    l2553 1308  
                                  l2545 12E8                                    l2537 12BE  
                                  l2529 128E                                    l3097 2B56  
                                  l3089 2B36                                    l3177 2772  
                                  l3169 26C6                                    l3185 3292  
                                  l3193 32B2                                    l3441 1260  
                                  l3433 1214                                    l3417 1172  
                                  l3409 1120                                    l3361 0F34  
                                  l3353 0ED8                                    l3345 0E38  
                                  l3337 0DAE                                    l3329 0D22  
                                  l3281 0A40                                    l3273 09C0  
                                  l3257 0978                                    l3249 0920  
                                  l3513 1794                                    l3521 17E6  
                                  l3505 1774                                    l3195 344E  
                                  l3451 2960                                    l2811 215C  
                                  l2803 2124                                    l2723 172E  
                                  l2715 1712                                    l2707 16D0  
                                  l2643 14DE                                    l2635 14B2  
                                  l2627 147E                                    l2651 14FE  
                                  l2619 1442                                    l2571 1374  
                                  l2563 1348                                    l2555 1316  
                                  l2547 12EE                                    l2539 12CE  
                                  l3099 2B66                                    l3179 2782  
                                  l3187 329E                                    l2731 3366  
                                  l3427 11DA                                    l3435 1232  
                                  l3419 11A2                                    l3371 0FCE  
                                  l3363 0F3C                                    l3355 0F0C  
                                  l3347 0E48                                    l3339 0DE0  
                                  l3291 0B36                                    l3283 0A7E  
                                  l3259 097C                                    l3531 186E  
                                  l3523 17F8                                    l3515 17A6  
                                  l3507 1782                                    l3701 3080  
                                  l3461 29F4                                    l3453 297C  
                                  l3445 2948                                    l2821 21B8  
                                  l2813 216C                                    l2805 2134  
                                  l2901 1C18                                    l2725 1730  
                                  l2717 1718                                    l2709 16E0  
                                  l2653 1524                                    l2661 157A  
                                  l2645 14EC                                    l2637 14C0  
                                  l2629 148E                                    l2581 1392  
                                  l2573 1382                                    l2565 134A  
                                  l2557 1318                                    l2549 1300  
                                  l3189 32A2                                    l2733 3378  
                                  l3437 1242                                    l3429 11F0  
                                  l3381 102C                                    l3373 0FEE  
                                  l3365 0F42                                    l3357 0F20  
                                  l3349 0E7C                                    l3293 0B3E  
                                  l3285 0AB0                                    l3277 0A06  
                                  l3541 18FA                                    l3533 188E  
                                  l3525 181C                                    l3509 1786  
                                  l3631 34D4                                    l3711 309E  
                                  l3703 3086                                    l3199 3314  
                                  l3471 2A6C                                    l3455 29B0  
                                  l3447 295C                                    l2831 21F8  
                                  l2823 21BA                                    l2815 2180  
                                  l2807 2144                                    l2751 2000  
                                  l2743 1FD4                                    l2911 1C58  
                                  l2903 1C26                                    l2719 171A  
                                  l2671 15CE                                    l2663 15A0  
                                  l2655 1558                                    l2647 14EE  
                                  l2639 14CE                                    l2591 13A6  
                                  l2583 1396                                    l2575 1386  
                                  l2559 1328                                    l2567 1352  
                                  l2735 337C                                    l3439 1258  
                                  l3391 1054                                    l3383 1032  
                                  l3375 100A                                    l3367 0F4A  
                                  l3359 0F24                                    l3287 0AEE  
                                  l3279 0A0C                                    l3551 198E  
                                  l3543 1902                                    l3527 1852  
                                  l3519 17B2                                    l3481 3194  
                                  l3633 34E4                                    l3625 34CA  
                                  l3713 30A4                                    l3705 308C  
                                  l3641 342E                                    l3721 2FF4  
                                  l2737 34A2                                    l3457 29B8  
                                  l2841 2234                                    l2833 2202  
                                  l2825 21CA                                    l2817 218E  
                                  l2809 2154                                    l2761 203A  
                                  l2753 2010                                    l2745 1FE0  
                                  l2921 1CA2                                    l2913 1C5E  
                                  l2905 1C28                                    l2681 15F8  
                                  l2673 15DC                                    l2665 15B0  
                                  l2657 155A                                    l2649 14F8  
                                  l2593 13AA                                    l2585 139A  
                                  l2577 138A                                    l2569 1362  
                                  l2729 335A                                    l3385 103A  
                                  l3377 1018                                    l3393 105A  
                                  l3369 0F56                                    l3289 0B02  
                                  l3297 0B7E                                    l3561 19F8  
                                  l3545 1910                                    l3537 189C  
                                  l3529 1860                                    l3801 237E  
                                  l3731 3534                                    l3491 31BA  
                                  l3483 3196                                    l3627 34CC  
                                  l3715 30AA                                    l3707 3092  
                                  l3651 344A                                    l3643 3430  
                                  l3635 3418                                    l3723 2FF8  
                                  l2739 34BE                                    l3467 2A2A  
                                  l3459 29C0                                    l2851 22A6  
                                  l2843 2242                                    l2835 2210  
                                  l2827 21DC                                    l2819 219A  
                                  l2771 2066                                    l2763 2040  
                                  l2755 2020                                    l2747 1FEE  
                                  l2931 1CF2                                    l2923 1CAE  
                                  l2915 1C7E                                    l2907 1C38  
                                  l2691 162A                                    l2683 1608  
                                  l2675 15DE                                    l2659 156A  
                                  l2595 13AE                                    l2587 139E  
                                  l2579 138E                                    l3395 106C  
                                  l3387 104A                                    l3379 1028  
                                  l3299 0BB8                                    l3563 1A00  
                                  l3571 1A42                                    l3555 199C  
                                  l3547 1934                                    l3539 18D6  
                                  l3811 23A0                                    l3803 2382  
                                  l3733 352C                                    l3493 31C0  
                                  l3485 31A4                                    l3477 3180  
                                  l3629 34D2                                    l3709 3098  
                                  l3645 3438                                    l3637 3424  
                                  l3717 2FB8                                    l3725 3500  
                                  l3469 2A5A                                    l2861 2312  
                                  l2853 22B4                                    l2845 2270  
                                  l2829 21F2                                    l2837 2222  
                                  l2781 20A0                                    l2773 2076  
                                  l2765 2046                                    l2757 2022  
                                  l2749 1FF0                                    l2941 1D34  
                                  l2933 1CFE                                    l2925 1CB8  
                                  l2917 1C8E                                    l2909 1C48  
                                  l2693 1640                                    l2677 15EC  
                                  l2669 15C4                                    l2685 160A  
                                  l2597 13B2                                    l2589 13A2  
                                  l3397 107E                                    l3389 104E  
                                  l3581 1AF4                                    l3573 1A62  
                                  l3565 1A08                                    l3549 196E  
                                  l3557 19D6                                    l3653 322C  
                                  l3741 31FC                                    l3821 23DE  
                                  l3813 23A4                                    l3805 2386  
                                  ?_pad 0011                                    l3495 31C2  
                                  l3487 31AA                                    l3479 318E  
                                  l3671 311A                                    l3647 3440  
                                  l3639 3426                                    l3719 2FC4  
                                  l3663 3522                                    l3727 34E8  
                                  l3751 27B4                                    l2871 2360  
                                  l2863 232C                                    l2855 22DE  
                                  l2839 2230                                    l2783 20B6  
                                  l2775 2086                                    l2767 2054  
                                  l2759 202A                                    l2951 1D96  
                                  l2943 1D40                                    l2935 1D0A  
                                  l2927 1CCE                                    l2679 15F4  
                                  l2687 1618                                    l2599 13B6  
                                  l3399 1082                                    l3583 1B14  
                                  l3575 1A96                                    l3591 1B6E  
                                  l3559 19E6                                    l3655 3238  
                                  l3743 3218                                    l3735 31DA  
                                  l3831 24E0                                    l3823 2448  
                                  l3815 23A6                                    l3807 238A  
                                  l3497 31D0                                    l3489 31AC  
                                  l3681 315E                                    l3673 312A  
                                  l3649 3442                                    l3665 3526  
                                  l3729 34EE                                    l3761 282C  
                                  l3753 27FA                                    l2873 2362  
                                  l2865 2348                                    l2849 229A  
                                  l2857 22E2                                    l2785 20C6  
                                  l2793 20E6                                    l2777 2088  
                                  l2769 2056                                    l2961 1E2C  
                                  l2953 1DA2                                    l2945 1D50  
                                  l2937 1D18                                    l2929 1CDA  
                                  l2881 1BAA                                    l2697 166A  
                                  l2689 161C                                    l3569 1A10  
                                  l3657 3256                                    l3737 31EC  
                                  l3841 2548                                    l3833 24EC  
                                  l3825 247C                                    l3817 23AC  
                                  l3809 2394                                    l3499 31D6  
                                  l3691 3044                                    l3683 3170  
                                  l3675 313C                                    l3667 3528  
                                  l3771 28B4                                    l3763 2838  
                                  l3755 2810                                    l3747 2796  
                                  l2867 234C                                    l2859 22FC  
                                  l2795 20F6                                    l2787 20CE  
                                  l2779 2090                                    l2971 1E82  
                                  l2963 1E4A                                    l2955 1DBE  
                                  l2947 1D6A                                    l2939 1D24  
                                  l2891 1BE6                                    l2883 1BB6  
                                  l2699 1676                                    l3579 1ACA  
                                  l3595 1B80                                    l3659 3272  
                                  l3739 31F4                                    l3843 2562  
                                  l3835 251E                                    l3827 24B0  
                                  l3819 23D6                                    l3669 3514  
                                  l3693 3054                                    l3685 3176  
                                  l3677 3142                                    l3781 28F2  
                                  l3773 28C0                                    l3765 286A  
                                  l3749 27A6                                    l2869 235A  
                                  l2797 20F6                                    l2789 20D2  
                                  l2981 1EEC                                    l2973 1E86  
                                  l2965 1E54                                    l2957 1DE8  
                                  l2949 1D7A                                    l2893 1BF6  
                                  l2885 1BC4                                    l3589 1B42  
                                  l3837 252E                                    l3829 24BA  
                                  l3695 305A                                    l3687 3036  
                                  l3679 314C                                    l3783 2916  
                                  l3775 28CE                                    l3767 286C  
                                  l3759 2824                                    l2991 1F4E  
                                  l2983 1EF8                                    l2975 1E94  
                                  l2967 1E62                                    l2959 1E1E  
                                  l2895 1BFC                                    l2887 1BC6  
                                  l3839 2546                                    l3697 306A  
                                  l3689 303E                                    l3785 2926  
                                  l3777 28EC                                    l3769 2878  
                                  l2993 1F62                                    l2985 1F06  
                                  l2977 1EC2                                    l2969 1E74  
                                  l2897 1C0C                                    l2889 1BD6  
                                  l3699 3070                                    l3787 2934  
                                  l3779 28EE                                    l2995 1F7C  
                                  l2987 1F30                                    l2899 1C12  
                                  l3789 2936                                    l2997 1F98  
                                  l2989 1F34                                    l3797 236E  
                                  l2999 1FA8                                    l3799 237A  
                                  l3993 17D8                                    l3995 1A24  
                                  l3997 1ADE                                    l3999 1B60  
                                  STR_1 0801                                    STR_2 080D  
                                  STR_3 0815                                    STR_6 0819  
                                  u2100 12AE                                    u2101 12AA  
                                  u2110 12BE                                    u2111 12BA  
                                  u2200 140A                                    u2120 1300  
                                  u3000 2AA8                                    u2121 12FC  
                                  u3001 2AA4                                    u2210 1432  
                                  u2130 1316                                    u3010 2ADC  
                                  u2050 2DAC                                    u2211 142E  
                                  u2131 1312                                    u2051 2DA8  
                                  u2300 156A                                    u2220 1450  
                                  u2140 1328                                    u3020 2B0A  
                                  u2060 2DBE                                    u3100 2EF8  
                                  u2301 1566                                    u2221 144C  
                                  u2141 1324                                    u3021 2B06  
                                  u2061 2DBA                                    u3101 2EF4  
                                  u2310 15A0                                    u2230 1470  
                                  u2150 1338                                    u3030 2B1E  
                                  u3110 2CDC                                    u2070 2DE6  
                                  _LATB 000F8A                                    u2311 159C  
                                  u2231 146C                                    u2151 1334  
                                  u3031 2B1A                                    u3015 2AD2  
                                  u2071 2DE2                                    u4000 28EC  
                                  u2400 166A                                    u2320 15B0  
                                  u2240 147E                                    u2160 1374  
                                  u3040 2B46                                    u3120 2CFA  
                                  u3200 25CA                                    u2080 2E1C  
                                  _LATD 000F8C                                    u4001 28E8  
                                  u2401 1666                                    u2321 15AC  
                                  u2241 147A                                    u2161 1370  
                                  u3041 2B42                                    u3121 2CF6  
                                  u2081 2E18                                    u4010 2926  
                                  u2410 1684                                    u2330 15DC  
                                  u2250 148E                                    u2170 1382  
                                  u2090 129C                                    u3050 2B66  
                                  u3130 2D22                                    u3210 25F8  
                                  u4011 2922                                    u2411 1680  
                                  u2331 15D8                                    u2251 148A  
                                  u2171 137E                                    u2091 1298  
                                  u3051 2B62                                    u3131 2D1E  
                                  u3115 2CD2                                    u3211 25F4  
                                  u4020 2934                                    u2500 2000  
                                  u2420 16BE                                    u2340 15EC  
                                  u2260 14C0                                    u2180 13F0  
                                  u3060 2B76                                    u3140 2D4C  
                                  u3220 261A                                    u3300 32CC  
                                  u4021 2930                                    u2501 1FFC  
                                  u2421 16BA                                    u2341 15E8  
                                  u2261 14BC                                    u2181 13EC  
                                  u3061 2B72                                    u3141 2D48  
                                  u3221 2616                                    u3205 25C0  
                                  u3301 32C8                                    u3310 3472  
                                  u2510 2010                                    u2430 16D0  
                                  u2350 1608                                    u2270 14CE  
                                  u2190 1408                                    u3070 2E72  
                                  u4030 23BC                                    u3311 346C  
                                  u2511 200C                                    u2431 16CC  
                                  u2351 1604                                    u2271 14CA  
                                  u2191 1402                                    u3071 2E6E  
                                  u4031 23B8                                    u3320 3474  
                                  u2600 21DC                                    u2520 2054  
                                  u2440 16E0                                    u2360 1618  
                                  u2280 14EC                                    u3160 2D86  
                                  u3240 2686                                    u3080 2E94  
                                  u3400 0966                                    u4040 23CC  
                                  u2601 21D8                                    u2521 2050  
                                  u2441 16DC                                    u2361 1614  
                                  u2281 14E8                                    u3161 2D80  
                                  u3241 2682                                    u3081 2E90  
                                  u3401 0962                                    u4041 23C8  
                                  u3330 332C                                    u2610 21F2  
                                  u2530 2066                                    u2450 1700  
                                  u2370 162A                                    u2290 1524  
                                  u3170 2D88                                    u3250 26AA  
                                  u3090 2EEA                                    u3410 0978  
                                  u4050 251E                                    u3331 3328  
                                  u2611 21EE                                    u2531 2062  
                                  u2451 16FC                                    u2371 1626  
                                  u2291 1520                                    u3155 2D5E  
                                  u3235 262E                                    u3091 2EE6  
                                  u3411 0974                                    u4107 253A  
                                  u4051 251A                                    u3340 334E  
                                  u2700 232C                                    u2620 2210  
                                  u2540 2076                                    u2460 1712  
                                  u2380 1640                                    u3260 26C6  
                                  u3236 2638                                    u3180 33DC  
                                  u3500 0C08                                    u3420 09F2  
                                  u4060 2574                                    u3341 334A  
                                  u2701 2328                                    u2621 220C  
                                  u2541 2072                                    u2461 170E  
                                  u2381 163C                                    u3261 26C2  
                                  u3237 2648                                    u3181 33D8  
                                  u3501 0C04                                    u3421 09EE  
                                  u4061 2570                                    u4117 2556  
                                  u2710 235A                                    u2630 2230  
                                  u2550 20B6                                    u2470 172E  
                                  u2390 1656                                    u3270 271A  
                                  u3190 30D0                                    u3510 0C32  
                                  u3430 0A7E                                    u3350 0842  
                                  u4127 3432                                    u2711 2356  
                                  u2631 222C                                    u2551 20B2  
                                  u2471 172A                                    u2391 1652  
                                  u3255 26A0                                    u3191 30CC  
                                  u3511 0C2E                                    u3431 0A7A  
                                  u3351 083E                                    u2640 2242  
                                  u2560 20F6                                    u2800 1E08  
                                  u2720 1BC4                                    u3280 2736  
                                  u2480 339C                                    u3600 1018  
                                  u3520 0D7A                                    u3440 0AB0  
                                  u3360 088C                                    u4137 3444  
                                  u2641 223E                                    u2561 20F2  
                                  u2721 1BC0                                    u3281 2732  
                                  u2481 3398                                    u3601 1014  
                                  u3521 0D76                                    u3441 0AAC  
                                  u3361 0888                                    u2650 2270  
                                  u2570 216C                                    u2490 1FEE  
                                  u2810 1E62                                    u2730 1BD6  
                                  u3290 2772                                    u3610 106C  
                                  u3530 0DE0                                    u3450 0AEE  
                                  u3370 089C                                    u4147 304A  
                                  u2651 226C                                    u2571 2168  
                                  u2491 1FEA                                    u2811 1E5E  
                                  u2731 1BD2                                    u3291 276E  
                                  u3275 2710                                    u3611 1068  
                                  u3531 0DDC                                    u3451 0AEA  
                                  u3371 0898                                    u3700 297C  
                                  u2660 2286                                    u2580 218E  
                                  u2900 1FB6                                    u2820 1E82  
                                  u2740 1BE6                                    u3620 113E  
                                  u3540 0E28                                    u3460 0B7A  
                                  u3380 08DA                                    u4157 3060  
                                  u3701 2978                                    u2661 2282  
                                  u2581 218A                                    u2901 1FB2  
                                  u2821 1E7E                                    u2805 1DFE  
                                  u2741 1BE2                                    u3621 113A  
                                  u3541 0E24                                    u3461 0B76  
                                  u3381 08D6                                    u3710 29AC  
                                  u2670 229A                                    u2590 21B8  
                                  u2910 2F3C                                    u2830 1E94  
                                  u2750 1C26                                    u3630 115A  
                                  u3550 0E38                                    u3470 0BB0  
                                  u3390 08EC                                    u4167 3076  
                                  u3711 29A8                                    u2671 2296  
                                  u2591 21B4                                    u2911 2F38  
                                  u2831 1E90                                    u2751 1C22  
                                  u3631 1156                                    u3551 0E34  
                                  u3471 0BAC                                    u3391 08E8  
                                  u3720 2A5A                                    u2680 22B4  
                                  u2920 2F7A                                    u2840 1EC2  
                                  u2760 1C38                                    u3640 11C2  
                                  u3560 0ED2                                    u3480 0BC8  
                                  u3800 181C                                    u4177 34DA  
                                  u3721 2A56                                    u2681 22B0  
                                  u2921 2F76                                    u2841 1EBE  
                                  u2761 1C34                                    u3641 11BC  
                                  u3561 0ECE                                    u3481 0BC4  
                                  u3801 1818                                    u4097 23A8  
                                  u3730 2A6C                                    u2690 22FC  
                                  u2930 2FAE                                    u2850 1ED8  
                                  u2770 1C48                                    u3650 11C4  
                                  u3570 0F20                                    u3490 0BFA  
                                  u3810 1860                                    u3731 2A68  
                                  u2691 22F8                                    u2931 2FAA  
                                  u2851 1ED4                                    u2771 1C44  
                                  u3571 0F1C                                    u3491 0BF6  
                                  u3811 185C                                    u3740 318E  
                                  u3900 2FF0                                    u2940 2BC6  
                                  u2860 1EEC                                    u2780 1C7E  
                                  u3660 11D6                                    u3580 0FCE  
                                  u3820 18D6                                    u3741 318A  
                                  u2941 2BC2                                    u2861 1EE8  
                                  u2781 1C7A                                    u3661 11D2  
                                  u3581 0FCA                                    u3821 18D2  
                                  u3750 31A4                                    u3910 3024  
                                  u2950 2C04                                    u2870 1F06  
                                  u2790 1C8E                                    u3670 1214  
                                  u3590 100A                                    u3830 18FA  
                                  u3751 31A0                                    u2951 2C00  
                                  u2871 1F02                                    u2791 1C8A  
                                  u3671 1210                                    u3591 1006  
                                  u3831 18F6                                    u3760 31BA  
                                  u3920 3034                                    u2960 2C22  
                                  u2880 1F4E                                    u3680 1232  
                                  u3840 1934                                    u3761 31B6  
                                  u3921 3030                                    u2961 2C1E  
                                  u2881 1F4A                                    u3681 122E  
                                  u3841 1930                                    u3770 31D0  
                                  u3930 27A6                                    u2970 2C42  
                                  u2890 1F7C                                    u3690 1242  
                                  u3850 19D6                                    u3771 31CC  
                                  u3907 2FE6                                    u3931 27A2  
                                  u2971 2C3E                                    u2891 1F78  
                                  u3691 123E                                    u3851 19D2  
                                  u3940 27B4                                    u2980 2C92  
                                  u3860 1A5E                                    u3780 1766  
                                  u3917 301A                                    u3941 27B0  
                                  u2981 2C8E                                    u3861 1A5A  
                                  u3781 1762                                    u3950 2810  
                                  u2990 33F4                                    u3790 17F8  
                                  u3870 3272                                    u3951 280C  
                                  u2991 33F0                                    u3791 17F4  
                                  u3871 326E                                    u3880 312A  
                                  u3960 2866                                    u3881 3126  
                                  u3961 2862                                    u3890 315E  
                                  u3970 28B0                                    u3891 315A  
                                  u3971 28AC                                    u3980 28CE  
                                  u3981 28CA                                    u3990 28DE  
                                  u3991 28DA                   _INTERRUPT_INTx_Config 352C  
                                  _TMR0 000FD6                       ?_Lcd_Write_String 0005  
                                  _dbuf 0100                                    _labs 30B2  
                                  _atoi 2948                                    _main 236E  
                                  _prec 00CF                                    _time 00E8  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                                    btemp 005F  
                         ___fpclassifyf 2C9C                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0032  
                    ??_Lcd_Write_String 0007                         ___fldiv@new_exp 0039  
                       __end_of_Lcd_Cmd 34E8                            ___param_bank 000000  
      ??_RutinaServicioInterrupcion_ISR 0001         ?_RutinaServicioInterrupcion_ISR 0001  
                                 ??_pad 0017                           ___fltol@sign1 0009  
                                 ?_labs 0001                                   ?_atoi 0007  
                       __end_of___fladd 1742                                   ?_main 0001  
                       __end_of___fldiv 236E                         __end_of___flneg 3416  
                       __end_of___flmul 1FD4                         __end_of___flsub 3314  
                       __end_of___fltol 2B98                                   i2l134 002E  
                          vfpfcnvrt@fmt 008E                                   _TRISB 000F93  
                                 _TRISD 000F95                                   _flags 005E  
                                 _fputc 2D9A                                   _fputs 335A  
                       __end_of_isdigit 347A                                   labs@a 0001  
                                 atoi@n 000E                                   pad@fp 0011  
                                 atoi@s 0007                                   _width 00CD  
                                 _putch 353A                         __end_of_isspace 335A  
                                 tablat 000FF5                                   ttemp5 0060  
                                 ttemp6 0063                                   ttemp7 0067  
                                 status 000FD8                                   wtemp8 0060  
                       __end_of_sprintf 322C                          ?___fpclassifyf 0001  
                      __end_of_Lcd_Init 30B2                        __end_of_Lcd_Port 31DA  
                       __initialization 347A                            __end_of_labs 3118  
                          __end_of_atoi 2A92                            __end_of_main 2582  
                                ??_labs 0005                                  ??_atoi 0009  
                                ??_main 00BF                           __activetblptr 000002  
                      ??_OSCILADOR_Init 0001                                  ?_fputc 0001  
                                ?_fputs 000A                  ?_INTERRUPT_INTx_Config 0001  
                                ?_putch 0001                                  _ANSELB 000F5C  
                                _ANSELD 000F5E                                  i2l3851 002C  
                                i2l3845 000A                                  i2l3847 0018  
                                i2l3849 0026                               ??_Lcd_Cmd 0002  
                         vfpfcnvrt@done 009D                        __end_of___xxtofl 2948  
                          vfprintf@cfmt 00A8                                  ___flge 2B98  
                                ___fleq 2F0E                       __end_of_TMR0_Init 3500  
                             ??___fladd 0009                                  ___wmul 34A2  
                             ??___fldiv 0030                               ??___flneg 0005  
                             ??___flmul 0017                               ??___flsub 0030  
                             ??___fltol 0005                                  _efgtoa 081E  
                     __end_of_PORT_Init 3514                                  _floorf 2582  
                                _memcpy 327E                                  clear_0 3480  
                                clear_1 348C                                  isa$std 000001  
                                pad@buf 0013                                  _strcpy 339E  
                                fputc@c 0001                                  fputs@c 000E  
                                fputs@i 000F                                  fputs@s 000A  
                             ??_isdigit 0003                         ___fpclassifyf@e 0009  
                       ___fpclassifyf@u 000B                         ___fpclassifyf@x 0001  
                          __mediumconst 0000                               ??_isspace 0003  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                                  putch@c 0001  
                      __end_of_vfprintf 327E                               ??_sprintf 005E  
                       Lcd_Set_Cursor@a 0005                         Lcd_Set_Cursor@b 0004  
                       Lcd_Set_Cursor@y 0007                         Lcd_Set_Cursor@z 0006  
                            ___flge@ff1 0028                              ___flge@ff2 002C  
                       ??___fpclassifyf 0005                            ___xxtofl@arg 000B  
                          ___xxtofl@exp 000A                            ___xxtofl@val 0001  
                            ___fleq@ff1 0001                              ___fleq@ff2 0005  
                            __accesstop 0060                 __end_of__initialization 3494  
                            ___flneg@f1 0001                       __end_of_Lcd_Clear 3522  
                         ___rparam_used 000001                              ___fltol@f1 0001  
                        __pcstackCOMRAM 0001                           __end_of_fputc 2E64  
                         __end_of_fputs 339E                           __end_of_putch 353C  
                        _Lcd_Set_Cursor 3118                               ?_Lcd_Init 0001  
                             ?_Lcd_Port 0001                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00C1                              __pbssBANK1 0100  
                               ?___flge 0028                                 ?___fleq 0001  
                               ?___wmul 0001                                 ?_efgtoa 0055  
                               ?_floorf 0041                                 ?_memcpy 0001  
                __end_of_Lcd_Set_Cursor 317E                                 ?_strcpy 0001  
                             ?___xxtofl 0001                              ??_Lcd_Init 0004  
__end_of_RutinaServicioInterrupcion_ISR 0032          _RutinaServicioInterrupcion_ISR 0008  
                            ??_Lcd_Port 0001                          _Lcd_Write_Char 3416  
                               _Lcd_Cmd 34C8                 _INTERRUPT_Global_Config 3534  
                               __Hparam 0000                                 __Lparam 0000  
                               ___fladd 1282                                 ___fldiv 1FD4  
                               ___flneg 33DE                                 ___flmul 1BAA  
                               ___flsub 32CE                                 ___fltol 2A92  
                             ?_vfprintf 00A2                            __psmallconst 0800  
                               __pcinit 347A                                 __ramtop 0800  
                       ?_Lcd_Set_Cursor 0004                                 __ptext0 236E  
                               __ptext1 31DA                                 __ptext2 322C  
                               __ptext3 1742                                 __ptext4 081E  
                               __ptext5 339E                                 __ptext6 2E64  
                               __ptext7 335A                                 __ptext8 2D9A  
                               __ptext9 353A                               _T0CONbits 000FD5  
                               _isdigit 344E                              ??___xxtofl 0005  
               ??_INTERRUPT_INTx_Config 0001                                 _isspace 3314  
                               efgtoa@c 005B                                 efgtoa@d 006B  
                               efgtoa@e 006F                                 efgtoa@f 0057  
                               efgtoa@g 0082                                 efgtoa@h 0077  
                               efgtoa@i 007F                                 efgtoa@l 007B  
                               efgtoa@m 006D                                 efgtoa@n 0086  
                               efgtoa@p 0062                                 efgtoa@t 0064  
                               efgtoa@u 0088                                 efgtoa@w 0071  
                               atoi@neg 000C                                 _sprintf 31DA  
                __end_of_Lcd_Write_Char 344E                    end_of_initialization 3494  
                               floorf@e 004F                                 floorf@m 004B  
                               floorf@u 0051                                 floorf@x 0041  
                               memcpy@d 0007                                 memcpy@n 0005  
                               memcpy@s 0009                                 fputc@fp 0003  
                         __Lmediumconst 0000                                 fputs@fp 000C  
                     __end_of_vfpfcnvrt 1BAA                              efgtoa@mode 0069  
                            efgtoa@sign 0081                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                        vfpfcnvrt@convarg 0095  
                             Lcd_Port@a 0001                              ??_vfprintf 005E  
                               strcpy@d 0007                                 strcpy@s 0005  
                             _TMR0_Init 34E8                               _PORTDbits 000F83  
                             _PORT_Init 3500                             ___fladd@grs 0010  
                         ___xxtofl@sign 0009                             ___fldiv@grs 003B  
                           ___fldiv@rem 0034                         ?_Lcd_Write_Char 0001  
                     Lcd_Write_String@a 0005                       Lcd_Write_String@i 0009  
                           ___flmul@grs 001C               ??_INTERRUPT_Global_Config 0001  
                             _Lcd_Clear 3514                          __end_of___flge 2C9C  
                        __end_of___fleq 2FB8                             vfpfcnvrt@ap 0090  
                           vfpfcnvrt@cp 00A0                             vfpfcnvrt@fp 008C  
                        __end_of___wmul 34C8                        _Lcd_Write_String 2FB8  
                        __end_of_efgtoa 1282                              ?_TMR0_Init 0001  
                        __end_of_floorf 2794                          __end_of_memcpy 32CE  
                            floorf@F526 00C1                              ?_PORT_Init 0001  
                        __end_of_strcpy 33DE                     start_initialization 347A  
                           __end_of_pad 2F0E                   __end_of___fpclassifyf 2D9A  
                           vfprintf@fmt 00A4                              ?_Lcd_Clear 0001  
                              ??___flge 0030                                ??___fleq 0009  
                              ??___wmul 0005                                ??_efgtoa 005C  
                              ??_floorf 0045                                ??_memcpy 0007  
                       Lcd_Write_Char@a 0004                         Lcd_Write_Char@y 0003  
                              ??_strcpy 0005                               ___fladd@a 0005  
                             ___fladd@b 0001                               ___fldiv@a 002C  
                             ___fldiv@b 0028                               ___flmul@a 0013  
                             ___flmul@b 000F                             __pbssCOMRAM 005E  
                             ___flsub@a 002C                               ___flsub@b 0028  
                         __pcstackBANK0 0060                                ?_Lcd_Cmd 0001  
                           _efgtoa$1107 0066                        ??_Lcd_Set_Cursor 0005  
                             __pintcode 0008                                ?___fladd 0001  
                              ?___fldiv 0028                                ?___flneg 0001  
                              ?___flmul 000F                                ?___flsub 0028  
                              ?___fltol 0001                             ??_TMR0_Init 0001  
                           ??_PORT_Init 0001                             __smallconst 0800  
                              ?_isdigit 0001                                ?_isspace 0001  
                             _is_danger 00D3           __end_of_INTERRUPT_INTx_Config 3534  
                              ?_sprintf 00AA                          ___wmul@product 0005  
                              _LATBbits 000F8A                                _LATDbits 000F8C  
                              Lcd_Cmd@a 0003                                i2u407_40 0018  
                              i2u407_41 0014                                i2u408_40 0026  
                              i2u408_41 0022                             ??_Lcd_Clear 0004  
                              _RCONbits 000FD0                               _vfpfcnvrt 1742  
                     ___wmul@multiplier 0001                        ??_Lcd_Write_Char 0002  
                          _isspace$1185 0005                                _Lcd_Init 3036  
                              _Lcd_Port 317E                              vfpfcnvrt@c 009F  
                           _INTCON2bits 000FF1                __end_of_Lcd_Write_String 3036  
                           _counterTMR0 00D1                          _OSCILADOR_Init 3522  
                              __Hrparam 0000                               memcpy@tmp 000B  
                            vfprintf@ap 00A6                                __Lrparam 0000  
                            vfprintf@fp 00A2                              ?_vfpfcnvrt 008C  
                    ___fpclassifyf@F465 00C5                              sprintf@fmt 00AC  
                              ___xxtofl 2794                                __ptext10 327E  
                              __ptext11 30B2                                __ptext20 2F0E  
                              __ptext12 2582                                __ptext21 1FD4  
                              __ptext13 2C9C                                __ptext30 2FB8  
                              __ptext22 2948                                __ptext14 2A92  
                              __ptext31 3416                                __ptext23 3314  
                              __ptext15 32CE                                __ptext32 3118  
                              __ptext24 344E                                __ptext16 1282  
                              __ptext33 3036                                __ptext25 34A2  
                              __ptext17 33DE                                __ptext34 3514  
                              __ptext26 2794                                __ptext18 1BAA  
                              __ptext35 34C8                                __ptext27 34E8  
                              __ptext19 2B98                                __ptext36 317E  
                              __ptext28 3500                                __ptext37 352C  
                              __ptext29 3522                                __ptext38 3534  
                              _distance 00C9                              strcpy@dest 0001  
                __end_of_OSCILADOR_Init 352C                                efgtoa@fp 0055  
                              efgtoa@ne 0060                                efgtoa@pp 0068  
                              efgtoa@ou 0073                                isa$xinst 000000  
                              int$flags 005F                                _vfprintf 322C  
                            _INTCONbits 000FF2                                memcpy@d1 0001  
                              memcpy@s1 0003                                isdigit@c 0001  
              ?_INTERRUPT_Global_Config 0001                      Lcd_Write_Char@temp 0002  
                              intlevel2 0000                               sprintf@ap 00B2  
                       ?_OSCILADOR_Init 0001                                isspace@c 0001  
                             strcpy@src 0003                              _OSCCONbits 000FD3  
                           efgtoa@nmode 006A                             ??_vfpfcnvrt 0092  
                    Lcd_Set_Cursor@temp 0008                                sprintf@f 00B4  
                              sprintf@s 00AA                           ___fladd@signs 000D  
                          ___fladd@aexp 000E                            ___fladd@bexp 000F  
                           _strDistance 00D4  
